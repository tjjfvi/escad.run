/* esm.sh - esbuild bundle(three@0.112.1/examples/jsm/controls/OrbitControls) deno production */var zh=Object.defineProperty;var f=(e,t)=>zh(e,"name",{value:t,configurable:!0});Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e;});Math.sign===void 0&&(Math.sign=function(e){return e<0?-1:e>0?1:+e;});"name"in Function.prototype||Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];}});Object.assign===void 0&&(Object.assign=function(e){if(e==null)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(r!=null)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i]);}return t;});var Gh="112",Qt={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},An={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Hh=0,Xl=1,Vh=2;var Au=1,kh=2,Ai=3,pa=0,ft=1,Wo=2,Lu=1;var Ru=0,Wh=1,va=2,Fn=0,Ri=1,Yl=2,Zl=3,Jl=4,jh=5,zr=100,qh=101,Xh=102,$l=103,Ql=104,Yh=200,Zh=201,Jh=202,$h=203,Pu=204,Cu=205,Qh=206,Kh=207,ef=208,tf=209,nf=210,rf=0,af=1,of=2,Ps=3,sf=4,lf=5,cf=6,uf=7,jo=0,hf=1,ff=2,eo=0,Ll=1,df=2,pf=3,vf=4,mf=5,Rl=300,Pl=301,Cl=302,Du=303,Dl=304,Ou=305,ma=306,Ol=307,ro=1e3,At=1001,io=1002,lt=1003,Cs=1004;var Ds=1005;var dt=1006,Iu=1007;var qo=1008;var Xo=1009,gf=1010,yf=1011,ao=1012,xf=1013,Nu=1014,Oi=1015,Il=1016,_f=1017,bf=1018,wf=1019,oo=1020,Mf=1021,cr=1022,sn=1023,Ef=1024,Tf=1025,Sf=sn,qr=1026,Ii=1027,Af=1028,Lf=1029,Rf=1030,Pf=1031,Cf=1032,Df=1033,Kl=33776,ec=33777,tc=33778,nc=33779,rc=35840,ic=35841,ac=35842,oc=35843,Of=36196,If=37808,Nf=37809,Ff=37810,Bf=37811,Uf=37812,zf=37813,Gf=37814,Hf=37815,Vf=37816,kf=37817,Wf=37818,jf=37819,qf=37820,Xf=37821,Yf=2200,Zf=2201,Jf=2202,so=2300,to=2301,es=2302,Yr=2400,Hr=2401,lo=2402,$f=0;var It=3e3,Nl=3001,Fu=3007,Fl=3002,Qf=3003,Bu=3004,Uu=3005,zu=3006,Kf=3200,ed=3201,di=0,td=1;var ts=7680;var nd=519,Yo=35044,Ni=35048;function Wt(){}f(Wt,"EventDispatcher");Object.assign(Wt.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});var n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t);},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;var n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1;},removeEventListener:function(e,t){if(this._listeners!==void 0){var n=this._listeners,r=n[e];if(r!==void 0){var i=r.indexOf(t);i!==-1&&r.splice(i,1);}}},dispatchEvent:function(e){if(this._listeners!==void 0){var t=this._listeners,n=t[e.type];if(n!==void 0){e.target=this;for(var r=n.slice(0),i=0,a=r.length;i<a;i++)r[i].call(this,e);}}}});var pt=[];for(br=0;br<256;br++)pt[br]=(br<16?"0":"")+br.toString(16);var br,Pe={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,r=Math.random()*4294967295|0,i=pt[e&255]+pt[e>>8&255]+pt[e>>16&255]+pt[e>>24&255]+"-"+pt[t&255]+pt[t>>8&255]+"-"+pt[t>>16&15|64]+pt[t>>24&255]+"-"+pt[n&63|128]+pt[n>>8&255]+"-"+pt[n>>16&255]+pt[n>>24&255]+pt[r&255]+pt[r>>8&255]+pt[r>>16&255]+pt[r>>24&255];return i.toUpperCase();},clamp:function(e,t,n){return Math.max(t,Math.min(n,e));},euclideanModulo:function(e,t){return(e%t+t)%t;},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t);},lerp:function(e,t,n){return(1-n)*e+n*t;},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e));},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10));},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1));},randFloat:function(e,t){return e+Math.random()*(t-e);},randFloatSpread:function(e){return e*(.5-Math.random());},degToRad:function(e){return e*Pe.DEG2RAD;},radToDeg:function(e){return e*Pe.RAD2DEG;},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0;},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2));},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2));}};function G(e,t){this.x=e||0,this.y=t||0;}f(G,"Vector2");Object.defineProperties(G.prototype,{width:{get:function(){return this.x;},set:function(e){this.x=e;}},height:{get:function(){return this.y;},set:function(e){this.y=e;}}});Object.assign(G.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this;},setScalar:function(e){return this.x=e,this.y=e,this;},setX:function(e){return this.x=e,this;},setY:function(e){return this.y=e,this;},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e);}return this;},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y);},copy:function(e){return this.x=e.x,this.y=e.y,this;},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this);},addScalar:function(e){return this.x+=e,this.y+=e,this;},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this;},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this;},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this);},subScalar:function(e){return this.x-=e,this.y-=e,this;},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this;},multiply:function(e){return this.x*=e.x,this.y*=e.y,this;},multiplyScalar:function(e){return this.x*=e,this.y*=e,this;},divide:function(e){return this.x/=e.x,this.y/=e.y,this;},divideScalar:function(e){return this.multiplyScalar(1/e);},applyMatrix3:function(e){var t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this;},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this;},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this;},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this;},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this;},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)));},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this;},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this;},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this;},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this;},negate:function(){return this.x=-this.x,this.y=-this.y,this;},dot:function(e){return this.x*e.x+this.y*e.y;},cross:function(e){return this.x*e.y-this.y*e.x;},lengthSq:function(){return this.x*this.x+this.y*this.y;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y);},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y);},normalize:function(){return this.divideScalar(this.length()||1);},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e;},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e));},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n;},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y);},setLength:function(e){return this.normalize().multiplyScalar(e);},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this;},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e);},equals:function(e){return e.x===this.x&&e.y===this.y;},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this;},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e;},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this;},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this;}});function gt(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=r!==void 0?r:1;}f(gt,"Quaternion");Object.assign(gt,{slerp:function(e,t,n,r){return n.copy(e).slerp(t,r);},slerpFlat:function(e,t,n,r,i,a,o){var s=n[r+0],l=n[r+1],c=n[r+2],u=n[r+3],h=i[a+0],d=i[a+1],p=i[a+2],v=i[a+3];if(u!==v||s!==h||l!==d||c!==p){var y=1-o,m=s*h+l*d+c*p+u*v,x=m>=0?1:-1,_=1-m*m;if(_>Number.EPSILON){var w=Math.sqrt(_),T=Math.atan2(w,m*x);y=Math.sin(y*T)/w,o=Math.sin(o*T)/w;}var M=o*x;if(s=s*y+h*M,l=l*y+d*M,c=c*y+p*M,u=u*y+v*M,y===1-o){var R=1/Math.sqrt(s*s+l*l+c*c+u*u);s*=R,l*=R,c*=R,u*=R;}}e[t]=s,e[t+1]=l,e[t+2]=c,e[t+3]=u;}});Object.defineProperties(gt.prototype,{x:{get:function(){return this._x;},set:function(e){this._x=e,this._onChangeCallback();}},y:{get:function(){return this._y;},set:function(e){this._y=e,this._onChangeCallback();}},z:{get:function(){return this._z;},set:function(e){this._z=e,this._onChangeCallback();}},w:{get:function(){return this._w;},set:function(e){this._w=e,this._onChangeCallback();}}});Object.assign(gt.prototype,{isQuaternion:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this;},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w);},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this;},setFromEuler:function(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,r=e._y,i=e._z,a=e.order,o=Math.cos,s=Math.sin,l=o(n/2),c=o(r/2),u=o(i/2),h=s(n/2),d=s(r/2),p=s(i/2);return a==="XYZ"?(this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p):a==="YXZ"?(this._x=h*c*u+l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p):a==="ZXY"?(this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u-h*d*p):a==="ZYX"?(this._x=h*c*u-l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u+h*d*p):a==="YZX"?(this._x=h*c*u+l*d*p,this._y=l*d*u+h*c*p,this._z=l*c*p-h*d*u,this._w=l*c*u-h*d*p):a==="XZY"&&(this._x=h*c*u-l*d*p,this._y=l*d*u-h*c*p,this._z=l*c*p+h*d*u,this._w=l*c*u+h*d*p),t!==!1&&this._onChangeCallback(),this;},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this;},setFromRotationMatrix:function(e){var t=e.elements,n=t[0],r=t[4],i=t[8],a=t[1],o=t[5],s=t[9],l=t[2],c=t[6],u=t[10],h=n+o+u,d;return h>0?(d=.5/Math.sqrt(h+1),this._w=.25/d,this._x=(c-s)*d,this._y=(i-l)*d,this._z=(a-r)*d):n>o&&n>u?(d=2*Math.sqrt(1+n-o-u),this._w=(c-s)/d,this._x=.25*d,this._y=(r+a)/d,this._z=(i+l)/d):o>u?(d=2*Math.sqrt(1+o-n-u),this._w=(i-l)/d,this._x=(r+a)/d,this._y=.25*d,this._z=(s+c)/d):(d=2*Math.sqrt(1+u-n-o),this._w=(a-r)/d,this._x=(i+l)/d,this._y=(s+c)/d,this._z=.25*d),this._onChangeCallback(),this;},setFromUnitVectors:function(e,t){var n=1e-6,r=e.dot(t)+1;return r<n?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize();},angleTo:function(e){return 2*Math.acos(Math.abs(Pe.clamp(this.dot(e),-1,1)));},rotateTowards:function(e,t){var n=this.angleTo(e);if(n===0)return this;var r=Math.min(1,t/n);return this.slerp(e,r),this;},inverse:function(){return this.conjugate();},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this;},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w;},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);},normalize:function(){var e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this;},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e);},premultiply:function(e){return this.multiplyQuaternions(e,this);},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,l=t._z,c=t._w;return this._x=n*c+a*o+r*l-i*s,this._y=r*c+a*s+i*o-n*l,this._z=i*c+a*l+n*s-r*o,this._w=a*c-n*o-r*s-i*l,this._onChangeCallback(),this;},slerp:function(e,t){if(t===0)return this;if(t===1)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*e._w+n*e._x+r*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=1-o*o;if(s<=Number.EPSILON){var l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*r+t*this._y,this._z=l*i+t*this._z,this.normalize(),this._onChangeCallback(),this;}var c=Math.sqrt(s),u=Math.atan2(c,o),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=a*h+this._w*d,this._x=n*h+this._x*d,this._y=r*h+this._y*d,this._z=i*h+this._z*d,this._onChangeCallback(),this;},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w;},fromArray:function(e,t){return t===void 0&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this;},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e;},_onChange:function(e){return this._onChangeCallback=e,this;},_onChangeCallback:function(){}});var ns=new E(),sc=new gt();function E(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0;}f(E,"Vector3");Object.assign(E.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this;},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this;},setX:function(e){return this.x=e,this;},setY:function(e){return this.y=e,this;},setZ:function(e){return this.z=e,this;},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e);}return this;},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z);},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this;},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this);},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this;},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this;},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this;},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this);},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this;},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this;},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this);},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this;},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this;},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(sc.setFromEuler(e));},applyAxisAngle:function(e,t){return this.applyQuaternion(sc.setFromAxisAngle(e,t));},applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this;},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize();},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this;},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*r-o*n,c=s*n+o*t-i*r,u=s*r+i*n-a*t,h=-i*t-a*n-o*r;return this.x=l*s+h*-i+c*-o-u*-a,this.y=c*s+h*-a+u*-i-l*-o,this.z=u*s+h*-o+l*-a-c*-i,this;},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);},transformDirection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize();},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this;},divideScalar:function(e){return this.multiplyScalar(1/e);},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this;},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this;},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this;},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this;},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)));},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this;},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this;},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this;},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this;},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this;},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z;},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);},normalize:function(){return this.divideScalar(this.length()||1);},setLength:function(e){return this.normalize().multiplyScalar(e);},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this;},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e);},cross:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e);},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this;},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t);},projectOnPlane:function(e){return ns.copy(this).projectOnVector(e),this.sub(ns);},reflect:function(e){return this.sub(ns.copy(e).multiplyScalar(2*this.dot(e)));},angleTo:function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());t===0&&console.error("THREE.Vector3: angleTo() can't handle zero length vectors.");var n=this.dot(e)/t;return Math.acos(Pe.clamp(n,-1,1));},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e));},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r;},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z);},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta);},setFromSphericalCoords:function(e,t,n){var r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this;},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y);},setFromCylindricalCoords:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this;},setFromMatrixPosition:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this;},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this;},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,t*4);},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z;},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this;},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e;},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this;}});var Xn=new E();function yt(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");}f(yt,"Matrix3");Object.assign(yt.prototype,{isMatrix3:!0,set:function(e,t,n,r,i,a,o,s,l){var c=this.elements;return c[0]=e,c[1]=r,c[2]=o,c[3]=t,c[4]=i,c[5]=s,c[6]=n,c[7]=a,c[8]=l,this;},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this;},clone:function(){return new this.constructor().fromArray(this.elements);},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this;},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this;},applyToBufferAttribute:function(e){for(var t=0,n=e.count;t<n;t++)Xn.x=e.getX(t),Xn.y=e.getY(t),Xn.z=e.getZ(t),Xn.applyMatrix3(this),e.setXYZ(t,Xn.x,Xn.y,Xn.z);return e;},multiply:function(e){return this.multiplyMatrices(this,e);},premultiply:function(e){return this.multiplyMatrices(e,this);},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],c=n[4],u=n[7],h=n[2],d=n[5],p=n[8],v=r[0],y=r[3],m=r[6],x=r[1],_=r[4],w=r[7],T=r[2],M=r[5],R=r[8];return i[0]=a*v+o*x+s*T,i[3]=a*y+o*_+s*M,i[6]=a*m+o*w+s*R,i[1]=l*v+c*x+u*T,i[4]=l*y+c*_+u*M,i[7]=l*m+c*w+u*R,i[2]=h*v+d*x+p*T,i[5]=h*y+d*_+p*M,i[8]=h*m+d*w+p*R,this;},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this;},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8];return t*a*c-t*o*l-n*i*c+n*o*s+r*i*l-r*a*s;},getInverse:function(e,t){e&&e.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var n=e.elements,r=this.elements,i=n[0],a=n[1],o=n[2],s=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],p=d*l-c*h,v=c*u-d*s,y=h*s-l*u,m=i*p+a*v+o*y;if(m===0){var x="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(t===!0)throw new Error(x);return console.warn(x),this.identity();}var _=1/m;return r[0]=p*_,r[1]=(o*h-d*a)*_,r[2]=(c*a-o*l)*_,r[3]=v*_,r[4]=(d*i-o*u)*_,r[5]=(o*s-c*i)*_,r[6]=y*_,r[7]=(a*u-h*i)*_,r[8]=(l*i-a*s)*_,this;},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this;},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose();},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this;},setUvTransform:function(e,t,n,r,i,a,o){var s=Math.cos(i),l=Math.sin(i);this.set(n*s,n*l,-n*(s*a+l*o)+a+e,-r*l,r*s,-r*(-l*a+s*o)+o+t,0,0,1);},scale:function(e,t){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this;},rotate:function(e){var t=Math.cos(e),n=Math.sin(e),r=this.elements,i=r[0],a=r[3],o=r[6],s=r[1],l=r[4],c=r[7];return r[0]=t*i+n*s,r[3]=t*a+n*l,r[6]=t*o+n*c,r[1]=-n*i+t*s,r[4]=-n*a+t*l,r[7]=-n*o+t*c,this;},translate:function(e,t){var n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this;},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0;},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;n<9;n++)this.elements[n]=e[n+t];return this;},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e;}});var wr,ur={getDataURL:function(e){var t;if(typeof HTMLCanvasElement>"u")return e.src;if(e instanceof HTMLCanvasElement)t=e;else{wr===void 0&&(wr=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),wr.width=e.width,wr.height=e.height;var n=wr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=wr;}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png");}},rd=0;function Je(e,t,n,r,i,a,o,s,l,c){Object.defineProperty(this,"id",{value:rd++}),this.uuid=Pe.generateUUID(),this.name="",this.image=e!==void 0?e:Je.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==void 0?t:Je.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:At,this.wrapT=r!==void 0?r:At,this.magFilter=i!==void 0?i:dt,this.minFilter=a!==void 0?a:qo,this.anisotropy=l!==void 0?l:1,this.format=o!==void 0?o:sn,this.internalFormat=null,this.type=s!==void 0?s:Xo,this.offset=new G(0,0),this.repeat=new G(1,1),this.center=new G(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yt(),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c!==void 0?c:It,this.version=0,this.onUpdate=null;}f(Je,"Texture");Je.DEFAULT_IMAGE=void 0;Je.DEFAULT_MAPPING=Rl;Je.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Je,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y);},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this;},toJSON:function(e){var t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){var r=this.image;if(r.uuid===void 0&&(r.uuid=Pe.generateUUID()),!t&&e.images[r.uuid]===void 0){var i;if(Array.isArray(r)){i=[];for(var a=0,o=r.length;a<o;a++)i.push(ur.getDataURL(r[a]));}else i=ur.getDataURL(r);e.images[r.uuid]={uuid:r.uuid,url:i};}n.image=r.uuid;}return t||(e.textures[this.uuid]=n),n;},dispose:function(){this.dispatchEvent({type:"dispose"});},transformUv:function(e){if(this.mapping!==Rl)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ro:e.x=e.x-Math.floor(e.x);break;case At:e.x=e.x<0?0:1;break;case io:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break;}if(e.y<0||e.y>1)switch(this.wrapT){case ro:e.y=e.y-Math.floor(e.y);break;case At:e.y=e.y<0?0:1;break;case io:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break;}return this.flipY&&(e.y=1-e.y),e;}});Object.defineProperty(Je.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++;}});function Ze(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=r!==void 0?r:1;}f(Ze,"Vector4");Object.defineProperties(Ze.prototype,{width:{get:function(){return this.z;},set:function(e){this.z=e;}},height:{get:function(){return this.w;},set:function(e){this.w=e;}}});Object.assign(Ze.prototype,{isVector4:!0,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this;},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this;},setX:function(e){return this.x=e,this;},setY:function(e){return this.y=e,this;},setZ:function(e){return this.z=e,this;},setW:function(e){return this.w=e,this;},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e);}return this;},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w);},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this;},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this);},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this;},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this;},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this;},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this);},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this;},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this;},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this;},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this;},divideScalar:function(e){return this.multiplyScalar(1/e);},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this;},setAxisAngleFromRotationMatrix:function(e){var t,n,r,i,a=.01,o=.1,s=e.elements,l=s[0],c=s[4],u=s[8],h=s[1],d=s[5],p=s[9],v=s[2],y=s[6],m=s[10];if(Math.abs(c-h)<a&&Math.abs(u-v)<a&&Math.abs(p-y)<a){if(Math.abs(c+h)<o&&Math.abs(u+v)<o&&Math.abs(p+y)<o&&Math.abs(l+d+m-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var x=(l+1)/2,_=(d+1)/2,w=(m+1)/2,T=(c+h)/4,M=(u+v)/4,R=(p+y)/4;return x>_&&x>w?x<a?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(x),r=T/n,i=M/n):_>w?_<a?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(_),n=T/r,i=R/r):w<a?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(w),n=M/i,r=R/i),this.set(n,r,i,t),this;}var S=Math.sqrt((y-p)*(y-p)+(u-v)*(u-v)+(h-c)*(h-c));return Math.abs(S)<.001&&(S=1),this.x=(y-p)/S,this.y=(u-v)/S,this.z=(h-c)/S,this.w=Math.acos((l+d+m-1)/2),this;},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this;},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this;},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this;},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this;},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)));},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this;},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this;},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this;},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this;},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this;},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w;},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);},normalize:function(){return this.divideScalar(this.length()||1);},setLength:function(e){return this.normalize().multiplyScalar(e);},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this;},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e);},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w;},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this;},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e;},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this;}});function Et(e,t,n){this.width=e,this.height=t,this.scissor=new Ze(0,0,e,t),this.scissorTest=!1,this.viewport=new Ze(0,0,e,t),n=n||{},this.texture=new Je(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:dt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!0,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null;}f(Et,"WebGLRenderTarget");Et.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Et,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t);},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this;},dispose:function(){this.dispatchEvent({type:"dispose"});}});function lc(e,t,n){Et.call(this,e,t,n),this.samples=4;}f(lc,"WebGLMultisampleRenderTarget");lc.prototype=Object.assign(Object.create(Et.prototype),{constructor:lc,isWebGLMultisampleRenderTarget:!0,copy:function(e){return Et.prototype.copy.call(this,e),this.samples=e.samples,this;}});var Ct=new E(),qt=new De(),id=new E(0,0,0),ad=new E(1,1,1),Ln=new E(),_a=new E(),Dt=new E();function De(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");}f(De,"Matrix4");Object.assign(De.prototype,{isMatrix4:!0,set:function(e,t,n,r,i,a,o,s,l,c,u,h,d,p,v,y){var m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=r,m[1]=i,m[5]=a,m[9]=o,m[13]=s,m[2]=l,m[6]=c,m[10]=u,m[14]=h,m[3]=d,m[7]=p,m[11]=v,m[15]=y,this;},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this;},clone:function(){return new De().fromArray(this.elements);},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this;},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this;},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this;},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this;},extractRotation:function(e){var t=this.elements,n=e.elements,r=1/Ct.setFromMatrixColumn(e,0).length(),i=1/Ct.setFromMatrixColumn(e,1).length(),a=1/Ct.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this;},makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),l=Math.sin(r),c=Math.cos(i),u=Math.sin(i);if(e.order==="XYZ"){var h=a*c,d=a*u,p=o*c,v=o*u;t[0]=s*c,t[4]=-s*u,t[8]=l,t[1]=d+p*l,t[5]=h-v*l,t[9]=-o*s,t[2]=v-h*l,t[6]=p+d*l,t[10]=a*s;}else if(e.order==="YXZ"){var y=s*c,m=s*u,x=l*c,_=l*u;t[0]=y+_*o,t[4]=x*o-m,t[8]=a*l,t[1]=a*u,t[5]=a*c,t[9]=-o,t[2]=m*o-x,t[6]=_+y*o,t[10]=a*s;}else if(e.order==="ZXY"){var y=s*c,m=s*u,x=l*c,_=l*u;t[0]=y-_*o,t[4]=-a*u,t[8]=x+m*o,t[1]=m+x*o,t[5]=a*c,t[9]=_-y*o,t[2]=-a*l,t[6]=o,t[10]=a*s;}else if(e.order==="ZYX"){var h=a*c,d=a*u,p=o*c,v=o*u;t[0]=s*c,t[4]=p*l-d,t[8]=h*l+v,t[1]=s*u,t[5]=v*l+h,t[9]=d*l-p,t[2]=-l,t[6]=o*s,t[10]=a*s;}else if(e.order==="YZX"){var w=a*s,T=a*l,M=o*s,R=o*l;t[0]=s*c,t[4]=R-w*u,t[8]=M*u+T,t[1]=u,t[5]=a*c,t[9]=-o*c,t[2]=-l*c,t[6]=T*u+M,t[10]=w-R*u;}else if(e.order==="XZY"){var w=a*s,T=a*l,M=o*s,R=o*l;t[0]=s*c,t[4]=-u,t[8]=l*c,t[1]=w*u+R,t[5]=a*c,t[9]=T*u-M,t[2]=M*u-T,t[6]=o*c,t[10]=R*u+w;}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this;},makeRotationFromQuaternion:function(e){return this.compose(id,e,ad);},lookAt:function(e,t,n){var r=this.elements;return Dt.subVectors(e,t),Dt.lengthSq()===0&&(Dt.z=1),Dt.normalize(),Ln.crossVectors(n,Dt),Ln.lengthSq()===0&&(Math.abs(n.z)===1?Dt.x+=1e-4:Dt.z+=1e-4,Dt.normalize(),Ln.crossVectors(n,Dt)),Ln.normalize(),_a.crossVectors(Dt,Ln),r[0]=Ln.x,r[4]=_a.x,r[8]=Dt.x,r[1]=Ln.y,r[5]=_a.y,r[9]=Dt.y,r[2]=Ln.z,r[6]=_a.z,r[10]=Dt.z,this;},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e);},premultiply:function(e){return this.multiplyMatrices(e,this);},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],c=n[1],u=n[5],h=n[9],d=n[13],p=n[2],v=n[6],y=n[10],m=n[14],x=n[3],_=n[7],w=n[11],T=n[15],M=r[0],R=r[4],S=r[8],A=r[12],I=r[1],N=r[5],F=r[9],z=r[13],H=r[2],B=r[6],U=r[10],W=r[14],$=r[3],oe=r[7],Z=r[11],K=r[15];return i[0]=a*M+o*I+s*H+l*$,i[4]=a*R+o*N+s*B+l*oe,i[8]=a*S+o*F+s*U+l*Z,i[12]=a*A+o*z+s*W+l*K,i[1]=c*M+u*I+h*H+d*$,i[5]=c*R+u*N+h*B+d*oe,i[9]=c*S+u*F+h*U+d*Z,i[13]=c*A+u*z+h*W+d*K,i[2]=p*M+v*I+y*H+m*$,i[6]=p*R+v*N+y*B+m*oe,i[10]=p*S+v*F+y*U+m*Z,i[14]=p*A+v*z+y*W+m*K,i[3]=x*M+_*I+w*H+T*$,i[7]=x*R+_*N+w*B+T*oe,i[11]=x*S+_*F+w*U+T*Z,i[15]=x*A+_*z+w*W+T*K,this;},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this;},applyToBufferAttribute:function(e){for(var t=0,n=e.count;t<n;t++)Ct.x=e.getX(t),Ct.y=e.getY(t),Ct.z=e.getZ(t),Ct.applyMatrix4(this),e.setXYZ(t,Ct.x,Ct.y,Ct.z);return e;},determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],l=e[13],c=e[2],u=e[6],h=e[10],d=e[14],p=e[3],v=e[7],y=e[11],m=e[15];return p*(+i*s*u-r*l*u-i*o*h+n*l*h+r*o*d-n*s*d)+v*(+t*s*d-t*l*h+i*a*h-r*a*d+r*l*c-i*s*c)+y*(+t*l*u-t*o*d-i*a*u+n*a*d+i*o*c-n*l*c)+m*(-r*o*c-t*s*u+t*o*h+r*a*u-n*a*h+n*s*c);},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this;},setPosition:function(e,t,n){var r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this;},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],a=r[1],o=r[2],s=r[3],l=r[4],c=r[5],u=r[6],h=r[7],d=r[8],p=r[9],v=r[10],y=r[11],m=r[12],x=r[13],_=r[14],w=r[15],T=p*_*h-x*v*h+x*u*y-c*_*y-p*u*w+c*v*w,M=m*v*h-d*_*h-m*u*y+l*_*y+d*u*w-l*v*w,R=d*x*h-m*p*h+m*c*y-l*x*y-d*c*w+l*p*w,S=m*p*u-d*x*u-m*c*v+l*x*v+d*c*_-l*p*_,A=i*T+a*M+o*R+s*S;if(A===0){var I="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(t===!0)throw new Error(I);return console.warn(I),this.identity();}var N=1/A;return n[0]=T*N,n[1]=(x*v*s-p*_*s-x*o*y+a*_*y+p*o*w-a*v*w)*N,n[2]=(c*_*s-x*u*s+x*o*h-a*_*h-c*o*w+a*u*w)*N,n[3]=(p*u*s-c*v*s-p*o*h+a*v*h+c*o*y-a*u*y)*N,n[4]=M*N,n[5]=(d*_*s-m*v*s+m*o*y-i*_*y-d*o*w+i*v*w)*N,n[6]=(m*u*s-l*_*s-m*o*h+i*_*h+l*o*w-i*u*w)*N,n[7]=(l*v*s-d*u*s+d*o*h-i*v*h-l*o*y+i*u*y)*N,n[8]=R*N,n[9]=(m*p*s-d*x*s-m*a*y+i*x*y+d*a*w-i*p*w)*N,n[10]=(l*x*s-m*c*s+m*a*h-i*x*h-l*a*w+i*c*w)*N,n[11]=(d*c*s-l*p*s-d*a*h+i*p*h+l*a*y-i*c*y)*N,n[12]=S*N,n[13]=(d*x*o-m*p*o+m*a*v-i*x*v-d*a*_+i*p*_)*N,n[14]=(m*c*o-l*x*o-m*a*u+i*x*u+l*a*_-i*c*_)*N,n[15]=(l*p*o-d*c*o+d*a*u-i*p*u-l*a*v+i*c*v)*N,this;},scale:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this;},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r));},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this;},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this;},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this;},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this;},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,l=i*a,c=i*o;return this.set(l*a+n,l*o-r*s,l*s+r*o,0,l*o+r*s,c*o+n,c*s-r*a,0,l*s-r*o,c*s+r*a,i*s*s+n,0,0,0,0,1),this;},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this;},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this;},compose:function(e,t,n){var r=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,l=i+i,c=a+a,u=o+o,h=i*l,d=i*c,p=i*u,v=a*c,y=a*u,m=o*u,x=s*l,_=s*c,w=s*u,T=n.x,M=n.y,R=n.z;return r[0]=(1-(v+m))*T,r[1]=(d+w)*T,r[2]=(p-_)*T,r[3]=0,r[4]=(d-w)*M,r[5]=(1-(h+m))*M,r[6]=(y+x)*M,r[7]=0,r[8]=(p+_)*R,r[9]=(y-x)*R,r[10]=(1-(h+v))*R,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this;},decompose:function(e,t,n){var r=this.elements,i=Ct.set(r[0],r[1],r[2]).length(),a=Ct.set(r[4],r[5],r[6]).length(),o=Ct.set(r[8],r[9],r[10]).length(),s=this.determinant();s<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],qt.copy(this);var l=1/i,c=1/a,u=1/o;return qt.elements[0]*=l,qt.elements[1]*=l,qt.elements[2]*=l,qt.elements[4]*=c,qt.elements[5]*=c,qt.elements[6]*=c,qt.elements[8]*=u,qt.elements[9]*=u,qt.elements[10]*=u,t.setFromRotationMatrix(qt),n.x=i,n.y=a,n.z=o,this;},makePerspective:function(e,t,n,r,i,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*i/(t-e),l=2*i/(n-r),c=(t+e)/(t-e),u=(n+r)/(n-r),h=-(a+i)/(a-i),d=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this;},makeOrthographic:function(e,t,n,r,i,a){var o=this.elements,s=1/(t-e),l=1/(n-r),c=1/(a-i),u=(t+e)*s,h=(n+r)*l,d=(a+i)*c;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this;},equals:function(e){for(var t=this.elements,n=e.elements,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0;},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this;},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e;}});var cc=new De(),uc=new gt();function pi(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||pi.DefaultOrder;}f(pi,"Euler");pi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];pi.DefaultOrder="XYZ";Object.defineProperties(pi.prototype,{x:{get:function(){return this._x;},set:function(e){this._x=e,this._onChangeCallback();}},y:{get:function(){return this._y;},set:function(e){this._y=e,this._onChangeCallback();}},z:{get:function(){return this._z;},set:function(e){this._z=e,this._onChangeCallback();}},order:{get:function(){return this._order;},set:function(e){this._order=e,this._onChangeCallback();}}});Object.assign(pi.prototype,{isEuler:!0,set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this._onChangeCallback(),this;},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order);},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this;},setFromRotationMatrix:function(e,t,n){var r=Pe.clamp,i=e.elements,a=i[0],o=i[4],s=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],p=i[10];return t=t||this._order,t==="XYZ"?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(d,c),this._z=0)):t==="YXZ"?(this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(s,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,a),this._z=0)):t==="ZXY"?(this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,a))):t==="ZYX"?(this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-o,c))):t==="YZX"?(this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(s,p))):t==="XZY"?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-u,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,n!==!1&&this._onChangeCallback(),this;},setFromQuaternion:function(e,t,n){return cc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(cc,t,n);},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order);},reorder:function(e){return uc.setFromEuler(this),this.setFromQuaternion(uc,e);},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order;},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this;},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e;},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new E(this._x,this._y,this._z);},_onChange:function(e){return this._onChangeCallback=e,this;},_onChangeCallback:function(){}});function Gu(){this.mask=1;}f(Gu,"Layers");Object.assign(Gu.prototype,{set:function(e){this.mask=1<<e|0;},enable:function(e){this.mask|=1<<e|0;},enableAll:function(){this.mask=-1;},toggle:function(e){this.mask^=1<<e|0;},disable:function(e){this.mask&=~(1<<e|0);},disableAll:function(){this.mask=0;},test:function(e){return(this.mask&e.mask)!==0;}});var od=0,hc=new E(),Mr=new gt(),vn=new De(),ba=new E(),yi=new E(),sd=new E(),ld=new gt(),fc=new E(1,0,0),dc=new E(0,1,0),pc=new E(0,0,1),cd={type:"added"},ud={type:"removed"};function ie(){Object.defineProperty(this,"id",{value:od++}),this.uuid=Pe.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ie.DefaultUp.clone();var e=new E(),t=new pi(),n=new gt(),r=new E(1,1,1);function i(){n.setFromEuler(t,!1);}f(i,"onRotationChange");function a(){t.setFromQuaternion(n,void 0,!1);}f(a,"onQuaternionChange"),t._onChange(i),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new De()},normalMatrix:{value:new yt()}}),this.matrix=new De(),this.matrixWorld=new De(),this.matrixAutoUpdate=ie.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Gu(),this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={};}f(ie,"Object3D");ie.DefaultUp=new E(0,1,0);ie.DefaultMatrixAutoUpdate=!0;ie.prototype=Object.assign(Object.create(Wt.prototype),{constructor:ie,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale);},applyQuaternion:function(e){return this.quaternion.premultiply(e),this;},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t);},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0);},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e);},setRotationFromQuaternion:function(e){this.quaternion.copy(e);},rotateOnAxis:function(e,t){return Mr.setFromAxisAngle(e,t),this.quaternion.multiply(Mr),this;},rotateOnWorldAxis:function(e,t){return Mr.setFromAxisAngle(e,t),this.quaternion.premultiply(Mr),this;},rotateX:function(e){return this.rotateOnAxis(fc,e);},rotateY:function(e){return this.rotateOnAxis(dc,e);},rotateZ:function(e){return this.rotateOnAxis(pc,e);},translateOnAxis:function(e,t){return hc.copy(e).applyQuaternion(this.quaternion),this.position.add(hc.multiplyScalar(t)),this;},translateX:function(e){return this.translateOnAxis(fc,e);},translateY:function(e){return this.translateOnAxis(dc,e);},translateZ:function(e){return this.translateOnAxis(pc,e);},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld);},worldToLocal:function(e){return e.applyMatrix4(vn.getInverse(this.matrixWorld));},lookAt:function(e,t,n){e.isVector3?ba.copy(e):ba.set(e,t,n);var r=this.parent;this.updateWorldMatrix(!0,!1),yi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?vn.lookAt(yi,ba,this.up):vn.lookAt(ba,yi,this.up),this.quaternion.setFromRotationMatrix(vn),r&&(vn.extractRotation(r.matrixWorld),Mr.setFromRotationMatrix(vn),this.quaternion.premultiply(Mr.inverse()));},add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this;}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(cd)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this);},remove:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this;}var n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(ud)),this;},attach:function(e){return this.updateWorldMatrix(!0,!1),vn.getInverse(this.matrixWorld),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),vn.multiply(e.parent.matrixWorld)),e.applyMatrix(vn),e.updateWorldMatrix(!1,!1),this.add(e),this;},getObjectById:function(e){return this.getObjectByProperty("id",e);},getObjectByName:function(e){return this.getObjectByProperty("name",e);},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n],a=i.getObjectByProperty(e,t);if(a!==void 0)return a;}},getWorldPosition:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new E()),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld);},getWorldQuaternion:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new gt()),this.updateMatrixWorld(!0),this.matrixWorld.decompose(yi,e,sd),e;},getWorldScale:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new E()),this.updateMatrixWorld(!0),this.matrixWorld.decompose(yi,ld,e),e;},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new E()),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize();},raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverse(e);},traverseVisible:function(e){if(this.visible!==!1){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverseVisible(e);}},traverseAncestors:function(e){var t=this.parent;t!==null&&(e(t),t.traverseAncestors(e));},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0;},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e);},updateWorldMatrix:function(e,t){var n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0)for(var r=this.children,i=0,a=r.length;i<a;i++)r[i].updateWorldMatrix(!1,!0);},toJSON:function(e){var t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON());function i(m,x){return m[x.uuid]===void 0&&(m[x.uuid]=x.toJSON(e)),x.uuid;}if(f(i,"serialize"),this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);var a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){var o=a.shapes;if(Array.isArray(o))for(var s=0,l=o.length;s<l;s++){var c=o[s];i(e.shapes,c);}else i(e.shapes,o);}}if(this.material!==void 0)if(Array.isArray(this.material)){for(var u=[],s=0,l=this.material.length;s<l;s++)u.push(i(e.materials,this.material[s]));r.material=u;}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(var s=0;s<this.children.length;s++)r.children.push(this.children[s].toJSON(e).object);}if(t){var h=y(e.geometries),d=y(e.materials),p=y(e.textures),v=y(e.images),o=y(e.shapes);h.length>0&&(n.geometries=h),d.length>0&&(n.materials=d),p.length>0&&(n.textures=p),v.length>0&&(n.images=v),o.length>0&&(n.shapes=o);}return n.object=r,n;function y(m){var x=[];for(var _ in m){var w=m[_];delete w.metadata,x.push(w);}return x;}f(y,"extractFromCache");},clone:function(e){return new this.constructor().copy(this,e);},copy:function(e,t){if(t===void 0&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone());}return this;}});function Gn(){ie.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}));}f(Gn,"Scene");Gn.prototype=Object.assign(Object.create(ie.prototype),{constructor:Gn,isScene:!0,copy:function(e,t){return ie.prototype.copy.call(this,e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this;},toJSON:function(e){var t=ie.prototype.toJSON.call(this,e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t;},dispose:function(){this.dispatchEvent({type:"dispose"});}});var mn=[new E(),new E(),new E(),new E(),new E(),new E(),new E(),new E()],xi=new E(),wa=new pn(),Er=new E(),Tr=new E(),Sr=new E(),Rn=new E(),Pn=new E(),Yn=new E(),_i=new E(),Ma=new E(),Ea=new E(),Zn=new E();function pn(e,t){this.min=e!==void 0?e:new E(1/0,1/0,1/0),this.max=t!==void 0?t:new E(-1/0,-1/0,-1/0);}f(pn,"Box3");Object.assign(pn.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this;},setFromArray:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,l=e.length;s<l;s+=3){var c=e[s],u=e[s+1],h=e[s+2];c<t&&(t=c),u<n&&(n=u),h<r&&(r=h),c>i&&(i=c),u>a&&(a=u),h>o&&(o=h);}return this.min.set(t,n,r),this.max.set(i,a,o),this;},setFromBufferAttribute:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,l=e.count;s<l;s++){var c=e.getX(s),u=e.getY(s),h=e.getZ(s);c<t&&(t=c),u<n&&(n=u),h<r&&(r=h),c>i&&(i=c),u>a&&(a=u),h>o&&(o=h);}return this.min.set(t,n,r),this.max.set(i,a,o),this;},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this;},setFromCenterAndSize:function(e,t){var n=xi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this;},setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e);},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this;},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this;},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;},getCenter:function(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new E()),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5);},getSize:function(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new E()),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min);},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this;},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this;},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this;},expandByObject:function(e){e.updateWorldMatrix(!1,!1);var t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),wa.copy(t.boundingBox),wa.applyMatrix4(e.matrixWorld),this.expandByPoint(wa.min),this.expandByPoint(wa.max));for(var n=e.children,r=0,i=n.length;r<i;r++)this.expandByObject(n[r]);return this;},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z);},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z;},getParameter:function(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new E()),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z));},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z);},intersectsSphere:function(e){return this.clampPoint(e.center,xi),xi.distanceToSquared(e.center)<=e.radius*e.radius;},intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant;},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(_i),Ma.subVectors(this.max,_i),Er.subVectors(e.a,_i),Tr.subVectors(e.b,_i),Sr.subVectors(e.c,_i),Rn.subVectors(Tr,Er),Pn.subVectors(Sr,Tr),Yn.subVectors(Er,Sr);var t=[0,-Rn.z,Rn.y,0,-Pn.z,Pn.y,0,-Yn.z,Yn.y,Rn.z,0,-Rn.x,Pn.z,0,-Pn.x,Yn.z,0,-Yn.x,-Rn.y,Rn.x,0,-Pn.y,Pn.x,0,-Yn.y,Yn.x,0];return!rs(t,Er,Tr,Sr,Ma)||(t=[1,0,0,0,1,0,0,0,1],!rs(t,Er,Tr,Sr,Ma))?!1:(Ea.crossVectors(Rn,Pn),t=[Ea.x,Ea.y,Ea.z],rs(t,Er,Tr,Sr,Ma));},clampPoint:function(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new E()),t.copy(e).clamp(this.min,this.max);},distanceToPoint:function(e){var t=xi.copy(e).clamp(this.min,this.max);return t.sub(e).length();},getBoundingSphere:function(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(xi).length()*.5,e;},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this;},union:function(e){return this.min.min(e.min),this.max.max(e.max),this;},applyMatrix4:function(e){return this.isEmpty()?this:(mn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),mn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),mn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),mn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),mn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),mn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),mn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),mn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(mn),this);},translate:function(e){return this.min.add(e),this.max.add(e),this;},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max);}});function rs(e,t,n,r,i){var a,o;for(a=0,o=e.length-3;a<=o;a+=3){Zn.fromArray(e,a);var s=i.x*Math.abs(Zn.x)+i.y*Math.abs(Zn.y)+i.z*Math.abs(Zn.z),l=t.dot(Zn),c=n.dot(Zn),u=r.dot(Zn);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>s)return!1;}return!0;}f(rs,"satForAxes");var hd=new pn();function qn(e,t){this.center=e!==void 0?e:new E(),this.radius=t!==void 0?t:0;}f(qn,"Sphere");Object.assign(qn.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this;},setFromPoints:function(e,t){var n=this.center;t!==void 0?n.copy(t):hd.setFromPoints(e).getCenter(n);for(var r=0,i=0,a=e.length;i<a;i++)r=Math.max(r,n.distanceToSquared(e[i]));return this.radius=Math.sqrt(r),this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this;},empty:function(){return this.radius<=0;},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius;},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius;},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t;},intersectsBox:function(e){return e.intersectsSphere(this);},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius;},clampPoint:function(e,t){var n=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new E()),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t;},getBoundingBox:function(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new pn()),e.set(this.center,this.center),e.expandByScalar(this.radius),e;},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this;},translate:function(e){return this.center.add(e),this;},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius;}});var gn=new E(),is=new E(),Ta=new E(),Cn=new E(),as=new E(),Sa=new E(),os=new E();function vi(e,t){this.origin=e!==void 0?e:new E(),this.direction=t!==void 0?t:new E(0,0,-1);}f(vi,"Ray");Object.assign(vi.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this;},at:function(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new E()),t.copy(this.direction).multiplyScalar(e).add(this.origin);},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this;},recast:function(e){return this.origin.copy(this.at(e,gn)),this;},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new E()),t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin);},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e));},distanceSqToPoint:function(e){var t=gn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(gn.copy(this.direction).multiplyScalar(t).add(this.origin),gn.distanceToSquared(e));},distanceSqToSegment:function(e,t,n,r){is.copy(e).add(t).multiplyScalar(.5),Ta.copy(t).sub(e).normalize(),Cn.copy(this.origin).sub(is);var i=e.distanceTo(t)*.5,a=-this.direction.dot(Ta),o=Cn.dot(this.direction),s=-Cn.dot(Ta),l=Cn.lengthSq(),c=Math.abs(1-a*a),u,h,d,p;if(c>0){if(u=a*s-o,h=a*o-s,p=i*c,u>=0){if(h>=-p){if(h<=p){var v=1/c;u*=v,h*=v,d=u*(u+a*h+2*o)+h*(a*u+h+2*s)+l;}else h=i,u=Math.max(0,-(a*h+o)),d=-u*u+h*(h+2*s)+l;}else h=-i,u=Math.max(0,-(a*h+o)),d=-u*u+h*(h+2*s)+l;}else h<=-p?(u=Math.max(0,-(-a*i+o)),h=u>0?-i:Math.min(Math.max(-i,-s),i),d=-u*u+h*(h+2*s)+l):h<=p?(u=0,h=Math.min(Math.max(-i,-s),i),d=h*(h+2*s)+l):(u=Math.max(0,-(a*i+o)),h=u>0?i:Math.min(Math.max(-i,-s),i),d=-u*u+h*(h+2*s)+l);}else h=a>0?-i:i,u=Math.max(0,-(a*h+o)),d=-u*u+h*(h+2*s)+l;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Ta).multiplyScalar(h).add(is),d;},intersectSphere:function(e,t){gn.subVectors(e.center,this.origin);var n=gn.dot(this.direction),r=gn.dot(gn)-n*n,i=e.radius*e.radius;if(r>i)return null;var a=Math.sqrt(i-r),o=n-a,s=n+a;return o<0&&s<0?null:o<0?this.at(s,t):this.at(o,t);},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius;},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null;},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return n===null?null:this.at(n,t);},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);if(t===0)return!0;var n=e.normal.dot(this.direction);return n*t<0;},intersectBox:function(e,t){var n,r,i,a,o,s,l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),c>=0?(i=(e.min.y-h.y)*c,a=(e.max.y-h.y)*c):(i=(e.max.y-h.y)*c,a=(e.min.y-h.y)*c),n>a||i>r||((i>n||n!==n)&&(n=i),(a<r||r!==r)&&(r=a),u>=0?(o=(e.min.z-h.z)*u,s=(e.max.z-h.z)*u):(o=(e.max.z-h.z)*u,s=(e.min.z-h.z)*u),n>s||o>r)||((o>n||n!==n)&&(n=o),(s<r||r!==r)&&(r=s),r<0)?null:this.at(n>=0?n:r,t);},intersectsBox:function(e){return this.intersectBox(e,gn)!==null;},intersectTriangle:function(e,t,n,r,i){as.subVectors(t,e),Sa.subVectors(n,e),os.crossVectors(as,Sa);var a=this.direction.dot(os),o;if(a>0){if(r)return null;o=1;}else if(a<0)o=-1,a=-a;else return null;Cn.subVectors(this.origin,e);var s=o*this.direction.dot(Sa.crossVectors(Cn,Sa));if(s<0)return null;var l=o*this.direction.dot(as.cross(Cn));if(l<0||s+l>a)return null;var c=-o*Cn.dot(os);return c<0?null:this.at(c/a,i);},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this;},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction);}});var ss=new E(),fd=new E(),dd=new yt();function nn(e,t){this.normal=e!==void 0?e:new E(1,0,0),this.constant=t!==void 0?t:0;}f(nn,"Plane");Object.assign(nn.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this;},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this;},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this;},setFromCoplanarPoints:function(e,t,n){var r=ss.subVectors(n,t).cross(fd.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this;},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this;},negate:function(){return this.constant*=-1,this.normal.negate(),this;},distanceToPoint:function(e){return this.normal.dot(e)+this.constant;},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius;},projectPoint:function(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new E()),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);},intersectLine:function(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new E());var n=e.delta(ss),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):void 0;var i=-(e.start.dot(this.normal)+this.constant)/r;if(!(i<0||i>1))return t.copy(n).multiplyScalar(i).add(e.start);},intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0;},intersectsBox:function(e){return e.intersectsPlane(this);},intersectsSphere:function(e){return e.intersectsPlane(this);},coplanarPoint:function(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new E()),e.copy(this.normal).multiplyScalar(-this.constant);},applyMatrix4:function(e,t){var n=t||dd.getNormalMatrix(e),r=this.coplanarPoint(ss).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this;},translate:function(e){return this.constant-=e.dot(this.normal),this;},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant;}});var Zt=new E(),xn=new E(),ls=new E(),yn=new E(),Ar=new E(),Lr=new E(),vc=new E(),cs=new E(),us=new E(),hs=new E();function vt(e,t,n){this.a=e!==void 0?e:new E(),this.b=t!==void 0?t:new E(),this.c=n!==void 0?n:new E();}f(vt,"Triangle");Object.assign(vt,{getNormal:function(e,t,n,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new E()),r.subVectors(n,t),Zt.subVectors(e,t),r.cross(Zt);var i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0);},getBarycoord:function(e,t,n,r,i){Zt.subVectors(r,t),xn.subVectors(n,t),ls.subVectors(e,t);var a=Zt.dot(Zt),o=Zt.dot(xn),s=Zt.dot(ls),l=xn.dot(xn),c=xn.dot(ls),u=a*l-o*o;if(i===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new E()),u===0)return i.set(-2,-1,-1);var h=1/u,d=(l*s-o*c)*h,p=(a*c-o*s)*h;return i.set(1-d-p,p,d);},containsPoint:function(e,t,n,r){return vt.getBarycoord(e,t,n,r,yn),yn.x>=0&&yn.y>=0&&yn.x+yn.y<=1;},getUV:function(e,t,n,r,i,a,o,s){return this.getBarycoord(e,t,n,r,yn),s.set(0,0),s.addScaledVector(i,yn.x),s.addScaledVector(a,yn.y),s.addScaledVector(o,yn.z),s;},isFrontFacing:function(e,t,n,r){return Zt.subVectors(n,t),xn.subVectors(e,t),Zt.cross(xn).dot(r)<0;}});Object.assign(vt.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this;},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this;},getArea:function(){return Zt.subVectors(this.c,this.b),xn.subVectors(this.a,this.b),Zt.cross(xn).length()*.5;},getMidpoint:function(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new E()),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);},getNormal:function(e){return vt.getNormal(this.a,this.b,this.c,e);},getPlane:function(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new nn()),e.setFromCoplanarPoints(this.a,this.b,this.c);},getBarycoord:function(e,t){return vt.getBarycoord(e,this.a,this.b,this.c,t);},getUV:function(e,t,n,r,i){return vt.getUV(e,this.a,this.b,this.c,t,n,r,i);},containsPoint:function(e){return vt.containsPoint(e,this.a,this.b,this.c);},isFrontFacing:function(e){return vt.isFrontFacing(this.a,this.b,this.c,e);},intersectsBox:function(e){return e.intersectsTriangle(this);},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new E());var n=this.a,r=this.b,i=this.c,a,o;Ar.subVectors(r,n),Lr.subVectors(i,n),cs.subVectors(e,n);var s=Ar.dot(cs),l=Lr.dot(cs);if(s<=0&&l<=0)return t.copy(n);us.subVectors(e,r);var c=Ar.dot(us),u=Lr.dot(us);if(c>=0&&u<=c)return t.copy(r);var h=s*u-c*l;if(h<=0&&s>=0&&c<=0)return a=s/(s-c),t.copy(n).addScaledVector(Ar,a);hs.subVectors(e,i);var d=Ar.dot(hs),p=Lr.dot(hs);if(p>=0&&d<=p)return t.copy(i);var v=d*l-s*p;if(v<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(Lr,o);var y=c*p-d*u;if(y<=0&&u-c>=0&&d-p>=0)return vc.subVectors(i,r),o=(u-c)/(u-c+(d-p)),t.copy(r).addScaledVector(vc,o);var m=1/(y+v+h);return a=v*m,o=h*m,t.copy(n).addScaledVector(Ar,a).addScaledVector(Lr,o);},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c);}});var Hu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Xt={h:0,s:0,l:0},Aa={h:0,s:0,l:0};function se(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n);}f(se,"Color");function fs(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e;}f(fs,"hue2rgb");function ds(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4);}f(ds,"SRGBToLinear");function ps(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055;}f(ps,"LinearToSRGB");Object.assign(se.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this;},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this;},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this;},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this;},setHSL:function(e,t,n){if(e=Pe.euclideanModulo(e,1),t=Pe.clamp(t,0,1),n=Pe.clamp(n,0,1),t===0)this.r=this.g=this.b=n;else{var r=n<=.5?n*(1+t):n+t-n*t,i=2*n-r;this.r=fs(i,r,e+1/3),this.g=fs(i,r,e),this.b=fs(i,r,e-1/3);}return this;},setStyle:function(e){function t(h){h!==void 0&&parseFloat(h)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.");}f(t,"handleAlpha");var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r,i=n[1],a=n[2];switch(i){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,l=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(o,s,l);}break;}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){var c=n[1],u=c.length;if(u===3)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(u===6)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this;}return e&&e.length>0?this.setColorName(e):this;},setColorName:function(e){var t=Hu[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this;},clone:function(){return new this.constructor(this.r,this.g,this.b);},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this;},copyGammaToLinear:function(e,t){return t===void 0&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this;},copyLinearToGamma:function(e,t){t===void 0&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this;},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this;},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this;},copySRGBToLinear:function(e){return this.r=ds(e.r),this.g=ds(e.g),this.b=ds(e.b),this;},copyLinearToSRGB:function(e){return this.r=ps(e.r),this.g=ps(e.g),this.b=ps(e.b),this;},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this;},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this;},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6);},getHSL:function(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),a=Math.min(t,n,r),o,s,l=(a+i)/2;if(a===i)o=0,s=0;else{var c=i-a;switch(s=l<=.5?c/(i+a):c/(2-i-a),i){case t:o=(n-r)/c+(n<r?6:0);break;case n:o=(r-t)/c+2;break;case r:o=(t-n)/c+4;break;}o/=6;}return e.h=o,e.s=s,e.l=l,e;},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")";},offsetHSL:function(e,t,n){return this.getHSL(Xt),Xt.h+=e,Xt.s+=t,Xt.l+=n,this.setHSL(Xt.h,Xt.s,Xt.l),this;},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this;},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this;},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this;},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this;},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this;},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this;},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this;},lerpHSL:function(e,t){this.getHSL(Xt),e.getHSL(Aa);var n=Pe.lerp(Xt.h,Aa.h,t),r=Pe.lerp(Xt.s,Aa.s,t),i=Pe.lerp(Xt.l,Aa.l,t);return this.setHSL(n,r,i),this;},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b;},fromArray:function(e,t){return t===void 0&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this;},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e;},toJSON:function(){return this.getHex();}});se.NAMES=Hu;function co(e,t,n,r,i,a){this.a=e,this.b=t,this.c=n,this.normal=r&&r.isVector3?r:new E(),this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new se(),this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=a!==void 0?a:0;}f(co,"Face3");Object.assign(co.prototype,{clone:function(){return new this.constructor().copy(this);},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this;}});var pd=0;function be(){Object.defineProperty(this,"id",{value:pd++}),this.uuid=Pe.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=Ri,this.side=pa,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=Ru,this.opacity=1,this.transparent=!1,this.blendSrc=Pu,this.blendDst=Cu,this.blendEquation=zr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ps,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=nd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ts,this.stencilZFail=ts,this.stencilZPass=ts,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0;}f(be,"Material");be.prototype=Object.assign(Object.create(Wt.prototype),{constructor:be,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(e!==void 0)for(var t in e){var n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue;}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Lu;continue;}var r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue;}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n;}},toJSON:function(e){var t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ri&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==pa&&(n.side=this.side),this.vertexColors!==Ru&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function r(o){var s=[];for(var l in o){var c=o[l];delete c.metadata,s.push(c);}return s;}if(f(r,"extractFromCache"),t){var i=r(e.textures),a=r(e.images);i.length>0&&(n.textures=i),a.length>0&&(n.images=a);}return n;},clone:function(){return new this.constructor().copy(this);},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes,n=null;if(t!==null){var r=t.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=t[i].clone();}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this;},dispose:function(){this.dispatchEvent({type:"dispose"});}});Object.defineProperty(be.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++;}});function $t(e){be.call(this),this.type="MeshBasicMaterial",this.color=new se(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=jo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e);}f($t,"MeshBasicMaterial");$t.prototype=Object.create(be.prototype);$t.prototype.constructor=$t;$t.prototype.isMeshBasicMaterial=!0;$t.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this;};var qe=new E();function we(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=Yo,this.updateRange={offset:0,count:-1},this.version=0;}f(we,"BufferAttribute");Object.defineProperty(we.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++;}});Object.assign(we.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this;},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this;},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this;},copyArray:function(e){return this.array.set(e),this;},copyColorsArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new se()),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b;}return this;},copyVector2sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new G()),t[n++]=a.x,t[n++]=a.y;}return this;},copyVector3sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new E()),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z;}return this;},copyVector4sArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;r<i;r++){var a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new Ze()),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w;}return this;},applyMatrix3:function(e){for(var t=0,n=this.count;t<n;t++)qe.x=this.getX(t),qe.y=this.getY(t),qe.z=this.getZ(t),qe.applyMatrix3(e),this.setXYZ(t,qe.x,qe.y,qe.z);return this;},applyMatrix4:function(e){for(var t=0,n=this.count;t<n;t++)qe.x=this.getX(t),qe.y=this.getY(t),qe.z=this.getZ(t),qe.applyMatrix4(e),this.setXYZ(t,qe.x,qe.y,qe.z);return this;},applyNormalMatrix:function(e){for(var t=0,n=this.count;t<n;t++)qe.x=this.getX(t),qe.y=this.getY(t),qe.z=this.getZ(t),qe.applyNormalMatrix(e),this.setXYZ(t,qe.x,qe.y,qe.z);return this;},transformDirection:function(e){for(var t=0,n=this.count;t<n;t++)qe.x=this.getX(t),qe.y=this.getY(t),qe.z=this.getZ(t),qe.transformDirection(e),this.setXYZ(t,qe.x,qe.y,qe.z);return this;},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this;},getX:function(e){return this.array[e*this.itemSize];},setX:function(e,t){return this.array[e*this.itemSize]=t,this;},getY:function(e){return this.array[e*this.itemSize+1];},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this;},getZ:function(e){return this.array[e*this.itemSize+2];},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this;},getW:function(e){return this.array[e*this.itemSize+3];},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this;},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this;},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this;},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this;},onUpload:function(e){return this.onUploadCallback=e,this;},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this);},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};}});function Os(e,t,n){we.call(this,new Int8Array(e),t,n);}f(Os,"Int8BufferAttribute");Os.prototype=Object.create(we.prototype);Os.prototype.constructor=Os;function Is(e,t,n){we.call(this,new Uint8Array(e),t,n);}f(Is,"Uint8BufferAttribute");Is.prototype=Object.create(we.prototype);Is.prototype.constructor=Is;function Ns(e,t,n){we.call(this,new Uint8ClampedArray(e),t,n);}f(Ns,"Uint8ClampedBufferAttribute");Ns.prototype=Object.create(we.prototype);Ns.prototype.constructor=Ns;function Fs(e,t,n){we.call(this,new Int16Array(e),t,n);}f(Fs,"Int16BufferAttribute");Fs.prototype=Object.create(we.prototype);Fs.prototype.constructor=Fs;function Fi(e,t,n){we.call(this,new Uint16Array(e),t,n);}f(Fi,"Uint16BufferAttribute");Fi.prototype=Object.create(we.prototype);Fi.prototype.constructor=Fi;function Bs(e,t,n){we.call(this,new Int32Array(e),t,n);}f(Bs,"Int32BufferAttribute");Bs.prototype=Object.create(we.prototype);Bs.prototype.constructor=Bs;function Bi(e,t,n){we.call(this,new Uint32Array(e),t,n);}f(Bi,"Uint32BufferAttribute");Bi.prototype=Object.create(we.prototype);Bi.prototype.constructor=Bi;function re(e,t,n){we.call(this,new Float32Array(e),t,n);}f(re,"Float32BufferAttribute");re.prototype=Object.create(we.prototype);re.prototype.constructor=re;function Us(e,t,n){we.call(this,new Float64Array(e),t,n);}f(Us,"Float64BufferAttribute");Us.prototype=Object.create(we.prototype);Us.prototype.constructor=Us;function Vu(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1;}f(Vu,"DirectGeometry");Object.assign(Vu.prototype,{computeGroups:function(e){for(var t,n=[],r=void 0,i=e.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==r&&(r=o.materialIndex,t!==void 0&&(t.count=a*3-t.start,n.push(t)),t={start:a*3,materialIndex:r});}t!==void 0&&(t.count=a*3-t.start,n.push(t)),this.groups=n;},fromGeometry:function(e){var t=e.faces,n=e.vertices,r=e.faceVertexUvs,i=r[0]&&r[0].length>0,a=r[1]&&r[1].length>0,o=e.morphTargets,s=o.length,l;if(s>0){l=[];for(var c=0;c<s;c++)l[c]={name:o[c].name,data:[]};this.morphTargets.position=l;}var u=e.morphNormals,h=u.length,d;if(h>0){d=[];for(var c=0;c<h;c++)d[c]={name:u[c].name,data:[]};this.morphTargets.normal=d;}var p=e.skinIndices,v=e.skinWeights,y=p.length===n.length,m=v.length===n.length;n.length>0&&t.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(var c=0;c<t.length;c++){var x=t[c];this.vertices.push(n[x.a],n[x.b],n[x.c]);var _=x.vertexNormals;if(_.length===3)this.normals.push(_[0],_[1],_[2]);else{var w=x.normal;this.normals.push(w,w,w);}var T=x.vertexColors;if(T.length===3)this.colors.push(T[0],T[1],T[2]);else{var M=x.color;this.colors.push(M,M,M);}if(i===!0){var R=r[0][c];R!==void 0?this.uvs.push(R[0],R[1],R[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new G(),new G(),new G()));}if(a===!0){var R=r[1][c];R!==void 0?this.uvs2.push(R[0],R[1],R[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new G(),new G(),new G()));}for(var S=0;S<s;S++){var A=o[S].vertices;l[S].data.push(A[x.a],A[x.b],A[x.c]);}for(var S=0;S<h;S++){var I=u[S].vertexNormals[c];d[S].data.push(I.a,I.b,I.c);}y&&this.skinIndices.push(p[x.a],p[x.b],p[x.c]),m&&this.skinWeights.push(v[x.a],v[x.b],v[x.c]);}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this;}});function ku(e){if(e.length===0)return-1/0;for(var t=e[0],n=1,r=e.length;n<r;++n)e[n]>t&&(t=e[n]);return t;}f(ku,"arrayMax");var vd=1,en=new De(),vs=new ie(),Rr=new E(),Ot=new pn(),bi=new pn(),st=new E();function le(){Object.defineProperty(this,"id",{value:vd+=2}),this.uuid=Pe.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={};}f(le,"BufferGeometry");le.prototype=Object.assign(Object.create(Wt.prototype),{constructor:le,isBufferGeometry:!0,getIndex:function(){return this.index;},setIndex:function(e){Array.isArray(e)?this.index=new(ku(e)>65535?Bi:Fi)(e,1):this.index=e;},getAttribute:function(e){return this.attributes[e];},setAttribute:function(e,t){return this.attributes[e]=t,this;},deleteAttribute:function(e){return delete this.attributes[e],this;},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==void 0?n:0});},clearGroups:function(){this.groups=[];},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t;},applyMatrix:function(e){var t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);var n=this.attributes.normal;if(n!==void 0){var r=new yt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0;}var i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this;},rotateX:function(e){return en.makeRotationX(e),this.applyMatrix(en),this;},rotateY:function(e){return en.makeRotationY(e),this.applyMatrix(en),this;},rotateZ:function(e){return en.makeRotationZ(e),this.applyMatrix(en),this;},translate:function(e,t,n){return en.makeTranslation(e,t,n),this.applyMatrix(en),this;},scale:function(e,t,n){return en.makeScale(e,t,n),this.applyMatrix(en),this;},lookAt:function(e){return vs.lookAt(e),vs.updateMatrix(),this.applyMatrix(vs.matrix),this;},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Rr).negate(),this.translate(Rr.x,Rr.y,Rr.z),this;},setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var n=new re(t.vertices.length*3,3),r=new re(t.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(t.vertices)),this.setAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new re(t.lineDistances.length,1);this.setAttribute("lineDistance",i.copyArray(t.lineDistances));}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone());}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this;},setFromPoints:function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n];t.push(i.x,i.y,i.z||0);}return this.setAttribute("position",new re(t,3)),this;},updateFromObject:function(e){var t=e.geometry;if(e.isMesh){var n=t.__directGeometry;if(t.elementsNeedUpdate===!0&&(n=void 0,t.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n;}var r;return t.verticesNeedUpdate===!0&&(r=this.attributes.position,r!==void 0&&(r.copyVector3sArray(t.vertices),r.needsUpdate=!0),t.verticesNeedUpdate=!1),t.normalsNeedUpdate===!0&&(r=this.attributes.normal,r!==void 0&&(r.copyVector3sArray(t.normals),r.needsUpdate=!0),t.normalsNeedUpdate=!1),t.colorsNeedUpdate===!0&&(r=this.attributes.color,r!==void 0&&(r.copyColorsArray(t.colors),r.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(r=this.attributes.uv,r!==void 0&&(r.copyVector2sArray(t.uvs),r.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(r=this.attributes.lineDistance,r!==void 0&&(r.copyArray(t.lineDistances),r.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this;},fromGeometry:function(e){return e.__directGeometry=new Vu().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry);},fromDirectGeometry:function(e){var t=new Float32Array(e.vertices.length*3);if(this.setAttribute("position",new we(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(e.normals.length*3);this.setAttribute("normal",new we(n,3).copyVector3sArray(e.normals));}if(e.colors.length>0){var r=new Float32Array(e.colors.length*3);this.setAttribute("color",new we(r,3).copyColorsArray(e.colors));}if(e.uvs.length>0){var i=new Float32Array(e.uvs.length*2);this.setAttribute("uv",new we(i,2).copyVector2sArray(e.uvs));}if(e.uvs2.length>0){var a=new Float32Array(e.uvs2.length*2);this.setAttribute("uv2",new we(a,2).copyVector2sArray(e.uvs2));}this.groups=e.groups;for(var o in e.morphTargets){for(var s=[],l=e.morphTargets[o],c=0,u=l.length;c<u;c++){var h=l[c],d=new re(h.data.length*3,3);d.name=h.name,s.push(d.copyVector3sArray(h.data));}this.morphAttributes[o]=s;}if(e.skinIndices.length>0){var p=new re(e.skinIndices.length*4,4);this.setAttribute("skinIndex",p.copyVector4sArray(e.skinIndices));}if(e.skinWeights.length>0){var v=new re(e.skinWeights.length*4,4);this.setAttribute("skinWeight",v.copyVector4sArray(e.skinWeights));}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this;},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new pn());var e=this.attributes.position,t=this.morphAttributes.position;if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(var n=0,r=t.length;n<r;n++){var i=t[n];Ot.setFromBufferAttribute(i),this.morphTargetsRelative?(st.addVectors(this.boundingBox.min,Ot.min),this.boundingBox.expandByPoint(st),st.addVectors(this.boundingBox.max,Ot.max),this.boundingBox.expandByPoint(st)):(this.boundingBox.expandByPoint(Ot.min),this.boundingBox.expandByPoint(Ot.max));}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this);},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new qn());var e=this.attributes.position,t=this.morphAttributes.position;if(e){var n=this.boundingSphere.center;if(Ot.setFromBufferAttribute(e),t)for(var r=0,i=t.length;r<i;r++){var a=t[r];bi.setFromBufferAttribute(a),this.morphTargetsRelative?(st.addVectors(Ot.min,bi.min),Ot.expandByPoint(st),st.addVectors(Ot.max,bi.max),Ot.expandByPoint(st)):(Ot.expandByPoint(bi.min),Ot.expandByPoint(bi.max));}Ot.getCenter(n);for(var o=0,r=0,i=e.count;r<i;r++)st.fromBufferAttribute(e,r),o=Math.max(o,n.distanceToSquared(st));if(t)for(var r=0,i=t.length;r<i;r++)for(var a=t[r],s=this.morphTargetsRelative,l=0,c=a.count;l<c;l++)st.fromBufferAttribute(a,l),s&&(Rr.fromBufferAttribute(e,l),st.add(Rr)),o=Math.max(o,n.distanceToSquared(st));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this);}},computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes;if(t.position){var n=t.position.array;if(t.normal===void 0)this.setAttribute("normal",new we(new Float32Array(n.length),3));else for(var r=t.normal.array,i=0,a=r.length;i<a;i++)r[i]=0;var o=t.normal.array,s,l,c,u=new E(),h=new E(),d=new E(),p=new E(),v=new E();if(e)for(var y=e.array,i=0,a=e.count;i<a;i+=3)s=y[i+0]*3,l=y[i+1]*3,c=y[i+2]*3,u.fromArray(n,s),h.fromArray(n,l),d.fromArray(n,c),p.subVectors(d,h),v.subVectors(u,h),p.cross(v),o[s]+=p.x,o[s+1]+=p.y,o[s+2]+=p.z,o[l]+=p.x,o[l+1]+=p.y,o[l+2]+=p.z,o[c]+=p.x,o[c+1]+=p.y,o[c+2]+=p.z;else for(var i=0,a=n.length;i<a;i+=9)u.fromArray(n,i),h.fromArray(n,i+3),d.fromArray(n,i+6),p.subVectors(d,h),v.subVectors(u,h),p.cross(v),o[i]=p.x,o[i+1]=p.y,o[i+2]=p.z,o[i+3]=p.x,o[i+4]=p.y,o[i+5]=p.z,o[i+6]=p.x,o[i+7]=p.y,o[i+8]=p.z;this.normalizeNormals(),t.normal.needsUpdate=!0;}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return;}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var r in n)if(e.attributes[r]!==void 0)for(var i=n[r],a=i.array,o=e.attributes[r],s=o.array,l=o.itemSize*t,c=Math.min(s.length,a.length-l),u=0,h=l;u<c;u++,h++)a[h]=s[u];return this;},normalizeNormals:function(){for(var e=this.attributes.normal,t=0,n=e.count;t<n;t++)st.x=e.getX(t),st.y=e.getY(t),st.z=e.getZ(t),st.normalize(),e.setXYZ(t,st.x,st.y,st.z);},toNonIndexed:function(){function e(y,m){for(var x=y.array,_=y.itemSize,w=new x.constructor(m.length*_),T=0,M=0,R=0,S=m.length;R<S;R++){T=m[R]*_;for(var A=0;A<_;A++)w[M++]=x[T++];}return new we(w,_);}if(f(e,"convertBufferAttribute"),this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new le(),n=this.index.array,r=this.attributes;for(var i in r){var a=r[i],o=e(a,n);t.setAttribute(i,o);}var s=this.morphAttributes;for(i in s){for(var l=[],c=s[i],u=0,h=c.length;u<h;u++){var a=c[u],o=e(a,n);l.push(o);}t.morphAttributes[i]=l;}t.morphTargetsRelative=this.morphTargetsRelative;for(var d=this.groups,u=0,p=d.length;u<p;u++){var v=d[u];t.addGroup(v.start,v.count,v.materialIndex);}return t;},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){var t=this.parameters;for(var n in t)t[n]!==void 0&&(e[n]=t[n]);return e;}e.data={attributes:{}};var r=this.index;r!==null&&(e.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});var i=this.attributes;for(var n in i){var a=i[n],o=a.toJSON();a.name!==""&&(o.name=a.name),e.data.attributes[n]=o;}var s={},l=!1;for(var n in this.morphAttributes){for(var c=this.morphAttributes[n],u=[],h=0,d=c.length;h<d;h++){var a=c[h],o=a.toJSON();a.name!==""&&(o.name=a.name),u.push(o);}u.length>0&&(s[n]=u,l=!0);}l&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);var p=this.groups;p.length>0&&(e.data.groups=JSON.parse(JSON.stringify(p)));var v=this.boundingSphere;return v!==null&&(e.data.boundingSphere={center:v.center.toArray(),radius:v.radius}),e;},clone:function(){return new le().copy(this);},copy:function(e){var t,n,r;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var i=e.index;i!==null&&this.setIndex(i.clone());var a=e.attributes;for(t in a){var o=a[t];this.setAttribute(t,o.clone());}var s=e.morphAttributes;for(t in s){var l=[],c=s[t];for(n=0,r=c.length;n<r;n++)l.push(c[n].clone());this.morphAttributes[t]=l;}this.morphTargetsRelative=e.morphTargetsRelative;var u=e.groups;for(n=0,r=u.length;n<r;n++){var h=u[n];this.addGroup(h.start,h.count,h.materialIndex);}var d=e.boundingBox;d!==null&&(this.boundingBox=d.clone());var p=e.boundingSphere;return p!==null&&(this.boundingSphere=p.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this;},dispose:function(){this.dispatchEvent({type:"dispose"});}});var mc=new De(),Jn=new vi(),ms=new qn(),$n=new E(),Qn=new E(),Kn=new E(),gs=new E(),ys=new E(),xs=new E(),La=new E(),Ra=new E(),Pa=new E(),Vr=new G(),kr=new G(),Wr=new G(),Pi=new E(),Ca=new E();function nt(e,t){ie.call(this),this.type="Mesh",this.geometry=e!==void 0?e:new le(),this.material=t!==void 0?t:new $t({color:Math.random()*16777215}),this.updateMorphTargets();}f(nt,"Mesh");nt.prototype=Object.assign(Object.create(ie.prototype),{constructor:nt,isMesh:!0,copy:function(e){return ie.prototype.copy.call(this,e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this;},updateMorphTargets:function(){var e=this.geometry,t,n,r;if(e.isBufferGeometry){var i=e.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(o!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,n=o.length;t<n;t++)r=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t;}}else{var s=e.morphTargets;s!==void 0&&s.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");}},raycast:function(e,t){var n=this.geometry,r=this.material,i=this.matrixWorld;if(r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ms.copy(n.boundingSphere),ms.applyMatrix4(i),e.ray.intersectsSphere(ms)!==!1&&(mc.getInverse(i),Jn.copy(e.ray).applyMatrix4(mc),!(n.boundingBox!==null&&Jn.intersectsBox(n.boundingBox)===!1)))){var a;if(n.isBufferGeometry){var o,s,l,c=n.index,u=n.attributes.position,h=n.morphAttributes.position,d=n.morphTargetsRelative,p=n.attributes.uv,v=n.attributes.uv2,y=n.groups,m=n.drawRange,x,_,w,T,M,R,S,A;if(c!==null){if(Array.isArray(r))for(x=0,w=y.length;x<w;x++)for(M=y[x],R=r[M.materialIndex],S=Math.max(M.start,m.start),A=Math.min(M.start+M.count,m.start+m.count),_=S,T=A;_<T;_+=3)o=c.getX(_),s=c.getX(_+1),l=c.getX(_+2),a=Da(this,R,e,Jn,u,h,d,p,v,o,s,l),a&&(a.faceIndex=Math.floor(_/3),a.face.materialIndex=M.materialIndex,t.push(a));else for(S=Math.max(0,m.start),A=Math.min(c.count,m.start+m.count),x=S,w=A;x<w;x+=3)o=c.getX(x),s=c.getX(x+1),l=c.getX(x+2),a=Da(this,r,e,Jn,u,h,d,p,v,o,s,l),a&&(a.faceIndex=Math.floor(x/3),t.push(a));}else if(u!==void 0)if(Array.isArray(r))for(x=0,w=y.length;x<w;x++)for(M=y[x],R=r[M.materialIndex],S=Math.max(M.start,m.start),A=Math.min(M.start+M.count,m.start+m.count),_=S,T=A;_<T;_+=3)o=_,s=_+1,l=_+2,a=Da(this,R,e,Jn,u,h,d,p,v,o,s,l),a&&(a.faceIndex=Math.floor(_/3),a.face.materialIndex=M.materialIndex,t.push(a));else for(S=Math.max(0,m.start),A=Math.min(u.count,m.start+m.count),x=S,w=A;x<w;x+=3)o=x,s=x+1,l=x+2,a=Da(this,r,e,Jn,u,h,d,p,v,o,s,l),a&&(a.faceIndex=Math.floor(x/3),t.push(a));}else if(n.isGeometry){var I,N,F,z=Array.isArray(r),H=n.vertices,B=n.faces,U,W=n.faceVertexUvs[0];W.length>0&&(U=W);for(var $=0,oe=B.length;$<oe;$++){var Z=B[$],K=z?r[Z.materialIndex]:r;if(K!==void 0&&(I=H[Z.a],N=H[Z.b],F=H[Z.c],a=Wu(this,K,e,Jn,I,N,F,Pi),a)){if(U&&U[$]){var ce=U[$];Vr.copy(ce[0]),kr.copy(ce[1]),Wr.copy(ce[2]),a.uv=vt.getUV(Pi,I,N,F,Vr,kr,Wr,new G());}a.face=Z,a.faceIndex=$,t.push(a);}}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});function Wu(e,t,n,r,i,a,o,s){var l;if(t.side===ft?l=r.intersectTriangle(o,a,i,!0,s):l=r.intersectTriangle(i,a,o,t.side!==Wo,s),l===null)return null;Ca.copy(s),Ca.applyMatrix4(e.matrixWorld);var c=n.ray.origin.distanceTo(Ca);return c<n.near||c>n.far?null:{distance:c,point:Ca.clone(),object:e};}f(Wu,"checkIntersection");function Da(e,t,n,r,i,a,o,s,l,c,u,h){$n.fromBufferAttribute(i,c),Qn.fromBufferAttribute(i,u),Kn.fromBufferAttribute(i,h);var d=e.morphTargetInfluences;if(t.morphTargets&&a&&d){La.set(0,0,0),Ra.set(0,0,0),Pa.set(0,0,0);for(var p=0,v=a.length;p<v;p++){var y=d[p],m=a[p];y!==0&&(gs.fromBufferAttribute(m,c),ys.fromBufferAttribute(m,u),xs.fromBufferAttribute(m,h),o?(La.addScaledVector(gs,y),Ra.addScaledVector(ys,y),Pa.addScaledVector(xs,y)):(La.addScaledVector(gs.sub($n),y),Ra.addScaledVector(ys.sub(Qn),y),Pa.addScaledVector(xs.sub(Kn),y)));}$n.add(La),Qn.add(Ra),Kn.add(Pa);}var x=Wu(e,t,n,r,$n,Qn,Kn,Pi);if(x){s&&(Vr.fromBufferAttribute(s,c),kr.fromBufferAttribute(s,u),Wr.fromBufferAttribute(s,h),x.uv=vt.getUV(Pi,$n,Qn,Kn,Vr,kr,Wr,new G())),l&&(Vr.fromBufferAttribute(l,c),kr.fromBufferAttribute(l,u),Wr.fromBufferAttribute(l,h),x.uv2=vt.getUV(Pi,$n,Qn,Kn,Vr,kr,Wr,new G()));var _=new co(c,u,h);vt.getNormal($n,Qn,Kn,_.normal),x.face=_;}return x;}f(Da,"checkBufferGeometryIntersection");var md=0,tn=new De(),_s=new ie(),Oa=new E();function Me(){Object.defineProperty(this,"id",{value:md+=2}),this.uuid=Pe.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1;}f(Me,"Geometry");Me.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Me,isGeometry:!0,applyMatrix:function(e){for(var t=new yt().getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++){var i=this.vertices[n];i.applyMatrix4(e);}for(var n=0,r=this.faces.length;n<r;n++){var a=this.faces[n];a.normal.applyMatrix3(t).normalize();for(var o=0,s=a.vertexNormals.length;o<s;o++)a.vertexNormals[o].applyMatrix3(t).normalize();}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this;},rotateX:function(e){return tn.makeRotationX(e),this.applyMatrix(tn),this;},rotateY:function(e){return tn.makeRotationY(e),this.applyMatrix(tn),this;},rotateZ:function(e){return tn.makeRotationZ(e),this.applyMatrix(tn),this;},translate:function(e,t,n){return tn.makeTranslation(e,t,n),this.applyMatrix(tn),this;},scale:function(e,t,n){return tn.makeScale(e,t,n),this.applyMatrix(tn),this;},lookAt:function(e){return _s.lookAt(e),_s.updateMatrix(),this.applyMatrix(_s.matrix),this;},fromBufferGeometry:function(e){var t=this,n=e.index!==null?e.index.array:void 0,r=e.attributes;if(r.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var i=r.position.array,a=r.normal!==void 0?r.normal.array:void 0,o=r.color!==void 0?r.color.array:void 0,s=r.uv!==void 0?r.uv.array:void 0,l=r.uv2!==void 0?r.uv2.array:void 0;l!==void 0&&(this.faceVertexUvs[1]=[]);for(var c=0;c<i.length;c+=3)t.vertices.push(new E().fromArray(i,c)),o!==void 0&&t.colors.push(new se().fromArray(o,c));function u(x,_,w,T){var M=o===void 0?[]:[t.colors[x].clone(),t.colors[_].clone(),t.colors[w].clone()],R=a===void 0?[]:[new E().fromArray(a,x*3),new E().fromArray(a,_*3),new E().fromArray(a,w*3)],S=new co(x,_,w,R,M,T);t.faces.push(S),s!==void 0&&t.faceVertexUvs[0].push([new G().fromArray(s,x*2),new G().fromArray(s,_*2),new G().fromArray(s,w*2)]),l!==void 0&&t.faceVertexUvs[1].push([new G().fromArray(l,x*2),new G().fromArray(l,_*2),new G().fromArray(l,w*2)]);}f(u,"addFace");var h=e.groups;if(h.length>0)for(var c=0;c<h.length;c++)for(var d=h[c],p=d.start,v=d.count,y=p,m=p+v;y<m;y+=3)n!==void 0?u(n[y],n[y+1],n[y+2],d.materialIndex):u(y,y+1,y+2,d.materialIndex);else if(n!==void 0)for(var c=0;c<n.length;c+=3)u(n[c],n[c+1],n[c+2]);else for(var c=0;c<i.length/3;c+=3)u(c,c+1,c+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this;},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Oa).negate(),this.translate(Oa.x,Oa.y,Oa.z),this;},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,r=new De();return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(r),this;},computeFaceNormals:function(){for(var e=new E(),t=new E(),n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,o),t.subVectors(a,o),e.cross(t),e.normalize(),i.normal.copy(e);}},computeVertexNormals:function(e){e===void 0&&(e=!0);var t,n,r,i,a,o;for(o=new Array(this.vertices.length),t=0,n=this.vertices.length;t<n;t++)o[t]=new E();if(e){var s,l,c,u=new E(),h=new E();for(r=0,i=this.faces.length;r<i;r++)a=this.faces[r],s=this.vertices[a.a],l=this.vertices[a.b],c=this.vertices[a.c],u.subVectors(c,l),h.subVectors(s,l),u.cross(h),o[a.a].add(u),o[a.b].add(u),o[a.c].add(u);}else for(this.computeFaceNormals(),r=0,i=this.faces.length;r<i;r++)a=this.faces[r],o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(t=0,n=this.vertices.length;t<n;t++)o[t].normalize();for(r=0,i=this.faces.length;r<i;r++){a=this.faces[r];var d=a.vertexNormals;d.length===3?(d[0].copy(o[a.a]),d[1].copy(o[a.b]),d[2].copy(o[a.c])):(d[0]=o[a.a].clone(),d[1]=o[a.b].clone(),d[2]=o[a.c].clone());}this.faces.length>0&&(this.normalsNeedUpdate=!0);},computeFlatVertexNormals:function(){var e,t,n;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){n=this.faces[e];var r=n.vertexNormals;r.length===3?(r[0].copy(n.normal),r[1].copy(n.normal),r[2].copy(n.normal)):(r[0]=n.normal.clone(),r[1]=n.normal.clone(),r[2]=n.normal.clone());}this.faces.length>0&&(this.normalsNeedUpdate=!0);},computeMorphNormals:function(){var e,t,n,r,i;for(n=0,r=this.faces.length;n<r;n++)for(i=this.faces[n],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var a=new Me();for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals,c,u;for(n=0,r=this.faces.length;n<r;n++)c=new E(),u={a:new E(),b:new E(),c:new E()},o.push(c),s.push(u);}var l=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var c,u;for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],c=l.faceNormals[n],u=l.vertexNormals[n],c.copy(i.normal),u.a.copy(i.vertexNormals[0]),u.b.copy(i.vertexNormals[1]),u.c.copy(i.vertexNormals[2]);}for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals;},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new pn()),this.boundingBox.setFromPoints(this.vertices);},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new qn()),this.boundingSphere.setFromPoints(this.vertices);},merge:function(e,t,n){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return;}var r,i=this.vertices.length,a=this.vertices,o=e.vertices,s=this.faces,l=e.faces,c=this.colors,u=e.colors;n===void 0&&(n=0),t!==void 0&&(r=new yt().getNormalMatrix(t));for(var h=0,d=o.length;h<d;h++){var p=o[h],v=p.clone();t!==void 0&&v.applyMatrix4(t),a.push(v);}for(var h=0,d=u.length;h<d;h++)c.push(u[h].clone());for(h=0,d=l.length;h<d;h++){var y=l[h],m,x,_,w=y.vertexNormals,T=y.vertexColors;m=new co(y.a+i,y.b+i,y.c+i),m.normal.copy(y.normal),r!==void 0&&m.normal.applyMatrix3(r).normalize();for(var M=0,R=w.length;M<R;M++)x=w[M].clone(),r!==void 0&&x.applyMatrix3(r).normalize(),m.vertexNormals.push(x);m.color.copy(y.color);for(var M=0,R=T.length;M<R;M++)_=T[M],m.vertexColors.push(_.clone());m.materialIndex=y.materialIndex+n,s.push(m);}for(var h=0,d=e.faceVertexUvs.length;h<d;h++){var S=e.faceVertexUvs[h];this.faceVertexUvs[h]===void 0&&(this.faceVertexUvs[h]=[]);for(var M=0,R=S.length;M<R;M++){for(var A=S[M],I=[],N=0,F=A.length;N<F;N++)I.push(A[N].clone());this.faceVertexUvs[h].push(I);}}},mergeMesh:function(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return;}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix);},mergeVertices:function(){var e={},t=[],n=[],r,i,a=4,o=Math.pow(10,a),s,l,c,u,h,d;for(s=0,l=this.vertices.length;s<l;s++)r=this.vertices[s],i=Math.round(r.x*o)+"_"+Math.round(r.y*o)+"_"+Math.round(r.z*o),e[i]===void 0?(e[i]=s,t.push(this.vertices[s]),n[s]=t.length-1):n[s]=n[e[i]];var p=[];for(s=0,l=this.faces.length;s<l;s++){c=this.faces[s],c.a=n[c.a],c.b=n[c.b],c.c=n[c.c],u=[c.a,c.b,c.c];for(var v=0;v<3;v++)if(u[v]===u[(v+1)%3]){p.push(s);break;}}for(s=p.length-1;s>=0;s--){var y=p[s];for(this.faces.splice(y,1),h=0,d=this.faceVertexUvs.length;h<d;h++)this.faceVertexUvs[h].splice(y,1);}var m=this.vertices.length-t.length;return this.vertices=t,m;},setFromPoints:function(e){this.vertices=[];for(var t=0,n=e.length;t<n;t++){var r=e[t];this.vertices.push(new E(r.x,r.y,r.z||0));}return this;},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,n=0;n<t;n++)e[n]._id=n;function r(c,u){return c.materialIndex-u.materialIndex;}f(r,"materialIndexSort"),e.sort(r);var i=this.faceVertexUvs[0],a=this.faceVertexUvs[1],o,s;i&&i.length===t&&(o=[]),a&&a.length===t&&(s=[]);for(var n=0;n<t;n++){var l=e[n]._id;o&&o.push(i[l]),s&&s.push(a[l]);}o&&(this.faceVertexUvs[0]=o),s&&(this.faceVertexUvs[1]=s);},toJSON:function(){var e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){var t=this.parameters;for(var n in t)t[n]!==void 0&&(e[n]=t[n]);return e;}for(var r=[],i=0;i<this.vertices.length;i++){var a=this.vertices[i];r.push(a.x,a.y,a.z);}for(var o=[],s=[],l={},c=[],u={},h=[],d={},i=0;i<this.faces.length;i++){var p=this.faces[i],v=!0,y=!1,m=this.faceVertexUvs[0][i]!==void 0,x=p.normal.length()>0,_=p.vertexNormals.length>0,w=p.color.r!==1||p.color.g!==1||p.color.b!==1,T=p.vertexColors.length>0,M=0;if(M=I(M,0,0),M=I(M,1,v),M=I(M,2,y),M=I(M,3,m),M=I(M,4,x),M=I(M,5,_),M=I(M,6,w),M=I(M,7,T),o.push(M),o.push(p.a,p.b,p.c),o.push(p.materialIndex),m){var R=this.faceVertexUvs[0][i];o.push(z(R[0]),z(R[1]),z(R[2]));}if(x&&o.push(N(p.normal)),_){var S=p.vertexNormals;o.push(N(S[0]),N(S[1]),N(S[2]));}if(w&&o.push(F(p.color)),T){var A=p.vertexColors;o.push(F(A[0]),F(A[1]),F(A[2]));}}function I(H,B,U){return U?H|1<<B:H&~(1<<B);}f(I,"setBit");function N(H){var B=H.x.toString()+H.y.toString()+H.z.toString();return l[B]!==void 0||(l[B]=s.length/3,s.push(H.x,H.y,H.z)),l[B];}f(N,"getNormalIndex");function F(H){var B=H.r.toString()+H.g.toString()+H.b.toString();return u[B]!==void 0||(u[B]=c.length,c.push(H.getHex())),u[B];}f(F,"getColorIndex");function z(H){var B=H.x.toString()+H.y.toString();return d[B]!==void 0||(d[B]=h.length/2,h.push(H.x,H.y)),d[B];}return f(z,"getUvIndex"),e.data={},e.data.vertices=r,e.data.normals=s,c.length>0&&(e.data.colors=c),h.length>0&&(e.data.uvs=[h]),e.data.faces=o,e;},clone:function(){return new Me().copy(this);},copy:function(e){var t,n,r,i,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var s=e.vertices;for(t=0,n=s.length;t<n;t++)this.vertices.push(s[t].clone());var l=e.colors;for(t=0,n=l.length;t<n;t++)this.colors.push(l[t].clone());var c=e.faces;for(t=0,n=c.length;t<n;t++)this.faces.push(c[t].clone());for(t=0,n=e.faceVertexUvs.length;t<n;t++){var u=e.faceVertexUvs[t];for(this.faceVertexUvs[t]===void 0&&(this.faceVertexUvs[t]=[]),r=0,i=u.length;r<i;r++){var h=u[r],d=[];for(a=0,o=h.length;a<o;a++){var p=h[a];d.push(p.clone());}this.faceVertexUvs[t].push(d);}}var v=e.morphTargets;for(t=0,n=v.length;t<n;t++){var y={};if(y.name=v[t].name,v[t].vertices!==void 0)for(y.vertices=[],r=0,i=v[t].vertices.length;r<i;r++)y.vertices.push(v[t].vertices[r].clone());if(v[t].normals!==void 0)for(y.normals=[],r=0,i=v[t].normals.length;r<i;r++)y.normals.push(v[t].normals[r].clone());this.morphTargets.push(y);}var m=e.morphNormals;for(t=0,n=m.length;t<n;t++){var x={};if(m[t].vertexNormals!==void 0)for(x.vertexNormals=[],r=0,i=m[t].vertexNormals.length;r<i;r++){var _=m[t].vertexNormals[r],w={};w.a=_.a.clone(),w.b=_.b.clone(),w.c=_.c.clone(),x.vertexNormals.push(w);}if(m[t].faceNormals!==void 0)for(x.faceNormals=[],r=0,i=m[t].faceNormals.length;r<i;r++)x.faceNormals.push(m[t].faceNormals[r].clone());this.morphNormals.push(x);}var T=e.skinWeights;for(t=0,n=T.length;t<n;t++)this.skinWeights.push(T[t].clone());var M=e.skinIndices;for(t=0,n=M.length;t<n;t++)this.skinIndices.push(M[t].clone());var R=e.lineDistances;for(t=0,n=R.length;t<n;t++)this.lineDistances.push(R[t]);var S=e.boundingBox;S!==null&&(this.boundingBox=S.clone());var A=e.boundingSphere;return A!==null&&(this.boundingSphere=A.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this;},dispose:function(){this.dispatchEvent({type:"dispose"});}});var no=class extends Me{constructor(t,n,r,i,a,o){super(),this.type="BoxGeometry",this.parameters={width:t,height:n,depth:r,widthSegments:i,heightSegments:a,depthSegments:o},this.fromBufferGeometry(new sr(t,n,r,i,a,o)),this.mergeVertices();}};f(no,"BoxGeometry");var sr=class extends le{constructor(t,n,r,i,a,o){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:n,depth:r,widthSegments:i,heightSegments:a,depthSegments:o};var s=this;t=t||1,n=n||1,r=r||1,i=Math.floor(i)||1,a=Math.floor(a)||1,o=Math.floor(o)||1;var l=[],c=[],u=[],h=[],d=0,p=0;v("z","y","x",-1,-1,r,n,t,o,a,0),v("z","y","x",1,-1,r,n,-t,o,a,1),v("x","z","y",1,1,t,r,n,i,o,2),v("x","z","y",1,-1,t,r,-n,i,o,3),v("x","y","z",1,-1,t,n,r,i,a,4),v("x","y","z",-1,-1,t,n,-r,i,a,5),this.setIndex(l),this.setAttribute("position",new re(c,3)),this.setAttribute("normal",new re(u,3)),this.setAttribute("uv",new re(h,2));function v(y,m,x,_,w,T,M,R,S,A,I){var N=T/S,F=M/A,z=T/2,H=M/2,B=R/2,U=S+1,W=A+1,$=0,oe=0,Z,K,ce=new E();for(K=0;K<W;K++){var Be=K*F-H;for(Z=0;Z<U;Z++){var Ue=Z*N-z;ce[y]=Ue*_,ce[m]=Be*w,ce[x]=B,c.push(ce.x,ce.y,ce.z),ce[y]=0,ce[m]=0,ce[x]=R>0?1:-1,u.push(ce.x,ce.y,ce.z),h.push(Z/S),h.push(1-K/A),$+=1;}}for(K=0;K<A;K++)for(Z=0;Z<S;Z++){var Ne=d+Z+U*K,Te=d+Z+U*(K+1),V=d+(Z+1)+U*(K+1),ze=d+(Z+1)+U*K;l.push(Ne,Te,ze),l.push(Te,V,ze),oe+=6;}s.addGroup(p,oe,I),p+=oe,d+=$;}f(v,"buildPlane");}};f(sr,"BoxBufferGeometry");function Zr(e){var t={};for(var n in e){t[n]={};for(var r in e[n]){var i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i;}}return t;}f(Zr,"cloneUniforms");function Mt(e){for(var t={},n=0;n<e.length;n++){var r=Zr(e[n]);for(var i in r)t[i]=r[i];}return t;}f(Mt,"mergeUniforms");var gd=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,yd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function Lt(e){be.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=gd,this.fragmentShader=yd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e));}f(Lt,"ShaderMaterial");Lt.prototype=Object.create(be.prototype);Lt.prototype.constructor=Lt;Lt.prototype.isShaderMaterial=!0;Lt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Zr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this;};Lt.prototype.toJSON=function(e){var t=be.prototype.toJSON.call(this,e);t.uniforms={};for(var n in this.uniforms){var r=this.uniforms[n],i=r.value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i};}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var a={};for(var o in this.extensions)this.extensions[o]===!0&&(a[o]=!0);return Object.keys(a).length>0&&(t.extensions=a),t;};function bn(){ie.call(this),this.type="Camera",this.matrixWorldInverse=new De(),this.projectionMatrix=new De(),this.projectionMatrixInverse=new De();}f(bn,"Camera");bn.prototype=Object.assign(Object.create(ie.prototype),{constructor:bn,isCamera:!0,copy:function(e,t){return ie.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this;},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new E()),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize();},updateMatrixWorld:function(e){ie.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld);},clone:function(){return new this.constructor().copy(this);}});function ht(e,t,n,r){bn.call(this),this.type="PerspectiveCamera",this.fov=e!==void 0?e:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=r!==void 0?r:2e3,this.focus=10,this.aspect=t!==void 0?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix();}f(ht,"PerspectiveCamera");ht.prototype=Object.assign(Object.create(bn.prototype),{constructor:ht,isPerspectiveCamera:!0,copy:function(e,t){return bn.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this;},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=Pe.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix();},getFocalLength:function(){var e=Math.tan(Pe.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e;},getEffectiveFOV:function(){return Pe.RAD2DEG*2*Math.atan(Math.tan(Pe.DEG2RAD*.5*this.fov)/this.zoom);},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1);},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1);},setViewOffset:function(e,t,n,r,i,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix();},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix();},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(Pe.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,a=this.view;if(this.view!==null&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/o,t-=a.offsetY*n/s,r*=a.width/o,n*=a.height/s;}var l=this.filmOffset;l!==0&&(i+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix);},toJSON:function(e){var t=ie.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t;}});var Pr=90,Cr=1;function Ui(e,t,n,r){ie.call(this),this.type="CubeCamera";var i=new ht(Pr,Cr,e,t);i.up.set(0,-1,0),i.lookAt(new E(1,0,0)),this.add(i);var a=new ht(Pr,Cr,e,t);a.up.set(0,-1,0),a.lookAt(new E(-1,0,0)),this.add(a);var o=new ht(Pr,Cr,e,t);o.up.set(0,0,1),o.lookAt(new E(0,1,0)),this.add(o);var s=new ht(Pr,Cr,e,t);s.up.set(0,0,-1),s.lookAt(new E(0,-1,0)),this.add(s);var l=new ht(Pr,Cr,e,t);l.up.set(0,-1,0),l.lookAt(new E(0,0,1)),this.add(l);var c=new ht(Pr,Cr,e,t);c.up.set(0,-1,0),c.lookAt(new E(0,0,-1)),this.add(c),r=r||{format:cr,magFilter:dt,minFilter:dt},this.renderTarget=new hr(n,n,r),this.renderTarget.texture.name="CubeCamera",this.update=function(u,h){this.parent===null&&this.updateMatrixWorld();var d=u.getRenderTarget(),p=this.renderTarget,v=p.texture.generateMipmaps;p.texture.generateMipmaps=!1,u.setRenderTarget(p,0),u.render(h,i),u.setRenderTarget(p,1),u.render(h,a),u.setRenderTarget(p,2),u.render(h,o),u.setRenderTarget(p,3),u.render(h,s),u.setRenderTarget(p,4),u.render(h,l),p.texture.generateMipmaps=v,u.setRenderTarget(p,5),u.render(h,c),u.setRenderTarget(d);},this.clear=function(u,h,d,p){for(var v=u.getRenderTarget(),y=this.renderTarget,m=0;m<6;m++)u.setRenderTarget(y,m),u.clear(h,d,p);u.setRenderTarget(v);};}f(Ui,"CubeCamera");Ui.prototype=Object.create(ie.prototype);Ui.prototype.constructor=Ui;function hr(e,t,n){Et.call(this,e,t,n);}f(hr,"WebGLRenderTargetCube");hr.prototype=Object.create(Et.prototype);hr.prototype.constructor=hr;hr.prototype.isWebGLRenderTargetCube=!0;hr.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;var n=new Gn(),r={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","	vWorldDirection = transformDirection( position, modelMatrix );","	#include <begin_vertex>","	#include <project_vertex>","}"].join(`
`),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#define RECIPROCAL_PI 0.31830988618","#define RECIPROCAL_PI2 0.15915494","void main() {","	vec3 direction = normalize( vWorldDirection );","	vec2 sampleUV;","	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;","	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","	gl_FragColor = texture2D( tEquirect, sampleUV );","}"].join(`
`)},i=new Lt({type:"CubemapFromEquirect",uniforms:Zr(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:ft,blending:Fn});i.uniforms.tEquirect.value=t;var a=new nt(new sr(5,5,5),i);n.add(a);var o=new Ui(1,10,1);return o.renderTarget=this,o.renderTarget.texture.name="CubeCameraTexture",o.update(e,n),a.geometry.dispose(),a.material.dispose(),this;};function Jr(e,t,n,r,i,a,o,s,l,c,u,h){Je.call(this,null,a,o,s,l,c,r,i,u,h),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=l!==void 0?l:lt,this.minFilter=c!==void 0?c:lt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0;}f(Jr,"DataTexture");Jr.prototype=Object.create(Je.prototype);Jr.prototype.constructor=Jr;Jr.prototype.isDataTexture=!0;var Dr=new qn(),Ia=new E();function Zo(e,t,n,r,i,a){this.planes=[e!==void 0?e:new nn(),t!==void 0?t:new nn(),n!==void 0?n:new nn(),r!==void 0?r:new nn(),i!==void 0?i:new nn(),a!==void 0?a:new nn()];}f(Zo,"Frustum");Object.assign(Zo.prototype,{set:function(e,t,n,r,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this;},setFromMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],l=n[5],c=n[6],u=n[7],h=n[8],d=n[9],p=n[10],v=n[11],y=n[12],m=n[13],x=n[14],_=n[15];return t[0].setComponents(o-r,u-s,v-h,_-y).normalize(),t[1].setComponents(o+r,u+s,v+h,_+y).normalize(),t[2].setComponents(o+i,u+l,v+d,_+m).normalize(),t[3].setComponents(o-i,u-l,v-d,_-m).normalize(),t[4].setComponents(o-a,u-c,v-p,_-x).normalize(),t[5].setComponents(o+a,u+c,v+p,_+x).normalize(),this;},intersectsObject:function(e){var t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Dr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Dr);},intersectsSprite:function(e){return Dr.center.set(0,0,0),Dr.radius=.7071067811865476,Dr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Dr);},intersectsSphere:function(e){for(var t=this.planes,n=e.center,r=-e.radius,i=0;i<6;i++){var a=t[i].distanceToPoint(n);if(a<r)return!1;}return!0;},intersectsBox:function(e){for(var t=this.planes,n=0;n<6;n++){var r=t[n];if(Ia.x=r.normal.x>0?e.max.x:e.min.x,Ia.y=r.normal.y>0?e.max.y:e.min.y,Ia.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ia)<0)return!1;}return!0;},containsPoint:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0;}});var xd=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,_d=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,bd=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,wd=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,Md=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Ed="vec3 transformed = vec3( position );",Td=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Sd=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha  = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,Ad=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Ld=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	#endif
#endif`,Rd=`#if NUM_CLIPPING_PLANES > 0
	#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Pd=`#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )
	varying vec3 vViewPosition;
#endif`,Cd=`#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )
	vViewPosition = - mvPosition.xyz;
#endif`,Dd=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,Od=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,Id=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,Nd=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`,Fd=`#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
  return m[ 2 ][ 3 ] == - 1.0;
}`,Bd=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_maxMipLevel 8.0
#define cubeUV_minMipLevel 4.0
#define cubeUV_maxTileSize 256.0
#define cubeUV_minTileSize 16.0
float getFace(vec3 direction) {
    vec3 absDirection = abs(direction);
    float face = -1.0;
    if (absDirection.x > absDirection.z) {
      if (absDirection.x > absDirection.y)
        face = direction.x > 0.0 ? 0.0 : 3.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    } else {
      if (absDirection.z > absDirection.y)
        face = direction.z > 0.0 ? 2.0 : 5.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    }
    return face;
}
vec2 getUV(vec3 direction, float face) {
    vec2 uv;
    if (face == 0.0) {
      uv = vec2(-direction.z, direction.y) / abs(direction.x);
    } else if (face == 1.0) {
      uv = vec2(direction.x, -direction.z) / abs(direction.y);
    } else if (face == 2.0) {
      uv = direction.xy / abs(direction.z);
    } else if (face == 3.0) {
      uv = vec2(direction.z, direction.y) / abs(direction.x);
    } else if (face == 4.0) {
      uv = direction.xz / abs(direction.y);
    } else {
      uv = vec2(-direction.x, direction.y) / abs(direction.z);
    }
    return 0.5 * (uv + 1.0);
}
vec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {
  float face = getFace(direction);
  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);
  mipInt = max(mipInt, cubeUV_minMipLevel);
  float faceSize = exp2(mipInt);
  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);
  vec2 uv = getUV(direction, face) * (faceSize - 1.0);
  vec2 f = fract(uv);
  uv += 0.5 - f;
  if (face > 2.0) {
    uv.y += faceSize;
    face -= 3.0;
  }
  uv.x += face * faceSize;
  if(mipInt < cubeUV_maxMipLevel){
    uv.y += 2.0 * cubeUV_maxTileSize;
  }
  uv.y += filterInt * 2.0 * cubeUV_minTileSize;
  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);
  uv *= texelSize;
  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x += texelSize;
  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.y += texelSize;
  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x -= texelSize;
  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  vec3 tm = mix(tl, tr, f.x);
  vec3 bm = mix(bl, br, f.x);
  return mix(tm, bm, f.y);
}
#define r0 1.0
#define v0 0.339
#define m0 -2.0
#define r1 0.8
#define v1 0.276
#define m1 -1.0
#define r4 0.4
#define v4 0.046
#define m4 2.0
#define r5 0.305
#define v5 0.016
#define m5 3.0
#define r6 0.21
#define v6 0.0038
#define m6 4.0
float roughnessToMip(float roughness) {
  float mip = 0.0;
  if (roughness >= r1) {
    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;
  } else if (roughness >= r4) {
    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;
  } else if (roughness >= r5) {
    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;
  } else if (roughness >= r6) {
    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;
  } else {
    mip = -2.0 * log2(1.16 * roughness);  }
  return mip;
}
vec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {
  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);
  float mipF = fract(mip);
  float mipInt = floor(mip);
  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);
  if (mipF == 0.0) {
    return vec4(color0, 1.0);
  } else {
    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);
    return vec4(mix(color0, color1, mipF), 1.0);
  }
}
#endif`,Ud=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	transformedNormal = mat3( instanceMatrix ) * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,zd=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Gd=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Hd=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Vd=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,kd="gl_FragColor = linearToOutputTexel( gl_FragColor );",Wd=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = min( floor( D ) / 255.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,jd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		}  else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ), 0.0 );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,qd=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Xd=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Yd=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Zd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) { 
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Jd=`#ifdef USE_FOG
	fogDepth = -mvPosition.z;
#endif`,$d=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,Qd=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Kd=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ep=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,tp=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,np=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,rp=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif`,ip=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
		float shadowCameraNear;
		float shadowCameraFar;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,ap=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
		  vec3 reflectVec = reflect( -viewDir, normal );
		  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
		  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,op=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,sp=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,lp=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,cp=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,up=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = saturate( clearcoat );	material.clearcoatRoughness = max( clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,hp=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,fp=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		directLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		directLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,dp=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,pp=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,vp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,mp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,gp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,yp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,xp=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,_p=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,bp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,wp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Mp=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ep=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Tp=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,Sp=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Ap=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += morphTarget4 * morphTargetInfluences[ 4 ];
	transformed += morphTarget5 * morphTargetInfluences[ 5 ];
	transformed += morphTarget6 * morphTargetInfluences[ 6 ];
	transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,Lp=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Rp=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,Pp=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,Cp=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Dp=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,Op=`#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Ip=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Np=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Fp=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Bp=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Up=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,zp=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Gp=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Hp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			shadow = (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Vp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,kp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif`,Wp=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}`,jp=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,qp=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,Xp=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Yp=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Zp=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Jp=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,$p=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Qp=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );
}`,Kp=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,ev=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,tv=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,nv=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,rv=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,iv=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,av=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,ov=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,sv=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,lv=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,uv=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}`,hv=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}`,fv=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,dv=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,pv=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,mv=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,gv=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,yv=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,xv=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,_v=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bv=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,wv=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Mv=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ev=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tv=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Sv=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Av=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lv=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSPARENCY
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSPARENCY
	uniform float transparency;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSPARENCY
		diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rv=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pv=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,Cv=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Dv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ov=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Iv=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <fog_fragment>
}`,Nv=`#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Bv=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ie={alphamap_fragment:xd,alphamap_pars_fragment:_d,alphatest_fragment:bd,aomap_fragment:wd,aomap_pars_fragment:Md,begin_vertex:Ed,beginnormal_vertex:Td,bsdfs:Sd,bumpmap_pars_fragment:Ad,clipping_planes_fragment:Ld,clipping_planes_pars_fragment:Rd,clipping_planes_pars_vertex:Pd,clipping_planes_vertex:Cd,color_fragment:Dd,color_pars_fragment:Od,color_pars_vertex:Id,color_vertex:Nd,common:Fd,cube_uv_reflection_fragment:Bd,defaultnormal_vertex:Ud,displacementmap_pars_vertex:zd,displacementmap_vertex:Gd,emissivemap_fragment:Hd,emissivemap_pars_fragment:Vd,encodings_fragment:kd,encodings_pars_fragment:Wd,envmap_fragment:jd,envmap_common_pars_fragment:qd,envmap_pars_fragment:Xd,envmap_pars_vertex:Yd,envmap_physical_pars_fragment:ap,envmap_vertex:Zd,fog_vertex:Jd,fog_pars_vertex:$d,fog_fragment:Qd,fog_pars_fragment:Kd,gradientmap_pars_fragment:ep,lightmap_fragment:tp,lightmap_pars_fragment:np,lights_lambert_vertex:rp,lights_pars_begin:ip,lights_toon_fragment:op,lights_toon_pars_fragment:sp,lights_phong_fragment:lp,lights_phong_pars_fragment:cp,lights_physical_fragment:up,lights_physical_pars_fragment:hp,lights_fragment_begin:fp,lights_fragment_maps:dp,lights_fragment_end:pp,logdepthbuf_fragment:vp,logdepthbuf_pars_fragment:mp,logdepthbuf_pars_vertex:gp,logdepthbuf_vertex:yp,map_fragment:xp,map_pars_fragment:_p,map_particle_fragment:bp,map_particle_pars_fragment:wp,metalnessmap_fragment:Mp,metalnessmap_pars_fragment:Ep,morphnormal_vertex:Tp,morphtarget_pars_vertex:Sp,morphtarget_vertex:Ap,normal_fragment_begin:Lp,normal_fragment_maps:Rp,normalmap_pars_fragment:Pp,clearcoat_normal_fragment_begin:Cp,clearcoat_normal_fragment_maps:Dp,clearcoat_normalmap_pars_fragment:Op,packing:Ip,premultiplied_alpha_fragment:Np,project_vertex:Fp,dithering_fragment:Bp,dithering_pars_fragment:Up,roughnessmap_fragment:zp,roughnessmap_pars_fragment:Gp,shadowmap_pars_fragment:Hp,shadowmap_pars_vertex:Vp,shadowmap_vertex:kp,shadowmask_pars_fragment:Wp,skinbase_vertex:jp,skinning_pars_vertex:qp,skinning_vertex:Xp,skinnormal_vertex:Yp,specularmap_fragment:Zp,specularmap_pars_fragment:Jp,tonemapping_fragment:$p,tonemapping_pars_fragment:Qp,uv_pars_fragment:Kp,uv_pars_vertex:ev,uv_vertex:tv,uv2_pars_fragment:nv,uv2_pars_vertex:rv,uv2_vertex:iv,worldpos_vertex:av,background_frag:ov,background_vert:sv,cube_frag:lv,cube_vert:cv,depth_frag:uv,depth_vert:hv,distanceRGBA_frag:fv,distanceRGBA_vert:dv,equirect_frag:pv,equirect_vert:vv,linedashed_frag:mv,linedashed_vert:gv,meshbasic_frag:yv,meshbasic_vert:xv,meshlambert_frag:_v,meshlambert_vert:bv,meshmatcap_frag:wv,meshmatcap_vert:Mv,meshtoon_frag:Ev,meshtoon_vert:Tv,meshphong_frag:Sv,meshphong_vert:Av,meshphysical_frag:Lv,meshphysical_vert:Rv,normal_frag:Pv,normal_vert:Cv,points_frag:Dv,points_vert:Ov,shadow_frag:Iv,shadow_vert:Nv,sprite_frag:Fv,sprite_vert:Bv},ne={common:{diffuse:{value:new se(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new yt()},uv2Transform:{value:new yt()},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new G(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new se(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new se(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new yt()}},sprite:{diffuse:{value:new se(15658734)},opacity:{value:1},center:{value:new G(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new yt()}}},_n={basic:{uniforms:Mt([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.fog]),vertexShader:Ie.meshbasic_vert,fragmentShader:Ie.meshbasic_frag},lambert:{uniforms:Mt([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.fog,ne.lights,{emissive:{value:new se(0)}}]),vertexShader:Ie.meshlambert_vert,fragmentShader:Ie.meshlambert_frag},phong:{uniforms:Mt([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.fog,ne.lights,{emissive:{value:new se(0)},specular:{value:new se(1118481)},shininess:{value:30}}]),vertexShader:Ie.meshphong_vert,fragmentShader:Ie.meshphong_frag},standard:{uniforms:Mt([ne.common,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.roughnessmap,ne.metalnessmap,ne.fog,ne.lights,{emissive:{value:new se(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:Ie.meshphysical_vert,fragmentShader:Ie.meshphysical_frag},toon:{uniforms:Mt([ne.common,ne.specularmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.gradientmap,ne.fog,ne.lights,{emissive:{value:new se(0)},specular:{value:new se(1118481)},shininess:{value:30}}]),vertexShader:Ie.meshtoon_vert,fragmentShader:Ie.meshtoon_frag},matcap:{uniforms:Mt([ne.common,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.fog,{matcap:{value:null}}]),vertexShader:Ie.meshmatcap_vert,fragmentShader:Ie.meshmatcap_frag},points:{uniforms:Mt([ne.points,ne.fog]),vertexShader:Ie.points_vert,fragmentShader:Ie.points_frag},dashed:{uniforms:Mt([ne.common,ne.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ie.linedashed_vert,fragmentShader:Ie.linedashed_frag},depth:{uniforms:Mt([ne.common,ne.displacementmap]),vertexShader:Ie.depth_vert,fragmentShader:Ie.depth_frag},normal:{uniforms:Mt([ne.common,ne.bumpmap,ne.normalmap,ne.displacementmap,{opacity:{value:1}}]),vertexShader:Ie.normal_vert,fragmentShader:Ie.normal_frag},sprite:{uniforms:Mt([ne.sprite,ne.fog]),vertexShader:Ie.sprite_vert,fragmentShader:Ie.sprite_frag},background:{uniforms:{uvTransform:{value:new yt()},t2D:{value:null}},vertexShader:Ie.background_vert,fragmentShader:Ie.background_frag},cube:{uniforms:Mt([ne.envmap,{opacity:{value:1}}]),vertexShader:Ie.cube_vert,fragmentShader:Ie.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ie.equirect_vert,fragmentShader:Ie.equirect_frag},distanceRGBA:{uniforms:Mt([ne.common,ne.displacementmap,{referencePosition:{value:new E()},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ie.distanceRGBA_vert,fragmentShader:Ie.distanceRGBA_frag},shadow:{uniforms:Mt([ne.lights,ne.fog,{color:{value:new se(0)},opacity:{value:1}}]),vertexShader:Ie.shadow_vert,fragmentShader:Ie.shadow_frag}};_n.physical={uniforms:Mt([_n.standard.uniforms,{transparency:{value:0},clearcoat:{value:0},clearcoatRoughness:{value:0},sheen:{value:new se(0)},clearcoatNormalScale:{value:new G(1,1)},clearcoatNormalMap:{value:null}}]),vertexShader:Ie.meshphysical_vert,fragmentShader:Ie.meshphysical_frag};function ju(){var e=null,t=!1,n=null;function r(i,a){t!==!1&&(n(i,a),e.requestAnimationFrame(r));}return f(r,"onAnimationFrame"),{start:function(){t!==!0&&n!==null&&(e.requestAnimationFrame(r),t=!0);},stop:function(){t=!1;},setAnimationLoop:function(i){n=i;},setContext:function(i){e=i;}};}f(ju,"WebGLAnimation");function Uv(e){var t=new WeakMap();function n(s,l){var c=s.array,u=s.usage,h=e.createBuffer();e.bindBuffer(l,h),e.bufferData(l,c,u),s.onUploadCallback();var d=5126;return c instanceof Float32Array?d=5126:c instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):c instanceof Uint16Array?d=5123:c instanceof Int16Array?d=5122:c instanceof Uint32Array?d=5125:c instanceof Int32Array?d=5124:c instanceof Int8Array?d=5120:c instanceof Uint8Array&&(d=5121),{buffer:h,type:d,bytesPerElement:c.BYTES_PER_ELEMENT,version:s.version};}f(n,"createBuffer");function r(s,l,c){var u=l.array,h=l.updateRange;e.bindBuffer(c,s),h.count===-1?e.bufferSubData(c,0,u):(e.bufferSubData(c,h.offset*u.BYTES_PER_ELEMENT,u.subarray(h.offset,h.offset+h.count)),h.count=-1);}f(r,"updateBuffer");function i(s){return s.isInterleavedBufferAttribute&&(s=s.data),t.get(s);}f(i,"get");function a(s){s.isInterleavedBufferAttribute&&(s=s.data);var l=t.get(s);l&&(e.deleteBuffer(l.buffer),t.delete(s));}f(a,"remove");function o(s,l){s.isInterleavedBufferAttribute&&(s=s.data);var c=t.get(s);c===void 0?t.set(s,n(s,l)):c.version<s.version&&(r(c.buffer,s,l),c.version=s.version);}return f(o,"update"),{get:i,remove:a,update:o};}f(Uv,"WebGLAttributes");function uo(e,t,n,r){Me.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new $r(e,t,n,r)),this.mergeVertices();}f(uo,"PlaneGeometry");uo.prototype=Object.create(Me.prototype);uo.prototype.constructor=uo;function $r(e,t,n,r){le.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},e=e||1,t=t||1;var i=e/2,a=t/2,o=Math.floor(n)||1,s=Math.floor(r)||1,l=o+1,c=s+1,u=e/o,h=t/s,d,p,v=[],y=[],m=[],x=[];for(p=0;p<c;p++){var _=p*h-a;for(d=0;d<l;d++){var w=d*u-i;y.push(w,-_,0),m.push(0,0,1),x.push(d/o),x.push(1-p/s);}}for(p=0;p<s;p++)for(d=0;d<o;d++){var T=d+l*p,M=d+l*(p+1),R=d+1+l*(p+1),S=d+1+l*p;v.push(T,M,S),v.push(M,R,S);}this.setIndex(v),this.setAttribute("position",new re(y,3)),this.setAttribute("normal",new re(m,3)),this.setAttribute("uv",new re(x,2));}f($r,"PlaneBufferGeometry");$r.prototype=Object.create(le.prototype);$r.prototype.constructor=$r;function zv(e,t,n,r){var i=new se(0),a=0,o,s,l=null,c=0;function u(d,p,v,y){var m=p.background,x=e.xr,_=x.getSession&&x.getSession();if(_&&_.environmentBlendMode==="additive"&&(m=null),m===null?(h(i,a),l=null,c=0):m&&m.isColor&&(h(m,1),y=!0,l=null,c=0),(e.autoClear||y)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLRenderTargetCube||m.mapping===ma)){s===void 0&&(s=new nt(new sr(1,1,1),new Lt({type:"BackgroundCubeMaterial",uniforms:Zr(_n.cube.uniforms),vertexShader:_n.cube.vertexShader,fragmentShader:_n.cube.fragmentShader,side:ft,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(T,M,R){this.matrixWorld.copyPosition(R.matrixWorld);},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value;}}),n.update(s));var w=m.isWebGLRenderTargetCube?m.texture:m;s.material.uniforms.envMap.value=w,s.material.uniforms.flipEnvMap.value=w.isCubeTexture?-1:1,(l!==m||c!==w.version)&&(s.material.needsUpdate=!0,l=m,c=w.version),d.unshift(s,s.geometry,s.material,0,0,null);}else m&&m.isTexture&&(o===void 0&&(o=new nt(new $r(2,2),new Lt({type:"BackgroundMaterial",uniforms:Zr(_n.background.uniforms),vertexShader:_n.background.vertexShader,fragmentShader:_n.background.fragmentShader,side:pa,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value;}}),n.update(o)),o.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),(l!==m||c!==m.version)&&(o.material.needsUpdate=!0,l=m,c=m.version),d.unshift(o,o.geometry,o.material,0,0,null));}f(u,"render");function h(d,p){t.buffers.color.setClear(d.r,d.g,d.b,p,r);}return f(h,"setClear"),{getClearColor:function(){return i;},setClearColor:function(d,p){i.set(d),a=p!==void 0?p:1,h(i,a);},getClearAlpha:function(){return a;},setClearAlpha:function(d){a=d,h(i,a);},render:u};}f(zv,"WebGLBackground");function Gv(e,t,n,r){var i=r.isWebGL2,a;function o(c){a=c;}f(o,"setMode");function s(c,u){e.drawArrays(a,c,u),n.update(u,a);}f(s,"render");function l(c,u,h,d){if(d!==0){var p,v;if(i)p=e,v="drawArraysInstanced";else if(p=t.get("ANGLE_instanced_arrays"),v="drawArraysInstancedANGLE",p===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return;}p[v](a,u,h,d),n.update(h,a,d);}}f(l,"renderInstances"),this.setMode=o,this.render=s,this.renderInstances=l;}f(Gv,"WebGLBufferRenderer");function Hv(e,t,n){var r;function i(){if(r!==void 0)return r;var R=t.get("EXT_texture_filter_anisotropic");return R!==null?r=e.getParameter(R.MAX_TEXTURE_MAX_ANISOTROPY_EXT):r=0,r;}f(i,"getMaxAnisotropy");function a(R){if(R==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";R="mediump";}return R==="mediump"&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp";}f(a,"getMaxPrecision");var o=typeof WebGL2RenderingContext<"u"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&e instanceof WebGL2ComputeRenderingContext,s=n.precision!==void 0?n.precision:"highp",l=a(s);l!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",l,"instead."),s=l);var c=n.logarithmicDepthBuffer===!0,u=e.getParameter(34930),h=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),v=e.getParameter(34921),y=e.getParameter(36347),m=e.getParameter(36348),x=e.getParameter(36349),_=h>0,w=o||!!t.get("OES_texture_float"),T=_&&w,M=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:i,getMaxPrecision:a,precision:s,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:p,maxAttributes:v,maxVertexUniforms:y,maxVaryings:m,maxFragmentUniforms:x,vertexTextures:_,floatFragmentTextures:w,floatVertexTextures:T,maxSamples:M};}f(Hv,"WebGLCapabilities");function Vv(){var e=this,t=null,n=0,r=!1,i=!1,a=new nn(),o=new yt(),s={value:null,needsUpdate:!1};this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(u,h,d){var p=u.length!==0||h||n!==0||r;return r=h,t=c(u,d,0),n=u.length,p;},this.beginShadows=function(){i=!0,c(null);},this.endShadows=function(){i=!1,l();},this.setState=function(u,h,d,p,v,y){if(!r||u===null||u.length===0||i&&!d)i?c(null):l();else{var m=i?0:n,x=m*4,_=v.clippingState||null;s.value=_,_=c(u,p,x,y);for(var w=0;w!==x;++w)_[w]=t[w];v.clippingState=_,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=m;}};function l(){s.value!==t&&(s.value=t,s.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0;}f(l,"resetGlobalState");function c(u,h,d,p){var v=u!==null?u.length:0,y=null;if(v!==0){if(y=s.value,p!==!0||y===null){var m=d+v*4,x=h.matrixWorldInverse;o.getNormalMatrix(x),(y===null||y.length<m)&&(y=new Float32Array(m));for(var _=0,w=d;_!==v;++_,w+=4)a.copy(u[_]).applyMatrix4(x,o),a.normal.toArray(y,w),y[w+3]=a.constant;}s.value=y,s.needsUpdate=!0;}return e.numPlanes=v,y;}f(c,"projectPlanes");}f(Vv,"WebGLClipping");function kv(e){var t={};return{get:function(n){if(t[n]!==void 0)return t[n];var r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n);}return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=r,r;}};}f(kv,"WebGLExtensions");function Wv(e,t,n){var r=new WeakMap(),i=new WeakMap();function a(u){var h=u.target,d=r.get(h);d.index!==null&&t.remove(d.index);for(var p in d.attributes)t.remove(d.attributes[p]);h.removeEventListener("dispose",a),r.delete(h);var v=i.get(d);v&&(t.remove(v),i.delete(d)),n.memory.geometries--;}f(a,"onGeometryDispose");function o(u,h){var d=r.get(h);return d||(h.addEventListener("dispose",a),h.isBufferGeometry?d=h:h.isGeometry&&(h._bufferGeometry===void 0&&(h._bufferGeometry=new le().setFromObject(u)),d=h._bufferGeometry),r.set(h,d),n.memory.geometries++,d);}f(o,"get");function s(u){var h=u.index,d=u.attributes;h!==null&&t.update(h,34963);for(var p in d)t.update(d[p],34962);var v=u.morphAttributes;for(var p in v)for(var y=v[p],m=0,x=y.length;m<x;m++)t.update(y[m],34962);}f(s,"update");function l(u){var h=[],d=u.index,p=u.attributes.position,v=0;if(d!==null){var y=d.array;v=d.version;for(var m=0,x=y.length;m<x;m+=3){var _=y[m+0],w=y[m+1],T=y[m+2];h.push(_,w,w,T,T,_);}}else{var y=p.array;v=p.version;for(var m=0,x=y.length/3-1;m<x;m+=3){var _=m+0,w=m+1,T=m+2;h.push(_,w,w,T,T,_);}}var M=new(ku(h)>65535?Bi:Fi)(h,1);M.version=v,t.update(M,34963);var R=i.get(u);R&&t.remove(R),i.set(u,M);}f(l,"updateWireframeAttribute");function c(u){var h=i.get(u);if(h){var d=u.index;d!==null&&h.version<d.version&&l(u);}else l(u);return i.get(u);}return f(c,"getWireframeAttribute"),{get:o,update:s,getWireframeAttribute:c};}f(Wv,"WebGLGeometries");function jv(e,t,n,r){var i=r.isWebGL2,a;function o(d){a=d;}f(o,"setMode");var s,l;function c(d){s=d.type,l=d.bytesPerElement;}f(c,"setIndex");function u(d,p){e.drawElements(a,p,s,d*l),n.update(p,a);}f(u,"render");function h(d,p,v,y){if(y!==0){var m,x;if(i)m=e,x="drawElementsInstanced";else if(m=t.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return;}m[x](a,v,s,p*l,y),n.update(v,a,y);}}f(h,"renderInstances"),this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h;}f(jv,"WebGLIndexedBufferRenderer");function qv(e){var t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function r(a,o,s){switch(s=s||1,n.calls++,o){case 4:n.triangles+=s*(a/3);break;case 1:n.lines+=s*(a/2);break;case 3:n.lines+=s*(a-1);break;case 2:n.lines+=s*a;break;case 0:n.points+=s*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break;}}f(r,"update");function i(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0;}return f(i,"reset"),{memory:t,render:n,programs:null,autoReset:!0,reset:i,update:r};}f(qv,"WebGLInfo");function Xv(e,t){return Math.abs(t[1])-Math.abs(e[1]);}f(Xv,"absNumericalSort");function Yv(e){var t={},n=new Float32Array(8);function r(i,a,o,s){var l=i.morphTargetInfluences,c=l===void 0?0:l.length,u=t[a.id];if(u===void 0){u=[];for(var h=0;h<c;h++)u[h]=[h,0];t[a.id]=u;}for(var d=o.morphTargets&&a.morphAttributes.position,p=o.morphNormals&&a.morphAttributes.normal,h=0;h<c;h++){var v=u[h];v[1]!==0&&(d&&a.deleteAttribute("morphTarget"+h),p&&a.deleteAttribute("morphNormal"+h));}for(var h=0;h<c;h++){var v=u[h];v[0]=h,v[1]=l[h];}u.sort(Xv);for(var y=0,h=0;h<8;h++){var v=u[h];if(v){var m=v[0],x=v[1];if(x){d&&a.setAttribute("morphTarget"+h,d[m]),p&&a.setAttribute("morphNormal"+h,p[m]),n[h]=x,y+=x;continue;}}n[h]=0;}var _=a.morphTargetsRelative?1:1-y;s.getUniforms().setValue(e,"morphTargetBaseInfluence",_),s.getUniforms().setValue(e,"morphTargetInfluences",n);}return f(r,"update"),{update:r};}f(Yv,"WebGLMorphtargets");function Zv(e,t,n,r){var i={};function a(s){var l=r.render.frame,c=s.geometry,u=t.get(s,c);return i[u.id]!==l&&(c.isGeometry&&u.updateFromObject(s),t.update(u),i[u.id]=l),s.isInstancedMesh&&n.update(s.instanceMatrix,34962),u;}f(a,"update");function o(){i={};}return f(o,"dispose"),{update:a,dispose:o};}f(Zv,"WebGLObjects");function Hn(e,t,n,r,i,a,o,s,l,c){e=e!==void 0?e:[],t=t!==void 0?t:Pl,o=o!==void 0?o:cr,Je.call(this,e,t,n,r,i,a,o,s,l,c),this.flipY=!1;}f(Hn,"CubeTexture");Hn.prototype=Object.create(Je.prototype);Hn.prototype.constructor=Hn;Hn.prototype.isCubeTexture=!0;Object.defineProperty(Hn.prototype,"images",{get:function(){return this.image;},set:function(e){this.image=e;}});function zi(e,t,n,r){Je.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:r||1},this.magFilter=lt,this.minFilter=lt,this.wrapR=At,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0;}f(zi,"DataTexture2DArray");zi.prototype=Object.create(Je.prototype);zi.prototype.constructor=zi;zi.prototype.isDataTexture2DArray=!0;function Gi(e,t,n,r){Je.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:r||1},this.magFilter=lt,this.minFilter=lt,this.wrapR=At,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0;}f(Gi,"DataTexture3D");Gi.prototype=Object.create(Je.prototype);Gi.prototype.constructor=Gi;Gi.prototype.isDataTexture3D=!0;var qu=new Je(),Jv=new zi(),$v=new Gi(),Xu=new Hn(),gc=[],yc=[],xc=new Float32Array(16),_c=new Float32Array(9),bc=new Float32Array(4);function mi(e,t,n){var r=e[0];if(r<=0||r>0)return e;var i=t*n,a=gc[i];if(a===void 0&&(a=new Float32Array(i),gc[i]=a),t!==0){r.toArray(a,0);for(var o=1,s=0;o!==t;++o)s+=n,e[o].toArray(a,s);}return a;}f(mi,"flatten");function Ht(e,t){if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0;}f(Ht,"arraysEqual");function Nt(e,t){for(var n=0,r=t.length;n<r;n++)e[n]=t[n];}f(Nt,"copyArray");function Yu(e,t){var n=yc[t];n===void 0&&(n=new Int32Array(t),yc[t]=n);for(var r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n;}f(Yu,"allocTexUnits");function Qv(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t);}f(Qv,"setValueV1f");function Kv(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ht(n,t))return;e.uniform2fv(this.addr,t),Nt(n,t);}}f(Kv,"setValueV2f");function em(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Ht(n,t))return;e.uniform3fv(this.addr,t),Nt(n,t);}}f(em,"setValueV3f");function tm(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ht(n,t))return;e.uniform4fv(this.addr,t),Nt(n,t);}}f(tm,"setValueV4f");function nm(e,t){var n=this.cache,r=t.elements;if(r===void 0){if(Ht(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Nt(n,t);}else{if(Ht(n,r))return;bc.set(r),e.uniformMatrix2fv(this.addr,!1,bc),Nt(n,r);}}f(nm,"setValueM2");function rm(e,t){var n=this.cache,r=t.elements;if(r===void 0){if(Ht(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Nt(n,t);}else{if(Ht(n,r))return;_c.set(r),e.uniformMatrix3fv(this.addr,!1,_c),Nt(n,r);}}f(rm,"setValueM3");function im(e,t){var n=this.cache,r=t.elements;if(r===void 0){if(Ht(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Nt(n,t);}else{if(Ht(n,r))return;xc.set(r),e.uniformMatrix4fv(this.addr,!1,xc),Nt(n,r);}}f(im,"setValueM4");function am(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(t||qu,i);}f(am,"setValueT1");function om(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||Jv,i);}f(om,"setValueT2DArray1");function sm(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||$v,i);}f(sm,"setValueT3D1");function lm(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(t||Xu,i);}f(lm,"setValueT6");function cm(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t);}f(cm,"setValueV1i");function um(e,t){var n=this.cache;Ht(n,t)||(e.uniform2iv(this.addr,t),Nt(n,t));}f(um,"setValueV2i");function hm(e,t){var n=this.cache;Ht(n,t)||(e.uniform3iv(this.addr,t),Nt(n,t));}f(hm,"setValueV3i");function fm(e,t){var n=this.cache;Ht(n,t)||(e.uniform4iv(this.addr,t),Nt(n,t));}f(fm,"setValueV4i");function dm(e){switch(e){case 5126:return Qv;case 35664:return Kv;case 35665:return em;case 35666:return tm;case 35674:return nm;case 35675:return rm;case 35676:return im;case 35678:case 36198:return am;case 35679:return sm;case 35680:return lm;case 36289:return om;case 5124:case 35670:return cm;case 35667:case 35671:return um;case 35668:case 35672:return hm;case 35669:case 35673:return fm;}}f(dm,"getSingularSetter");function pm(e,t){e.uniform1fv(this.addr,t);}f(pm,"setValueV1fArray");function vm(e,t){e.uniform1iv(this.addr,t);}f(vm,"setValueV1iArray");function mm(e,t){e.uniform2iv(this.addr,t);}f(mm,"setValueV2iArray");function gm(e,t){e.uniform3iv(this.addr,t);}f(gm,"setValueV3iArray");function ym(e,t){e.uniform4iv(this.addr,t);}f(ym,"setValueV4iArray");function xm(e,t){var n=mi(t,this.size,2);e.uniform2fv(this.addr,n);}f(xm,"setValueV2fArray");function _m(e,t){var n=mi(t,this.size,3);e.uniform3fv(this.addr,n);}f(_m,"setValueV3fArray");function bm(e,t){var n=mi(t,this.size,4);e.uniform4fv(this.addr,n);}f(bm,"setValueV4fArray");function wm(e,t){var n=mi(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n);}f(wm,"setValueM2Array");function Mm(e,t){var n=mi(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n);}f(Mm,"setValueM3Array");function Em(e,t){var n=mi(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n);}f(Em,"setValueM4Array");function Tm(e,t,n){var r=t.length,i=Yu(n,r);e.uniform1iv(this.addr,i);for(var a=0;a!==r;++a)n.safeSetTexture2D(t[a]||qu,i[a]);}f(Tm,"setValueT1Array");function Sm(e,t,n){var r=t.length,i=Yu(n,r);e.uniform1iv(this.addr,i);for(var a=0;a!==r;++a)n.safeSetTextureCube(t[a]||Xu,i[a]);}f(Sm,"setValueT6Array");function Am(e){switch(e){case 5126:return pm;case 35664:return xm;case 35665:return _m;case 35666:return bm;case 35674:return wm;case 35675:return Mm;case 35676:return Em;case 35678:case 36198:case 36298:case 36306:return Tm;case 35680:case 36300:case 36308:return Sm;case 5124:case 35670:return vm;case 35667:case 35671:return mm;case 35668:case 35672:return gm;case 35669:case 35673:return ym;}}f(Am,"getPureArraySetter");function Lm(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=dm(t.type);}f(Lm,"SingleUniform");function Zu(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Am(t.type);}f(Zu,"PureArrayUniform");Zu.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Nt(t,e);};function Ju(e){this.id=e,this.seq=[],this.map={};}f(Ju,"StructuredUniform");Ju.prototype.setValue=function(e,t,n){for(var r=this.seq,i=0,a=r.length;i!==a;++i){var o=r[i];o.setValue(e,t[o.id],n);}};var bs=/([\w\d_]+)(\])?(\[|\.)?/g;function wc(e,t){e.seq.push(t),e.map[t.id]=t;}f(wc,"addUniform");function Rm(e,t,n){var r=e.name,i=r.length;for(bs.lastIndex=0;;){var a=bs.exec(r),o=bs.lastIndex,s=a[1],l=a[2]==="]",c=a[3];if(l&&(s=s|0),c===void 0||c==="["&&o+2===i){wc(n,c===void 0?new Lm(s,e,t):new Zu(s,e,t));break;}else{var u=n.map,h=u[s];h===void 0&&(h=new Ju(s),wc(n,h)),n=h;}}}f(Rm,"parseUniform");function Bn(e,t){this.seq=[],this.map={};for(var n=e.getProgramParameter(t,35718),r=0;r<n;++r){var i=e.getActiveUniform(t,r),a=e.getUniformLocation(t,i.name);Rm(i,a,this);}}f(Bn,"WebGLUniforms");Bn.prototype.setValue=function(e,t,n,r){var i=this.map[t];i!==void 0&&i.setValue(e,n,r);};Bn.prototype.setOptional=function(e,t,n){var r=t[n];r!==void 0&&this.setValue(e,n,r);};Bn.upload=function(e,t,n,r){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=n[o.id];s.needsUpdate!==!1&&o.setValue(e,s.value,r);}};Bn.seqWithValue=function(e,t){for(var n=[],r=0,i=e.length;r!==i;++r){var a=e[r];a.id in t&&n.push(a);}return n;};function Mc(e,t,n){var r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r;}f(Mc,"WebGLShader");var Pm=0;function Cm(e){for(var t=e.split(`
`),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join(`
`);}f(Cm,"addLineNumbers");function $u(e){switch(e){case It:return["Linear","( value )"];case Nl:return["sRGB","( value )"];case Fl:return["RGBE","( value )"];case Bu:return["RGBM","( value, 7.0 )"];case Uu:return["RGBM","( value, 16.0 )"];case zu:return["RGBD","( value, 256.0 )"];case Fu:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Qf:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+e);}}f($u,"getEncodingComponents");function Ec(e,t,n){var r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(r&&i==="")return"";var a=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+i+Cm(a);}f(Ec,"getShaderErrors");function wi(e,t){var n=$u(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }";}f(wi,"getTexelDecodingFunction");function Dm(e,t){var n=$u(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }";}f(Dm,"getTexelEncodingFunction");function Om(e,t){var n;switch(t){case Ll:n="Linear";break;case df:n="Reinhard";break;case pf:n="Uncharted2";break;case vf:n="OptimizedCineon";break;case mf:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+t);}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }";}f(Om,"getToneMappingFunction");function Im(e,t,n){e=e||{};var r=[e.derivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return r.filter(Li).join(`
`);}f(Im,"generateExtensions");function Nm(e){var t=[];for(var n in e){var r=e[n];r!==!1&&t.push("#define "+n+" "+r);}return t.join(`
`);}f(Nm,"generateDefines");function Fm(e,t){for(var n={},r=e.getProgramParameter(t,35721),i=0;i<r;i++){var a=e.getActiveAttrib(t,i),o=a.name;n[o]=e.getAttribLocation(t,o);}return n;}f(Fm,"fetchAttributeLocations");function Li(e){return e!=="";}f(Li,"filterEmptyLine");function Tc(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows);}f(Tc,"replaceLightNums");function Sc(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection);}f(Sc,"replaceClippingPlaneNums");var Bm=/^[ \t]*#include +<([\w\d./]+)>/gm;function zs(e){return e.replace(Bm,Um);}f(zs,"resolveIncludes");function Um(e,t){var n=Ie[t];if(n===void 0)throw new Error("Can not resolve #include <"+t+">");return zs(n);}f(Um,"includeReplacer");var zm=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function Ac(e){return e.replace(zm,Gm);}f(Ac,"unrollLoops");function Gm(e,t,n,r){for(var i="",a=parseInt(t);a<parseInt(n);a++)i+=r.replace(/\[ i \]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i;}f(Gm,"loopReplacer");function Lc(e){var t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t;}f(Lc,"generatePrecision");function Hm(e){var t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===Au?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===kh?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===Ai&&(t="SHADOWMAP_TYPE_VSM"),t;}f(Hm,"generateShadowMapTypeDefine");function Vm(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case Pl:case Cl:t="ENVMAP_TYPE_CUBE";break;case ma:case Ol:t="ENVMAP_TYPE_CUBE_UV";break;case Du:case Dl:t="ENVMAP_TYPE_EQUIREC";break;case Ou:t="ENVMAP_TYPE_SPHERE";break;}return t;}f(Vm,"generateEnvMapTypeDefine");function km(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case Cl:case Dl:t="ENVMAP_MODE_REFRACTION";break;}return t;}f(km,"generateEnvMapModeDefine");function Wm(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case jo:t="ENVMAP_BLENDING_MULTIPLY";break;case hf:t="ENVMAP_BLENDING_MIX";break;case ff:t="ENVMAP_BLENDING_ADD";break;}return t;}f(Wm,"generateEnvMapBlendingDefine");function jm(e,t,n,r,i,a){var o=e.getContext(),s=r.defines,l=i.vertexShader,c=i.fragmentShader,u=Hm(a),h=Vm(a),d=km(a),p=Wm(a),v=e.gammaFactor>0?e.gammaFactor:1,y=a.isWebGL2?"":Im(r.extensions,a,t),m=Nm(s),x=o.createProgram(),_,w,T=a.numMultiviewViews;if(r.isRawShaderMaterial?(_=[m].filter(Li).join(`
`),_.length>0&&(_+=`
`),w=[y,m].filter(Li).join(`
`),w.length>0&&(w+=`
`)):(_=[Lc(a),"#define SHADER_NAME "+i.name,m,a.instancing?"#define USE_INSTANCING":"",a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+v,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+d:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&a.flatShading===!1?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+u:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(a.isWebGL2||t.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Li).join(`
`),w=[y,Lc(a),"#define SHADER_NAME "+i.name,m,a.alphaTest?"#define ALPHATEST "+a.alphaTest+(a.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+v,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+h:"",a.envMap?"#define "+d:"",a.envMap?"#define "+p:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.sheen?"#define USE_SHEEN":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+u:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&(a.isWebGL2||t.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",((r.extensions?r.extensions.shaderTextureLOD:!1)||a.envMap)&&(a.isWebGL2||t.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",a.toneMapping!==eo?"#define TONE_MAPPING":"",a.toneMapping!==eo?Ie.tonemapping_pars_fragment:"",a.toneMapping!==eo?Om("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.matcapEncoding||a.envMapEncoding||a.emissiveMapEncoding||a.lightMapEncoding?Ie.encodings_pars_fragment:"",a.mapEncoding?wi("mapTexelToLinear",a.mapEncoding):"",a.matcapEncoding?wi("matcapTexelToLinear",a.matcapEncoding):"",a.envMapEncoding?wi("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?wi("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.lightMapEncoding?wi("lightMapTexelToLinear",a.lightMapEncoding):"",a.outputEncoding?Dm("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"",`
`].filter(Li).join(`
`)),l=zs(l),l=Tc(l,a),l=Sc(l,a),c=zs(c),c=Tc(c,a),c=Sc(c,a),l=Ac(l),c=Ac(c),a.isWebGL2&&!r.isRawShaderMaterial){var M=!1,R=/^\s*#version\s+300\s+es\s*\n/;r.isShaderMaterial&&l.match(R)!==null&&c.match(R)!==null&&(M=!0,l=l.replace(R,""),c=c.replace(R,"")),_=[`#version 300 es
`,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,w=[`#version 300 es
`,"#define varying in",M?"":"out highp vec4 pc_fragColor;",M?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+w,T>0&&(_=_.replace(`#version 300 es
`,[`#version 300 es
`,"#extension GL_OVR_multiview2 : require","layout(num_views = "+T+") in;","#define VIEW_ID gl_ViewID_OVR"].join(`
`)),_=_.replace(["uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;"].join(`
`),["uniform mat4 modelViewMatrices["+T+"];","uniform mat4 projectionMatrices["+T+"];","uniform mat4 viewMatrices["+T+"];","uniform mat3 normalMatrices["+T+"];","#define modelViewMatrix modelViewMatrices[VIEW_ID]","#define projectionMatrix projectionMatrices[VIEW_ID]","#define viewMatrix viewMatrices[VIEW_ID]","#define normalMatrix normalMatrices[VIEW_ID]"].join(`
`)),w=w.replace(`#version 300 es
`,[`#version 300 es
`,"#extension GL_OVR_multiview2 : require","#define VIEW_ID gl_ViewID_OVR"].join(`
`)),w=w.replace("uniform mat4 viewMatrix;",["uniform mat4 viewMatrices["+T+"];","#define viewMatrix viewMatrices[VIEW_ID]"].join(`
`)));}var S=_+l,A=w+c,I=Mc(o,35633,S),N=Mc(o,35632,A);if(o.attachShader(x,I),o.attachShader(x,N),r.index0AttributeName!==void 0?o.bindAttribLocation(x,0,r.index0AttributeName):a.morphTargets===!0&&o.bindAttribLocation(x,0,"position"),o.linkProgram(x),e.debug.checkShaderErrors){var F=o.getProgramInfoLog(x).trim(),z=o.getShaderInfoLog(I).trim(),H=o.getShaderInfoLog(N).trim(),B=!0,U=!0;if(o.getProgramParameter(x,35714)===!1){B=!1;var W=Ec(o,I,"vertex"),$=Ec(o,N,"fragment");console.error("THREE.WebGLProgram: shader error: ",o.getError(),"35715",o.getProgramParameter(x,35715),"gl.getProgramInfoLog",F,W,$);}else F!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",F):(z===""||H==="")&&(U=!1);U&&(this.diagnostics={runnable:B,material:r,programLog:F,vertexShader:{log:z,prefix:_},fragmentShader:{log:H,prefix:w}});}o.deleteShader(I),o.deleteShader(N);var oe;this.getUniforms=function(){return oe===void 0&&(oe=new Bn(o,x)),oe;};var Z;return this.getAttributes=function(){return Z===void 0&&(Z=Fm(o,x)),Z;},this.destroy=function(){o.deleteProgram(x),this.program=void 0;},this.name=i.name,this.id=Pm++,this.cacheKey=n,this.usedTimes=1,this.program=x,this.vertexShader=I,this.fragmentShader=N,this.numMultiviewViews=T,this;}f(jm,"WebGLProgram");function qm(e,t,n){var r=[],i=n.isWebGL2,a=n.logarithmicDepthBuffer,o=n.floatVertexTextures,s=n.precision,l=n.maxVertexUniforms,c=n.vertexTextures,u={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},h=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","numMultiviewViews","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function d(v){var y=v.skeleton,m=y.bones;if(o)return 1024;var x=l,_=Math.floor((x-20)/4),w=Math.min(_,m.length);return w<m.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+m.length+" bones. This GPU supports "+w+"."),0):w;}f(d,"allocateBones");function p(v){var y;return v?v.isTexture?y=v.encoding:v.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),y=v.texture.encoding):y=It,y;}f(p,"getTextureEncodingFromMap"),this.getParameters=function(v,y,m,x,_,w,T){var M=x.fog,R=v.isMeshStandardMaterial?x.environment:null,S=v.envMap||R,A=u[v.type],I=T.isSkinnedMesh?d(T):0;v.precision!==null&&(s=n.getMaxPrecision(v.precision),s!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",s,"instead."));var N=e.getRenderTarget(),F=N&&N.isWebGLMultiviewRenderTarget?N.numViews:0,z={isWebGL2:i,shaderID:A,precision:s,instancing:T.isInstancedMesh===!0,supportsVertexTextures:c,numMultiviewViews:F,outputEncoding:N!==null?p(N.texture):e.outputEncoding,map:!!v.map,mapEncoding:p(v.map),matcap:!!v.matcap,matcapEncoding:p(v.matcap),envMap:!!S,envMapMode:S&&S.mapping,envMapEncoding:p(S),envMapCubeUV:!!S&&(S.mapping===ma||S.mapping===Ol),lightMap:!!v.lightMap,lightMapEncoding:p(v.lightMap),aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,emissiveMapEncoding:p(v.emissiveMap),bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===td,tangentSpaceNormalMap:v.normalMapType===di,clearcoatNormalMap:!!v.clearcoatNormalMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,alphaMap:!!v.alphaMap,gradientMap:!!v.gradientMap,sheen:!!v.sheen,combine:v.combine,vertexTangents:v.normalMap&&v.vertexTangents,vertexColors:v.vertexColors,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatNormalMap||!!v.displacementMap,uvsVertexOnly:!(!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatNormalMap)&&!!v.displacementMap,fog:!!M,useFog:v.fog,fogExp2:M&&M.isFogExp2,flatShading:v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:a,skinning:v.skinning&&I>0,maxBones:I,useVertexTexture:o,morphTargets:v.morphTargets,morphNormals:v.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:y.directional.length,numPointLights:y.point.length,numSpotLights:y.spot.length,numRectAreaLights:y.rectArea.length,numHemiLights:y.hemi.length,numDirLightShadows:y.directionalShadowMap.length,numPointLightShadows:y.pointShadowMap.length,numSpotLightShadows:y.spotShadowMap.length,numClippingPlanes:_,numClipIntersection:w,dithering:v.dithering,shadowMapEnabled:e.shadowMap.enabled&&m.length>0,shadowMapType:e.shadowMap.type,toneMapping:v.toneMapped?e.toneMapping:eo,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,alphaTest:v.alphaTest,doubleSided:v.side===Wo,flipSided:v.side===ft,depthPacking:v.depthPacking!==void 0?v.depthPacking:!1};return z;},this.getProgramCacheKey=function(v,y){var m=[];if(y.shaderID?m.push(y.shaderID):(m.push(v.fragmentShader),m.push(v.vertexShader)),v.defines!==void 0)for(var x in v.defines)m.push(x),m.push(v.defines[x]);if(v.isRawShaderMaterial===void 0){for(var _=0;_<h.length;_++)m.push(y[h[_]]);m.push(e.outputEncoding),m.push(e.gammaFactor);}return m.push(v.onBeforeCompile.toString()),m.join();},this.acquireProgram=function(v,y,m,x){for(var _,w=0,T=r.length;w<T;w++){var M=r[w];if(M.cacheKey===x){_=M,++_.usedTimes;break;}}return _===void 0&&(_=new jm(e,t,x,v,y,m),r.push(_)),_;},this.releaseProgram=function(v){if(--v.usedTimes===0){var y=r.indexOf(v);r[y]=r[r.length-1],r.pop(),v.destroy();}},this.programs=r;}f(qm,"WebGLPrograms");function Xm(){var e=new WeakMap();function t(a){var o=e.get(a);return o===void 0&&(o={},e.set(a,o)),o;}f(t,"get");function n(a){e.delete(a);}f(n,"remove");function r(a,o,s){e.get(a)[o]=s;}f(r,"update");function i(){e=new WeakMap();}return f(i,"dispose"),{get:t,remove:n,update:r,dispose:i};}f(Xm,"WebGLProperties");function Ym(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id;}f(Ym,"painterSortStable");function Zm(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id;}f(Zm,"reversePainterSortStable");function Rc(){var e=[],t=0,n=[],r=[],i={id:-1};function a(){t=0,n.length=0,r.length=0;}f(a,"init");function o(u,h,d,p,v,y){var m=e[t];return m===void 0?(m={id:u.id,object:u,geometry:h,material:d,program:d.program||i,groupOrder:p,renderOrder:u.renderOrder,z:v,group:y},e[t]=m):(m.id=u.id,m.object=u,m.geometry=h,m.material=d,m.program=d.program||i,m.groupOrder=p,m.renderOrder=u.renderOrder,m.z=v,m.group=y),t++,m;}f(o,"getNextRenderItem");function s(u,h,d,p,v,y){var m=o(u,h,d,p,v,y);(d.transparent===!0?r:n).push(m);}f(s,"push");function l(u,h,d,p,v,y){var m=o(u,h,d,p,v,y);(d.transparent===!0?r:n).unshift(m);}f(l,"unshift");function c(u,h){n.length>1&&n.sort(u||Ym),r.length>1&&r.sort(h||Zm);}return f(c,"sort"),{opaque:n,transparent:r,init:a,push:s,unshift:l,sort:c};}f(Rc,"WebGLRenderList");function Jm(){var e=new WeakMap();function t(i){var a=i.target;a.removeEventListener("dispose",t),e.delete(a);}f(t,"onSceneDispose");function n(i,a){var o=e.get(i),s;return o===void 0?(s=new Rc(),e.set(i,new WeakMap()),e.get(i).set(a,s),i.addEventListener("dispose",t)):(s=o.get(a),s===void 0&&(s=new Rc(),o.set(a,s))),s;}f(n,"get");function r(){e=new WeakMap();}return f(r,"dispose"),{get:n,dispose:r};}f(Jm,"WebGLRenderLists");function $m(){var e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new E(),color:new se(),shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new G()};break;case"SpotLight":n={position:new E(),direction:new E(),color:new se(),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new G()};break;case"PointLight":n={position:new E(),color:new se(),distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new G(),shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new E(),skyColor:new se(),groundColor:new se()};break;case"RectAreaLight":n={color:new se(),position:new E(),halfWidth:new E(),halfHeight:new E()};break;}return e[t.id]=n,n;}};}f($m,"UniformsCache");var Qm=0;function Km(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0);}f(Km,"shadowCastingLightsFirst");function eg(){for(var e=new $m(),t={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},n=0;n<9;n++)t.probe.push(new E());var r=new E(),i=new De(),a=new De();function o(s,l,c){for(var u=0,h=0,d=0,p=0;p<9;p++)t.probe[p].set(0,0,0);var v=0,y=0,m=0,x=0,_=0,w=0,T=0,M=0,R=c.matrixWorldInverse;s.sort(Km);for(var p=0,S=s.length;p<S;p++){var A=s[p],I=A.color,N=A.intensity,F=A.distance,z=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)u+=I.r*N,h+=I.g*N,d+=I.b*N;else if(A.isLightProbe)for(var H=0;H<9;H++)t.probe[H].addScaledVector(A.sh.coefficients[H],N);else if(A.isDirectionalLight){var B=e.get(A);if(B.color.copy(A.color).multiplyScalar(A.intensity),B.direction.setFromMatrixPosition(A.matrixWorld),r.setFromMatrixPosition(A.target.matrixWorld),B.direction.sub(r),B.direction.transformDirection(R),B.shadow=A.castShadow,A.castShadow){var U=A.shadow;B.shadowBias=U.bias,B.shadowRadius=U.radius,B.shadowMapSize=U.mapSize,t.directionalShadowMap[v]=z,t.directionalShadowMatrix[v]=A.shadow.matrix,w++;}t.directional[v]=B,v++;}else if(A.isSpotLight){var B=e.get(A);if(B.position.setFromMatrixPosition(A.matrixWorld),B.position.applyMatrix4(R),B.color.copy(I).multiplyScalar(N),B.distance=F,B.direction.setFromMatrixPosition(A.matrixWorld),r.setFromMatrixPosition(A.target.matrixWorld),B.direction.sub(r),B.direction.transformDirection(R),B.coneCos=Math.cos(A.angle),B.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),B.decay=A.decay,B.shadow=A.castShadow,A.castShadow){var U=A.shadow;B.shadowBias=U.bias,B.shadowRadius=U.radius,B.shadowMapSize=U.mapSize,t.spotShadowMap[m]=z,t.spotShadowMatrix[m]=A.shadow.matrix,M++;}t.spot[m]=B,m++;}else if(A.isRectAreaLight){var B=e.get(A);B.color.copy(I).multiplyScalar(N),B.position.setFromMatrixPosition(A.matrixWorld),B.position.applyMatrix4(R),a.identity(),i.copy(A.matrixWorld),i.premultiply(R),a.extractRotation(i),B.halfWidth.set(A.width*.5,0,0),B.halfHeight.set(0,A.height*.5,0),B.halfWidth.applyMatrix4(a),B.halfHeight.applyMatrix4(a),t.rectArea[x]=B,x++;}else if(A.isPointLight){var B=e.get(A);if(B.position.setFromMatrixPosition(A.matrixWorld),B.position.applyMatrix4(R),B.color.copy(A.color).multiplyScalar(A.intensity),B.distance=A.distance,B.decay=A.decay,B.shadow=A.castShadow,A.castShadow){var U=A.shadow;B.shadowBias=U.bias,B.shadowRadius=U.radius,B.shadowMapSize=U.mapSize,B.shadowCameraNear=U.camera.near,B.shadowCameraFar=U.camera.far,t.pointShadowMap[y]=z,t.pointShadowMatrix[y]=A.shadow.matrix,T++;}t.point[y]=B,y++;}else if(A.isHemisphereLight){var B=e.get(A);B.direction.setFromMatrixPosition(A.matrixWorld),B.direction.transformDirection(R),B.direction.normalize(),B.skyColor.copy(A.color).multiplyScalar(N),B.groundColor.copy(A.groundColor).multiplyScalar(N),t.hemi[_]=B,_++;}}t.ambient[0]=u,t.ambient[1]=h,t.ambient[2]=d;var W=t.hash;(W.directionalLength!==v||W.pointLength!==y||W.spotLength!==m||W.rectAreaLength!==x||W.hemiLength!==_||W.numDirectionalShadows!==w||W.numPointShadows!==T||W.numSpotShadows!==M)&&(t.directional.length=v,t.spot.length=m,t.rectArea.length=x,t.point.length=y,t.hemi.length=_,t.directionalShadowMap.length=w,t.pointShadowMap.length=T,t.spotShadowMap.length=M,t.directionalShadowMatrix.length=w,t.pointShadowMatrix.length=T,t.spotShadowMatrix.length=M,W.directionalLength=v,W.pointLength=y,W.spotLength=m,W.rectAreaLength=x,W.hemiLength=_,W.numDirectionalShadows=w,W.numPointShadows=T,W.numSpotShadows=M,t.version=Qm++);}return f(o,"setup"),{setup:o,state:t};}f(eg,"WebGLLights");function Pc(){var e=new eg(),t=[],n=[];function r(){t.length=0,n.length=0;}f(r,"init");function i(l){t.push(l);}f(i,"pushLight");function a(l){n.push(l);}f(a,"pushShadow");function o(l){e.setup(t,n,l);}f(o,"setupLights");var s={lightsArray:t,shadowsArray:n,lights:e};return{init:r,state:s,setupLights:o,pushLight:i,pushShadow:a};}f(Pc,"WebGLRenderState");function tg(){var e=new WeakMap();function t(i){var a=i.target;a.removeEventListener("dispose",t),e.delete(a);}f(t,"onSceneDispose");function n(i,a){var o;return e.has(i)===!1?(o=new Pc(),e.set(i,new WeakMap()),e.get(i).set(a,o),i.addEventListener("dispose",t)):e.get(i).has(a)===!1?(o=new Pc(),e.get(i).set(a,o)):o=e.get(i).get(a),o;}f(n,"get");function r(){e=new WeakMap();}return f(r,"dispose"),{get:n,dispose:r};}f(tg,"WebGLRenderStates");function fr(e){be.call(this),this.type="MeshDepthMaterial",this.depthPacking=Kf,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e);}f(fr,"MeshDepthMaterial");fr.prototype=Object.create(be.prototype);fr.prototype.constructor=fr;fr.prototype.isMeshDepthMaterial=!0;fr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this;};function dr(e){be.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new E(),this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e);}f(dr,"MeshDistanceMaterial");dr.prototype=Object.create(be.prototype);dr.prototype.constructor=dr;dr.prototype.isMeshDistanceMaterial=!0;dr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this;};var ng=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
  float mean = 0.0;
  float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );
  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
    #ifdef HORIZONAL_PASS
      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
      mean += distribution.x;
      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
    #else
      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );
      mean += depth;
      squared_mean += depth * depth;
    #endif
  }
  mean = mean * HALF_SAMPLE_RATE;
  squared_mean = squared_mean * HALF_SAMPLE_RATE;
  float std_dev = sqrt( squared_mean - mean * mean );
  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,rg=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function Qu(e,t,n){var r=new Zo(),i=new G(),a=new G(),o=new Ze(),s=[],l=[],c={},u={0:ft,1:pa,2:Wo},h=new Lt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new G()},radius:{value:4}},vertexShader:rg,fragmentShader:ng}),d=h.clone();d.defines.HORIZONAL_PASS=1;var p=new le();p.setAttribute("position",new we(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var v=new nt(p,h),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Au,this.render=function(M,R,S){if(y.enabled!==!1&&!(y.autoUpdate===!1&&y.needsUpdate===!1)&&M.length!==0){var A=e.getRenderTarget(),I=e.getActiveCubeFace(),N=e.getActiveMipmapLevel(),F=e.state;F.setBlending(Fn),F.buffers.color.setClear(1,1,1,1),F.buffers.depth.setTest(!0),F.setScissorTest(!1);for(var z=0,H=M.length;z<H;z++){var B=M[z],U=B.shadow;if(U===void 0){console.warn("THREE.WebGLShadowMap:",B,"has no shadow.");continue;}i.copy(U.mapSize);var W=U.getFrameExtents();if(i.multiply(W),a.copy(U.mapSize),(i.x>n||i.y>n)&&(console.warn("THREE.WebGLShadowMap:",B,"has shadow exceeding max texture size, reducing"),i.x>n&&(a.x=Math.floor(n/W.x),i.x=a.x*W.x,U.mapSize.x=a.x),i.y>n&&(a.y=Math.floor(n/W.y),i.y=a.y*W.y,U.mapSize.y=a.y)),U.map===null&&!U.isPointLightShadow&&this.type===Ai){var $={minFilter:dt,magFilter:dt,format:sn};U.map=new Et(i.x,i.y,$),U.map.texture.name=B.name+".shadowMap",U.mapPass=new Et(i.x,i.y,$),U.camera.updateProjectionMatrix();}if(U.map===null){var $={minFilter:lt,magFilter:lt,format:sn};U.map=new Et(i.x,i.y,$),U.map.texture.name=B.name+".shadowMap",U.camera.updateProjectionMatrix();}e.setRenderTarget(U.map),e.clear();for(var oe=U.getViewportCount(),Z=0;Z<oe;Z++){var K=U.getViewport(Z);o.set(a.x*K.x,a.y*K.y,a.x*K.z,a.y*K.w),F.viewport(o),U.updateMatrices(B,Z),r=U.getFrustum(),T(R,S,U.camera,B,this.type);}!U.isPointLightShadow&&this.type===Ai&&m(U,S);}y.needsUpdate=!1,e.setRenderTarget(A,I,N);}};function m(M,R){var S=t.update(v);h.uniforms.shadow_pass.value=M.map.texture,h.uniforms.resolution.value=M.mapSize,h.uniforms.radius.value=M.radius,e.setRenderTarget(M.mapPass),e.clear(),e.renderBufferDirect(R,null,S,h,v,null),d.uniforms.shadow_pass.value=M.mapPass.texture,d.uniforms.resolution.value=M.mapSize,d.uniforms.radius.value=M.radius,e.setRenderTarget(M.map),e.clear(),e.renderBufferDirect(R,null,S,d,v,null);}f(m,"VSMPass");function x(M,R,S){var A=M<<0|R<<1|S<<2,I=s[A];return I===void 0&&(I=new fr({depthPacking:ed,morphTargets:M,skinning:R}),s[A]=I),I;}f(x,"getDepthMaterialVariant");function _(M,R,S){var A=M<<0|R<<1|S<<2,I=l[A];return I===void 0&&(I=new dr({morphTargets:M,skinning:R}),l[A]=I),I;}f(_,"getDistanceMaterialVariant");function w(M,R,S,A,I,N){var F=M.geometry,z=null,H=x,B=M.customDepthMaterial;if(S.isPointLight===!0&&(H=_,B=M.customDistanceMaterial),B===void 0){var U=!1;R.morphTargets===!0&&(F.isBufferGeometry===!0?U=F.morphAttributes&&F.morphAttributes.position&&F.morphAttributes.position.length>0:F.isGeometry===!0&&(U=F.morphTargets&&F.morphTargets.length>0));var W=!1;M.isSkinnedMesh===!0&&(R.skinning===!0?W=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",M));var $=M.isInstancedMesh===!0;z=H(U,W,$);}else z=B;if(e.localClippingEnabled&&R.clipShadows===!0&&R.clippingPlanes.length!==0){var oe=z.uuid,Z=R.uuid,K=c[oe];K===void 0&&(K={},c[oe]=K);var ce=K[Z];ce===void 0&&(ce=z.clone(),K[Z]=ce),z=ce;}return z.visible=R.visible,z.wireframe=R.wireframe,N===Ai?z.side=R.shadowSide!==null?R.shadowSide:R.side:z.side=R.shadowSide!==null?R.shadowSide:u[R.side],z.clipShadows=R.clipShadows,z.clippingPlanes=R.clippingPlanes,z.clipIntersection=R.clipIntersection,z.wireframeLinewidth=R.wireframeLinewidth,z.linewidth=R.linewidth,S.isPointLight===!0&&z.isMeshDistanceMaterial===!0&&(z.referencePosition.setFromMatrixPosition(S.matrixWorld),z.nearDistance=A,z.farDistance=I),z;}f(w,"getDepthMaterial");function T(M,R,S,A,I){if(M.visible!==!1){var N=M.layers.test(R.layers);if(N&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&I===Ai)&&(!M.frustumCulled||r.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,M.matrixWorld);var F=t.update(M),z=M.material;if(Array.isArray(z))for(var H=F.groups,B=0,U=H.length;B<U;B++){var W=H[B],$=z[W.materialIndex];if($&&$.visible){var oe=w(M,$,A,S.near,S.far,I);e.renderBufferDirect(S,null,F,oe,M,W);}}else if(z.visible){var oe=w(M,z,A,S.near,S.far,I);e.renderBufferDirect(S,null,F,oe,M,null);}}for(var Z=M.children,K=0,ce=Z.length;K<ce;K++)T(Z[K],R,S,A,I);}}f(T,"renderObject");}f(Qu,"WebGLShadowMap");function ig(e,t,n){var r=n.isWebGL2;function i(){var D=!1,Y=new Ze(),de=null,Ae=new Ze(0,0,0,0);return{setMask:function(he){de!==he&&!D&&(e.colorMask(he,he,he,he),de=he);},setLocked:function(he){D=he;},setClear:function(he,Fe,Qe,tt,jt){jt===!0&&(he*=tt,Fe*=tt,Qe*=tt),Y.set(he,Fe,Qe,tt),Ae.equals(Y)===!1&&(e.clearColor(he,Fe,Qe,tt),Ae.copy(Y));},reset:function(){D=!1,de=null,Ae.set(-1,0,0,0);}};}f(i,"ColorBuffer");function a(){var D=!1,Y=null,de=null,Ae=null;return{setTest:function(he){he?Ee(2929):Ge(2929);},setMask:function(he){Y!==he&&!D&&(e.depthMask(he),Y=he);},setFunc:function(he){if(de!==he){if(he)switch(he){case rf:e.depthFunc(512);break;case af:e.depthFunc(519);break;case of:e.depthFunc(513);break;case Ps:e.depthFunc(515);break;case sf:e.depthFunc(514);break;case lf:e.depthFunc(518);break;case cf:e.depthFunc(516);break;case uf:e.depthFunc(517);break;default:e.depthFunc(515);}else e.depthFunc(515);de=he;}},setLocked:function(he){D=he;},setClear:function(he){Ae!==he&&(e.clearDepth(he),Ae=he);},reset:function(){D=!1,Y=null,de=null,Ae=null;}};}f(a,"DepthBuffer");function o(){var D=!1,Y=null,de=null,Ae=null,he=null,Fe=null,Qe=null,tt=null,jt=null;return{setTest:function(Xe){D||(Xe?Ee(2960):Ge(2960));},setMask:function(Xe){Y!==Xe&&!D&&(e.stencilMask(Xe),Y=Xe);},setFunc:function(Xe,Rt,_t){(de!==Xe||Ae!==Rt||he!==_t)&&(e.stencilFunc(Xe,Rt,_t),de=Xe,Ae=Rt,he=_t);},setOp:function(Xe,Rt,_t){(Fe!==Xe||Qe!==Rt||tt!==_t)&&(e.stencilOp(Xe,Rt,_t),Fe=Xe,Qe=Rt,tt=_t);},setLocked:function(Xe){D=Xe;},setClear:function(Xe){jt!==Xe&&(e.clearStencil(Xe),jt=Xe);},reset:function(){D=!1,Y=null,de=null,Ae=null,he=null,Fe=null,Qe=null,tt=null,jt=null;}};}f(o,"StencilBuffer");var s=new i(),l=new a(),c=new o(),u=e.getParameter(34921),h=new Uint8Array(u),d=new Uint8Array(u),p=new Uint8Array(u),v={},y=null,m=null,x=null,_=null,w=null,T=null,M=null,R=null,S=null,A=!1,I=null,N=null,F=null,z=null,H=null,B=e.getParameter(35661),U=!1,W=0,$=e.getParameter(7938);$.indexOf("WebGL")!==-1?(W=parseFloat(/^WebGL\ ([0-9])/.exec($)[1]),U=W>=1):$.indexOf("OpenGL ES")!==-1&&(W=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec($)[1]),U=W>=2);var oe=null,Z={},K=new Ze(),ce=new Ze();function Be(D,Y,de){var Ae=new Uint8Array(4),he=e.createTexture();e.bindTexture(D,he),e.texParameteri(D,10241,9728),e.texParameteri(D,10240,9728);for(var Fe=0;Fe<de;Fe++)e.texImage2D(Y+Fe,0,6408,1,1,0,6408,5121,Ae);return he;}f(Be,"createTexture");var Ue={};Ue[3553]=Be(3553,3553,1),Ue[34067]=Be(34067,34069,6),s.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Ee(2929),l.setFunc(Ps),et(!1),L(Xl),Ee(2884),$e(Fn);function Ne(){for(var D=0,Y=h.length;D<Y;D++)h[D]=0;}f(Ne,"initAttributes");function Te(D){V(D,0);}f(Te,"enableAttribute");function V(D,Y){if(h[D]=1,d[D]===0&&(e.enableVertexAttribArray(D),d[D]=1),p[D]!==Y){var de=r?e:t.get("ANGLE_instanced_arrays");de[r?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,Y),p[D]=Y;}}f(V,"enableAttributeAndDivisor");function ze(){for(var D=0,Y=d.length;D!==Y;++D)d[D]!==h[D]&&(e.disableVertexAttribArray(D),d[D]=0);}f(ze,"disableUnusedAttributes");function Ee(D){v[D]!==!0&&(e.enable(D),v[D]=!0);}f(Ee,"enable");function Ge(D){v[D]!==!1&&(e.disable(D),v[D]=!1);}f(Ge,"disable");function ge(D){return y!==D?(e.useProgram(D),y=D,!0):!1;}f(ge,"useProgram");var q={[zr]:32774,[qh]:32778,[Xh]:32779};if(r)q[$l]=32775,q[Ql]=32776;else{var Le=t.get("EXT_blend_minmax");Le!==null&&(q[$l]=Le.MIN_EXT,q[Ql]=Le.MAX_EXT);}var He={[Yh]:0,[Zh]:1,[Jh]:768,[Pu]:770,[nf]:776,[ef]:774,[Qh]:772,[$h]:769,[Cu]:771,[tf]:775,[Kh]:773};function $e(D,Y,de,Ae,he,Fe,Qe,tt){if(D===Fn){m&&(Ge(3042),m=!1);return;}if(m||(Ee(3042),m=!0),D!==jh){if(D!==x||tt!==A){if((_!==zr||M!==zr)&&(e.blendEquation(32774),_=zr,M=zr),tt)switch(D){case Ri:e.blendFuncSeparate(1,771,1,771);break;case Yl:e.blendFunc(1,1);break;case Zl:e.blendFuncSeparate(0,0,769,771);break;case Jl:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break;}else switch(D){case Ri:e.blendFuncSeparate(770,771,1,771);break;case Yl:e.blendFunc(770,1);break;case Zl:e.blendFunc(0,769);break;case Jl:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break;}w=null,T=null,R=null,S=null,x=D,A=tt;}return;}he=he||Y,Fe=Fe||de,Qe=Qe||Ae,(Y!==_||he!==M)&&(e.blendEquationSeparate(q[Y],q[he]),_=Y,M=he),(de!==w||Ae!==T||Fe!==R||Qe!==S)&&(e.blendFuncSeparate(He[de],He[Ae],He[Fe],He[Qe]),w=de,T=Ae,R=Fe,S=Qe),x=D,A=null;}f($e,"setBlending");function Ut(D,Y){D.side===Wo?Ge(2884):Ee(2884);var de=D.side===ft;Y&&(de=!de),et(de),D.blending===Ri&&D.transparent===!1?$e(Fn):$e(D.blending,D.blendEquation,D.blendSrc,D.blendDst,D.blendEquationAlpha,D.blendSrcAlpha,D.blendDstAlpha,D.premultipliedAlpha),l.setFunc(D.depthFunc),l.setTest(D.depthTest),l.setMask(D.depthWrite),s.setMask(D.colorWrite);var Ae=D.stencilWrite;c.setTest(Ae),Ae&&(c.setMask(D.stencilWriteMask),c.setFunc(D.stencilFunc,D.stencilRef,D.stencilFuncMask),c.setOp(D.stencilFail,D.stencilZFail,D.stencilZPass)),ee(D.polygonOffset,D.polygonOffsetFactor,D.polygonOffsetUnits);}f(Ut,"setMaterial");function et(D){I!==D&&(D?e.frontFace(2304):e.frontFace(2305),I=D);}f(et,"setFlipSided");function L(D){D!==Hh?(Ee(2884),D!==N&&(D===Xl?e.cullFace(1029):D===Vh?e.cullFace(1028):e.cullFace(1032))):Ge(2884),N=D;}f(L,"setCullFace");function P(D){D!==F&&(U&&e.lineWidth(D),F=D);}f(P,"setLineWidth");function ee(D,Y,de){D?(Ee(32823),(z!==Y||H!==de)&&(e.polygonOffset(Y,de),z=Y,H=de)):Ge(32823);}f(ee,"setPolygonOffset");function j(D){D?Ee(3089):Ge(3089);}f(j,"setScissorTest");function Ce(D){D===void 0&&(D=33984+B-1),oe!==D&&(e.activeTexture(D),oe=D);}f(Ce,"activeTexture");function ve(D,Y){oe===null&&Ce();var de=Z[oe];de===void 0&&(de={type:void 0,texture:void 0},Z[oe]=de),(de.type!==D||de.texture!==Y)&&(e.bindTexture(D,Y||Ue[D]),de.type=D,de.texture=Y);}f(ve,"bindTexture");function fe(){var D=Z[oe];D!==void 0&&D.type!==void 0&&(e.bindTexture(D.type,null),D.type=void 0,D.texture=void 0);}f(fe,"unbindTexture");function ye(){try{e.compressedTexImage2D.apply(e,arguments);}catch(D){console.error("THREE.WebGLState:",D);}}f(ye,"compressedTexImage2D");function O(){try{e.texImage2D.apply(e,arguments);}catch(D){console.error("THREE.WebGLState:",D);}}f(O,"texImage2D");function J(){try{e.texImage3D.apply(e,arguments);}catch(D){console.error("THREE.WebGLState:",D);}}f(J,"texImage3D");function X(D){K.equals(D)===!1&&(e.scissor(D.x,D.y,D.z,D.w),K.copy(D));}f(X,"scissor");function te(D){ce.equals(D)===!1&&(e.viewport(D.x,D.y,D.z,D.w),ce.copy(D));}f(te,"viewport");function ae(){for(var D=0;D<d.length;D++)d[D]===1&&(e.disableVertexAttribArray(D),d[D]=0);v={},oe=null,Z={},y=null,x=null,I=null,N=null,s.reset(),l.reset(),c.reset();}return f(ae,"reset"),{buffers:{color:s,depth:l,stencil:c},initAttributes:Ne,enableAttribute:Te,enableAttributeAndDivisor:V,disableUnusedAttributes:ze,enable:Ee,disable:Ge,useProgram:ge,setBlending:$e,setMaterial:Ut,setFlipSided:et,setCullFace:L,setLineWidth:P,setPolygonOffset:ee,setScissorTest:j,activeTexture:Ce,bindTexture:ve,unbindTexture:fe,compressedTexImage2D:ye,texImage2D:O,texImage3D:J,scissor:X,viewport:te,reset:ae};}f(ig,"WebGLState");function ag(e,t,n,r,i,a,o){var s=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=new WeakMap(),p,v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null;}catch{}function y(L,P){return v?new OffscreenCanvas(L,P):document.createElementNS("http://www.w3.org/1999/xhtml","canvas");}f(y,"createCanvas");function m(L,P,ee,j){var Ce=1;if((L.width>j||L.height>j)&&(Ce=j/Math.max(L.width,L.height)),Ce<1||P===!0)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap){var ve=P?Pe.floorPowerOfTwo:Math.floor,fe=ve(Ce*L.width),ye=ve(Ce*L.height);p===void 0&&(p=y(fe,ye));var O=ee?y(fe,ye):p;O.width=fe,O.height=ye;var J=O.getContext("2d");return J.drawImage(L,0,0,fe,ye),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+L.width+"x"+L.height+") to ("+fe+"x"+ye+")."),O;}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+L.width+"x"+L.height+")."),L;return L;}f(m,"resizeImage");function x(L){return Pe.isPowerOfTwo(L.width)&&Pe.isPowerOfTwo(L.height);}f(x,"isPowerOfTwo");function _(L){return s?!1:L.wrapS!==At||L.wrapT!==At||L.minFilter!==lt&&L.minFilter!==dt;}f(_,"textureNeedsPowerOfTwo");function w(L,P){return L.generateMipmaps&&P&&L.minFilter!==lt&&L.minFilter!==dt;}f(w,"textureNeedsGenerateMipmaps");function T(L,P,ee,j){e.generateMipmap(L);var Ce=r.get(P);Ce.__maxMipLevel=Math.log(Math.max(ee,j))*Math.LOG2E;}f(T,"generateMipmap");function M(L,P,ee){if(s===!1)return P;if(L!==null){if(e[L]!==void 0)return e[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'");}var j=P;return P===6403&&(ee===5126&&(j=33326),ee===5131&&(j=33325),ee===5121&&(j=33321)),P===6407&&(ee===5126&&(j=34837),ee===5131&&(j=34843),ee===5121&&(j=32849)),P===6408&&(ee===5126&&(j=34836),ee===5131&&(j=34842),ee===5121&&(j=32856)),j===33325||j===33326||j===34842||j===34836?t.get("EXT_color_buffer_float"):(j===34843||j===34837)&&console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),j;}f(M,"getInternalFormat");function R(L){return L===lt||L===Cs||L===Ds?9728:9729;}f(R,"filterFallback");function S(L){var P=L.target;P.removeEventListener("dispose",S),I(P),P.isVideoTexture&&d.delete(P),o.memory.textures--;}f(S,"onTextureDispose");function A(L){var P=L.target;P.removeEventListener("dispose",A),N(P),o.memory.textures--;}f(A,"onRenderTargetDispose");function I(L){var P=r.get(L);P.__webglInit!==void 0&&(e.deleteTexture(P.__webglTexture),r.remove(L));}f(I,"deallocateTexture");function N(L){var P=r.get(L),ee=r.get(L.texture);if(!!L){if(ee.__webglTexture!==void 0&&e.deleteTexture(ee.__webglTexture),L.depthTexture&&L.depthTexture.dispose(),L.isWebGLRenderTargetCube)for(var j=0;j<6;j++)e.deleteFramebuffer(P.__webglFramebuffer[j]),P.__webglDepthbuffer&&e.deleteRenderbuffer(P.__webglDepthbuffer[j]);else e.deleteFramebuffer(P.__webglFramebuffer),P.__webglDepthbuffer&&e.deleteRenderbuffer(P.__webglDepthbuffer);if(L.isWebGLMultiviewRenderTarget){e.deleteTexture(P.__webglColorTexture),e.deleteTexture(P.__webglDepthStencilTexture),o.memory.textures-=2;for(var j=0,Ce=P.__webglViewFramebuffers.length;j<Ce;j++)e.deleteFramebuffer(P.__webglViewFramebuffers[j]);}r.remove(L.texture),r.remove(L);}}f(N,"deallocateRenderTarget");var F=0;function z(){F=0;}f(z,"resetTextureUnits");function H(){var L=F;return L>=l&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+l),F+=1,L;}f(H,"allocateTextureUnit");function B(L,P){var ee=r.get(L);if(L.isVideoTexture&&Le(L),L.version>0&&ee.__version!==L.version){var j=L.image;if(j===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(j.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ue(ee,L,P);return;}}n.activeTexture(33984+P),n.bindTexture(3553,ee.__webglTexture);}f(B,"setTexture2D");function U(L,P){var ee=r.get(L);if(L.version>0&&ee.__version!==L.version){Ue(ee,L,P);return;}n.activeTexture(33984+P),n.bindTexture(35866,ee.__webglTexture);}f(U,"setTexture2DArray");function W(L,P){var ee=r.get(L);if(L.version>0&&ee.__version!==L.version){Ue(ee,L,P);return;}n.activeTexture(33984+P),n.bindTexture(32879,ee.__webglTexture);}f(W,"setTexture3D");function $(L,P){if(L.image.length===6){var ee=r.get(L);if(L.version>0&&ee.__version!==L.version){Be(ee,L),n.activeTexture(33984+P),n.bindTexture(34067,ee.__webglTexture),e.pixelStorei(37440,L.flipY);for(var j=L&&L.isCompressedTexture,Ce=L.image[0]&&L.image[0].isDataTexture,ve=[],fe=0;fe<6;fe++)!j&&!Ce?ve[fe]=m(L.image[fe],!1,!0,c):ve[fe]=Ce?L.image[fe].image:L.image[fe];var ye=ve[0],O=x(ye)||s,J=a.convert(L.format),X=a.convert(L.type),te=M(L.internalFormat,J,X);ce(34067,L,O);var ae;if(j){for(var fe=0;fe<6;fe++){ae=ve[fe].mipmaps;for(var D=0;D<ae.length;D++){var Y=ae[D];L.format!==sn&&L.format!==cr?J!==null?n.compressedTexImage2D(34069+fe,D,te,Y.width,Y.height,0,Y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+fe,D,te,Y.width,Y.height,0,J,X,Y.data);}}ee.__maxMipLevel=ae.length-1;}else{ae=L.mipmaps;for(var fe=0;fe<6;fe++)if(Ce){n.texImage2D(34069+fe,0,te,ve[fe].width,ve[fe].height,0,J,X,ve[fe].data);for(var D=0;D<ae.length;D++){var Y=ae[D],de=Y.image[fe].image;n.texImage2D(34069+fe,D+1,te,de.width,de.height,0,J,X,de.data);}}else{n.texImage2D(34069+fe,0,te,J,X,ve[fe]);for(var D=0;D<ae.length;D++){var Y=ae[D];n.texImage2D(34069+fe,D+1,te,J,X,Y.image[fe]);}}ee.__maxMipLevel=ae.length;}w(L,O)&&T(34067,L,ye.width,ye.height),ee.__version=L.version,L.onUpdate&&L.onUpdate(L);}else n.activeTexture(33984+P),n.bindTexture(34067,ee.__webglTexture);}}f($,"setTextureCube");function oe(L,P){n.activeTexture(33984+P),n.bindTexture(34067,r.get(L).__webglTexture);}f(oe,"setTextureCubeDynamic");var Z={[ro]:10497,[At]:33071,[io]:33648},K={[lt]:9728,[Cs]:9984,[Ds]:9986,[dt]:9729,[Iu]:9985,[qo]:9987};function ce(L,P,ee){ee?(e.texParameteri(L,10242,Z[P.wrapS]),e.texParameteri(L,10243,Z[P.wrapT]),(L===32879||L===35866)&&e.texParameteri(L,32882,Z[P.wrapR]),e.texParameteri(L,10240,K[P.magFilter]),e.texParameteri(L,10241,K[P.minFilter])):(e.texParameteri(L,10242,33071),e.texParameteri(L,10243,33071),(L===32879||L===35866)&&e.texParameteri(L,32882,33071),(P.wrapS!==At||P.wrapT!==At)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(L,10240,R(P.magFilter)),e.texParameteri(L,10241,R(P.minFilter)),P.minFilter!==lt&&P.minFilter!==dt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var j=t.get("EXT_texture_filter_anisotropic");if(j){if(P.type===Oi&&t.get("OES_texture_float_linear")===null||P.type===Il&&(s||t.get("OES_texture_half_float_linear"))===null)return;(P.anisotropy>1||r.get(P).__currentAnisotropy)&&(e.texParameterf(L,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),r.get(P).__currentAnisotropy=P.anisotropy);}}f(ce,"setTextureParameters");function Be(L,P){L.__webglInit===void 0&&(L.__webglInit=!0,P.addEventListener("dispose",S),L.__webglTexture=e.createTexture(),o.memory.textures++);}f(Be,"initTexture");function Ue(L,P,ee){var j=3553;P.isDataTexture2DArray&&(j=35866),P.isDataTexture3D&&(j=32879),Be(L,P),n.activeTexture(33984+ee),n.bindTexture(j,L.__webglTexture),e.pixelStorei(37440,P.flipY),e.pixelStorei(37441,P.premultiplyAlpha),e.pixelStorei(3317,P.unpackAlignment);var Ce=_(P)&&x(P.image)===!1,ve=m(P.image,Ce,!1,u),fe=x(ve)||s,ye=a.convert(P.format),O=a.convert(P.type),J=M(P.internalFormat,ye,O);ce(j,P,fe);var X,te=P.mipmaps;if(P.isDepthTexture){if(J=6402,P.type===Oi){if(s===!1)throw new Error("Float Depth Texture only supported in WebGL2.0");J=36012;}else s&&(J=33189);P.format===qr&&J===6402&&P.type!==ao&&P.type!==Nu&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=ao,O=a.convert(P.type)),P.format===Ii&&(J=34041,P.type!==oo&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=oo,O=a.convert(P.type))),n.texImage2D(3553,0,J,ve.width,ve.height,0,ye,O,null);}else if(P.isDataTexture){if(te.length>0&&fe){for(var ae=0,D=te.length;ae<D;ae++)X=te[ae],n.texImage2D(3553,ae,J,X.width,X.height,0,ye,O,X.data);P.generateMipmaps=!1,L.__maxMipLevel=te.length-1;}else n.texImage2D(3553,0,J,ve.width,ve.height,0,ye,O,ve.data),L.__maxMipLevel=0;}else if(P.isCompressedTexture){for(var ae=0,D=te.length;ae<D;ae++)X=te[ae],P.format!==sn&&P.format!==cr?ye!==null?n.compressedTexImage2D(3553,ae,J,X.width,X.height,0,X.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,ae,J,X.width,X.height,0,ye,O,X.data);L.__maxMipLevel=te.length-1;}else if(P.isDataTexture2DArray)n.texImage3D(35866,0,J,ve.width,ve.height,ve.depth,0,ye,O,ve.data),L.__maxMipLevel=0;else if(P.isDataTexture3D)n.texImage3D(32879,0,J,ve.width,ve.height,ve.depth,0,ye,O,ve.data),L.__maxMipLevel=0;else if(te.length>0&&fe){for(var ae=0,D=te.length;ae<D;ae++)X=te[ae],n.texImage2D(3553,ae,J,ye,O,X);P.generateMipmaps=!1,L.__maxMipLevel=te.length-1;}else n.texImage2D(3553,0,J,ye,O,ve),L.__maxMipLevel=0;w(P,fe)&&T(j,P,ve.width,ve.height),L.__version=P.version,P.onUpdate&&P.onUpdate(P);}f(Ue,"uploadTexture");function Ne(L,P,ee,j){var Ce=a.convert(P.texture.format),ve=a.convert(P.texture.type),fe=M(P.texture.internalFormat,Ce,ve);n.texImage2D(j,0,fe,P.width,P.height,0,Ce,ve,null),e.bindFramebuffer(36160,L),e.framebufferTexture2D(36160,ee,j,r.get(P.texture).__webglTexture,0),e.bindFramebuffer(36160,null);}f(Ne,"setupFrameBufferTexture");function Te(L,P,ee){if(e.bindRenderbuffer(36161,L),P.depthBuffer&&!P.stencilBuffer){if(ee){var j=q(P);e.renderbufferStorageMultisample(36161,j,33189,P.width,P.height);}else e.renderbufferStorage(36161,33189,P.width,P.height);e.framebufferRenderbuffer(36160,36096,36161,L);}else if(P.depthBuffer&&P.stencilBuffer){if(ee){var j=q(P);e.renderbufferStorageMultisample(36161,j,35056,P.width,P.height);}else e.renderbufferStorage(36161,34041,P.width,P.height);e.framebufferRenderbuffer(36160,33306,36161,L);}else{var Ce=a.convert(P.texture.format),ve=a.convert(P.texture.type),fe=M(P.texture.internalFormat,Ce,ve);if(ee){var j=q(P);e.renderbufferStorageMultisample(36161,j,fe,P.width,P.height);}else e.renderbufferStorage(36161,fe,P.width,P.height);}e.bindRenderbuffer(36161,null);}f(Te,"setupRenderBufferStorage");function V(L,P){var ee=P&&P.isWebGLRenderTargetCube;if(ee)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,L),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!r.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),B(P.depthTexture,0);var j=r.get(P.depthTexture).__webglTexture;if(P.depthTexture.format===qr)e.framebufferTexture2D(36160,36096,3553,j,0);else if(P.depthTexture.format===Ii)e.framebufferTexture2D(36160,33306,3553,j,0);else throw new Error("Unknown depthTexture format");}f(V,"setupDepthTexture");function ze(L){var P=r.get(L),ee=L.isWebGLRenderTargetCube===!0;if(L.depthTexture){if(ee)throw new Error("target.depthTexture not supported in Cube render targets");V(P.__webglFramebuffer,L);}else if(ee){P.__webglDepthbuffer=[];for(var j=0;j<6;j++)e.bindFramebuffer(36160,P.__webglFramebuffer[j]),P.__webglDepthbuffer[j]=e.createRenderbuffer(),Te(P.__webglDepthbuffer[j],L);}else e.bindFramebuffer(36160,P.__webglFramebuffer),P.__webglDepthbuffer=e.createRenderbuffer(),Te(P.__webglDepthbuffer,L);e.bindFramebuffer(36160,null);}f(ze,"setupDepthRenderbuffer");function Ee(L){var P=r.get(L),ee=r.get(L.texture);L.addEventListener("dispose",A),ee.__webglTexture=e.createTexture(),o.memory.textures++;var j=L.isWebGLRenderTargetCube===!0,Ce=L.isWebGLMultisampleRenderTarget===!0,ve=L.isWebGLMultiviewRenderTarget===!0,fe=x(L)||s;if(j){P.__webglFramebuffer=[];for(var ye=0;ye<6;ye++)P.__webglFramebuffer[ye]=e.createFramebuffer();}else if(P.__webglFramebuffer=e.createFramebuffer(),Ce){if(s){P.__webglMultisampledFramebuffer=e.createFramebuffer(),P.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,P.__webglColorRenderbuffer);var O=a.convert(L.texture.format),J=a.convert(L.texture.type),X=M(L.texture.internalFormat,O,J),te=q(L);e.renderbufferStorageMultisample(36161,te,X,L.width,L.height),e.bindFramebuffer(36160,P.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,P.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),L.depthBuffer&&(P.__webglDepthRenderbuffer=e.createRenderbuffer(),Te(P.__webglDepthRenderbuffer,L,!0)),e.bindFramebuffer(36160,null);}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");}else if(ve){var ae=L.width,D=L.height,Y=L.numViews;e.bindFramebuffer(36160,P.__webglFramebuffer);var de=t.get("OVR_multiview2");o.memory.textures+=2;var Ae=e.createTexture();e.bindTexture(35866,Ae),e.texParameteri(35866,10240,9728),e.texParameteri(35866,10241,9728),e.texImage3D(35866,0,32856,ae,D,Y,0,6408,5121,null),de.framebufferTextureMultiviewOVR(36160,36064,Ae,0,0,Y);var he=e.createTexture();e.bindTexture(35866,he),e.texParameteri(35866,10240,9728),e.texParameteri(35866,10241,9728),e.texImage3D(35866,0,35056,ae,D,Y,0,34041,34042,null),de.framebufferTextureMultiviewOVR(36160,33306,he,0,0,Y);for(var Fe=new Array(Y),ye=0;ye<Y;++ye)Fe[ye]=e.createFramebuffer(),e.bindFramebuffer(36160,Fe[ye]),e.framebufferTextureLayer(36160,36064,Ae,0,ye);P.__webglColorTexture=Ae,P.__webglDepthStencilTexture=he,P.__webglViewFramebuffers=Fe,e.bindFramebuffer(36160,null),e.bindTexture(35866,null);}if(j){n.bindTexture(34067,ee.__webglTexture),ce(34067,L.texture,fe);for(var ye=0;ye<6;ye++)Ne(P.__webglFramebuffer[ye],L,36064,34069+ye);w(L.texture,fe)&&T(34067,L.texture,L.width,L.height),n.bindTexture(34067,null);}else ve||(n.bindTexture(3553,ee.__webglTexture),ce(3553,L.texture,fe),Ne(P.__webglFramebuffer,L,36064,3553),w(L.texture,fe)&&T(3553,L.texture,L.width,L.height),n.bindTexture(3553,null));L.depthBuffer&&ze(L);}f(Ee,"setupRenderTarget");function Ge(L){var P=L.texture,ee=x(L)||s;if(w(P,ee)){var j=L.isWebGLRenderTargetCube?34067:3553,Ce=r.get(P).__webglTexture;n.bindTexture(j,Ce),T(j,P,L.width,L.height),n.bindTexture(j,null);}}f(Ge,"updateRenderTargetMipmap");function ge(L){if(L.isWebGLMultisampleRenderTarget)if(s){var P=r.get(L);e.bindFramebuffer(36008,P.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,P.__webglFramebuffer);var ee=L.width,j=L.height,Ce=16384;L.depthBuffer&&(Ce|=256),L.stencilBuffer&&(Ce|=1024),e.blitFramebuffer(0,0,ee,j,0,0,ee,j,Ce,9728);}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");}f(ge,"updateMultisampleRenderTarget");function q(L){return s&&L.isWebGLMultisampleRenderTarget?Math.min(h,L.samples):0;}f(q,"getRenderTargetSamples");function Le(L){var P=o.render.frame;d.get(L)!==P&&(d.set(L,P),L.update());}f(Le,"updateVideoTexture");var He=!1,$e=!1;function Ut(L,P){L&&L.isWebGLRenderTarget&&(He===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),He=!0),L=L.texture),B(L,P);}f(Ut,"safeSetTexture2D");function et(L,P){L&&L.isWebGLRenderTargetCube&&($e===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),$e=!0),L=L.texture),L&&L.isCubeTexture||Array.isArray(L.image)&&L.image.length===6?$(L,P):oe(L,P);}f(et,"safeSetTextureCube"),this.allocateTextureUnit=H,this.resetTextureUnits=z,this.setTexture2D=B,this.setTexture2DArray=U,this.setTexture3D=W,this.setTextureCube=$,this.setTextureCubeDynamic=oe,this.setupRenderTarget=Ee,this.updateRenderTargetMipmap=Ge,this.updateMultisampleRenderTarget=ge,this.safeSetTexture2D=Ut,this.safeSetTextureCube=et;}f(ag,"WebGLTextures");function og(e,t,n){var r=n.isWebGL2;function i(a){var o;if(a===Xo)return 5121;if(a===_f)return 32819;if(a===bf)return 32820;if(a===wf)return 33635;if(a===gf)return 5120;if(a===yf)return 5122;if(a===ao)return 5123;if(a===xf)return 5124;if(a===Nu)return 5125;if(a===Oi)return 5126;if(a===Il)return r?5131:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(a===Mf)return 6406;if(a===cr)return 6407;if(a===sn)return 6408;if(a===Ef)return 6409;if(a===Tf)return 6410;if(a===qr)return 6402;if(a===Ii)return 34041;if(a===Af)return 6403;if(a===Lf)return 36244;if(a===Rf)return 33319;if(a===Pf)return 33320;if(a===Cf)return 36248;if(a===Df)return 36249;if(a===Kl||a===ec||a===tc||a===nc)if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(a===Kl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===ec)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===tc)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===nc)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT;}else return null;if(a===rc||a===ic||a===ac||a===oc)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(a===rc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===ic)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===ac)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===oc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}else return null;if(a===Of)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===If||a===Nf||a===Ff||a===Bf||a===Uf||a===zf||a===Gf||a===Hf||a===Vf||a===kf||a===Wf||a===jf||a===qf||a===Xf)return o=t.get("WEBGL_compressed_texture_astc"),o!==null?a:null;if(a===oo)return r?34042:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null);}return f(i,"convert"),{convert:i};}f(og,"WebGLUtils");function Gs(e,t,n,r){Et.call(this,e,t,r),this.depthBuffer=!1,this.stencilBuffer=!1,this.numViews=n;}f(Gs,"WebGLMultiviewRenderTarget");Gs.prototype=Object.assign(Object.create(Et.prototype),{constructor:Gs,isWebGLMultiviewRenderTarget:!0,copy:function(e){return Et.prototype.copy.call(this,e),this.numViews=e.numViews,this;},setNumViews:function(e){return this.numViews!==e&&(this.numViews=e,this.dispose()),this;}});function sg(e,t){var n=2,r=e.extensions,i=e.properties,a,o,s,l,c,u,h,d=0;function p(){if(h===void 0){var S=r.get("OVR_multiview2");if(h=S!==null&&t.getContextAttributes().antialias===!1,h){d=t.getParameter(S.MAX_VIEWS_OVR),a=new Gs(0,0,n),u=new G(),l=[],s=[],c=[];for(var A=0;A<d;A++)l[A]=new De(),s[A]=new yt();}}return h;}f(p,"isAvailable");function v(S){return S.isArrayCamera?S.cameras:(c[0]=S,c);}f(v,"getCameraArray");function y(S,A){for(var I=v(S),N=0;N<I.length;N++)l[N].copy(I[N].projectionMatrix);A.setValue(t,"projectionMatrices",l);}f(y,"updateCameraProjectionMatricesUniform");function m(S,A){for(var I=v(S),N=0;N<I.length;N++)l[N].copy(I[N].matrixWorldInverse);A.setValue(t,"viewMatrices",l);}f(m,"updateCameraViewMatricesUniform");function x(S,A,I){for(var N=v(A),F=0;F<N.length;F++)l[F].multiplyMatrices(N[F].matrixWorldInverse,S.matrixWorld),s[F].getNormalMatrix(l[F]);I.setValue(t,"modelViewMatrices",l),I.setValue(t,"normalMatrices",s);}f(x,"updateObjectMatricesUniforms");function _(S){if(S.isArrayCamera===void 0)return!0;var A=S.cameras;if(A.length>d)return!1;for(var I=1,N=A.length;I<N;I++)if(A[0].viewport.z!==A[I].viewport.z||A[0].viewport.w!==A[I].viewport.w)return!1;return!0;}f(_,"isMultiviewCompatible");function w(S){if(o?u.set(o.width,o.height):e.getDrawingBufferSize(u),S.isArrayCamera){var A=S.cameras[0].viewport;a.setSize(A.z,A.w),a.setNumViews(S.cameras.length);}else a.setSize(u.x,u.y),a.setNumViews(n);}f(w,"resizeRenderTarget");function T(S){_(S)!==!1&&(o=e.getRenderTarget(),w(S),e.setRenderTarget(a));}f(T,"attachCamera");function M(S){a===e.getRenderTarget()&&(e.setRenderTarget(o),R(S));}f(M,"detachCamera");function R(S){var A=a,I=A.numViews,N=i.get(A).__webglViewFramebuffers,F=A.width,z=A.height;if(S.isArrayCamera)for(var H=0;H<I;H++){var B=S.cameras[H].viewport,U=B.x,W=B.y,$=U+B.z,oe=W+B.w;t.bindFramebuffer(36008,N[H]),t.blitFramebuffer(0,0,F,z,U,W,$,oe,16384,9728);}else t.bindFramebuffer(36008,N[0]),t.blitFramebuffer(0,0,F,z,0,0,u.x,u.y,16384,9728);}f(R,"flush"),this.isAvailable=p,this.attachCamera=T,this.detachCamera=M,this.updateCameraProjectionMatricesUniform=y,this.updateCameraViewMatricesUniform=m,this.updateObjectMatricesUniforms=x;}f(sg,"WebGLMultiview");function Hs(e){ht.call(this),this.cameras=e||[];}f(Hs,"ArrayCamera");Hs.prototype=Object.assign(Object.create(ht.prototype),{constructor:Hs,isArrayCamera:!0});function ho(){ie.call(this),this.type="Group";}f(ho,"Group");ho.prototype=Object.assign(Object.create(ie.prototype),{constructor:ho,isGroup:!0});function Ku(e,t){var n=this,r=null,i=null,a="local-floor",o=null,s=[],l=new Map(),c=new ht();c.layers.enable(1),c.viewport=new Ze();var u=new ht();u.layers.enable(2),u.viewport=new Ze();var h=new Hs([c,u]);h.layers.enable(1),h.layers.enable(2),this.enabled=!1,this.isPresenting=!1,this.getController=function(S){var A=s[S];return A===void 0&&(A=new ho(),A.matrixAutoUpdate=!1,A.visible=!1,s[S]=A),A;};function d(S){var A=l.get(S.inputSource);A&&A.dispatchEvent({type:S.type});}f(d,"onSessionEvent");function p(){l.forEach(function(S,A){S.dispatchEvent({type:"disconnected",data:A}),S.visible=!1;}),l.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),R.stop(),n.dispatchEvent({type:"sessionend"}),n.isPresenting=!1;}f(p,"onSessionEnd");function v(S){i=S,R.setContext(r),R.start(),n.dispatchEvent({type:"sessionstart"}),n.isPresenting=!0;}f(v,"onRequestReferenceSpace"),this.setFramebufferScaleFactor=function(){},this.setReferenceSpaceType=function(S){a=S;},this.getReferenceSpace=function(){return i;},this.getSession=function(){return r;},this.setSession=function(S){if(r=S,r!==null){r.addEventListener("select",d),r.addEventListener("selectstart",d),r.addEventListener("selectend",d),r.addEventListener("squeeze",d),r.addEventListener("squeezestart",d),r.addEventListener("squeezeend",d),r.addEventListener("end",p);var A=t.getContextAttributes(),I={antialias:A.antialias,alpha:A.alpha,depth:A.depth,stencil:A.stencil},N=new XRWebGLLayer(r,t,I);r.updateRenderState({baseLayer:N}),r.requestReferenceSpace(a).then(v),r.addEventListener("inputsourceschange",y);}};function y(S){for(var A=r.inputSources,I=0;I<s.length;I++)l.set(A[I],s[I]);for(var I=0;I<S.removed.length;I++){var N=S.removed[I],F=l.get(N);F&&(F.dispatchEvent({type:"disconnected",data:N}),l.delete(N));}for(var I=0;I<S.added.length;I++){var N=S.added[I],F=l.get(N);F&&F.dispatchEvent({type:"connected",data:N});}}f(y,"updateInputSources");var m=new E(),x=new E();function _(S,A,I){m.setFromMatrixPosition(A.matrixWorld),x.setFromMatrixPosition(I.matrixWorld);var N=m.distanceTo(x),F=A.projectionMatrix.elements,z=I.projectionMatrix.elements,H=F[14]/(F[10]-1),B=F[14]/(F[10]+1),U=(F[9]+1)/F[5],W=(F[9]-1)/F[5],$=(F[8]-1)/F[0],oe=(z[8]+1)/z[0],Z=H*$,K=H*oe,ce=N/(-$+oe),Be=ce*-$;A.matrixWorld.decompose(S.position,S.quaternion,S.scale),S.translateX(Be),S.translateZ(ce),S.matrixWorld.compose(S.position,S.quaternion,S.scale),S.matrixWorldInverse.getInverse(S.matrixWorld);var Ue=H+ce,Ne=B+ce,Te=Z-Be,V=K+(N-Be),ze=U*B/Ne*Ue,Ee=W*B/Ne*Ue;S.projectionMatrix.makePerspective(Te,V,ze,Ee,Ue,Ne);}f(_,"setProjectionFromUnion");function w(S,A){A===null?S.matrixWorld.copy(S.matrix):S.matrixWorld.multiplyMatrices(A.matrixWorld,S.matrix),S.matrixWorldInverse.getInverse(S.matrixWorld);}f(w,"updateCamera"),this.getCamera=function(S){var A=S.parent,I=h.cameras;w(h,A);for(var N=0;N<I.length;N++)w(I[N],A);S.matrixWorld.copy(h.matrixWorld);for(var F=S.children,N=0,z=F.length;N<z;N++)F[N].updateMatrixWorld(!0);return _(h,c,u),h;};var T=null;function M(S,A){if(o=A.getViewerPose(i),o!==null){var I=o.views,N=r.renderState.baseLayer;e.setFramebuffer(N.framebuffer);for(var F=0;F<I.length;F++){var z=I[F],H=N.getViewport(z),B=z.transform.inverse.matrix,U=h.cameras[F];U.matrix.fromArray(B).getInverse(U.matrix),U.projectionMatrix.fromArray(z.projectionMatrix),U.viewport.set(H.x,H.y,H.width,H.height),F===0&&h.matrix.copy(U.matrix);}}for(var W=r.inputSources,F=0;F<s.length;F++){var $=s[F],oe=W[F];if(oe){var Z=A.getPose(oe.targetRaySpace,i);if(Z!==null){$.matrix.fromArray(Z.transform.matrix),$.matrix.decompose($.position,$.rotation,$.scale),$.visible=!0;continue;}}$.visible=!1;}T&&T(S,A);}f(M,"onAnimationFrame");var R=new ju();R.setAnimationLoop(M),this.setAnimationLoop=function(S){T=S;},this.dispose=function(){};}f(Ku,"WebXRManager");Object.assign(Ku.prototype,Wt.prototype);function eh(e){e=e||{};var t=e.canvas!==void 0?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=e.context!==void 0?e.context:null,r=e.alpha!==void 0?e.alpha:!1,i=e.depth!==void 0?e.depth:!0,a=e.stencil!==void 0?e.stencil:!0,o=e.antialias!==void 0?e.antialias:!1,s=e.premultipliedAlpha!==void 0?e.premultipliedAlpha:!0,l=e.preserveDrawingBuffer!==void 0?e.preserveDrawingBuffer:!1,c=e.powerPreference!==void 0?e.powerPreference:"default",u=e.failIfMajorPerformanceCaveat!==void 0?e.failIfMajorPerformanceCaveat:!1,h=null,d=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=It,this.physicallyCorrectLights=!1,this.toneMapping=Ll,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var p=this,v=!1,y=null,m=0,x=0,_=null,w=null,T=-1,M={geometry:null,program:null,wireframe:!1},R=null,S=null,A=new Ze(),I=new Ze(),N=null,F=t.width,z=t.height,H=1,B=null,U=null,W=new Ze(0,0,F,z),$=new Ze(0,0,F,z),oe=!1,Z=new Zo(),K=new Vv(),ce=!1,Be=!1,Ue=new De(),Ne=new E();function Te(){return _===null?H:1;}f(Te,"getTargetPixelRatio");var V;try{var ze={alpha:r,depth:i,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u,xrCompatible:!0};if(t.addEventListener("webglcontextlost",ae,!1),t.addEventListener("webglcontextrestored",D,!1),V=n||t.getContext("webgl",ze)||t.getContext("experimental-webgl",ze),V===null)throw t.getContext("webgl")!==null?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");V.getShaderPrecisionFormat===void 0&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1};});}catch(g){throw console.error("THREE.WebGLRenderer: "+g.message),g;}var Ee,Ge,ge,q,Le,He,$e,Ut,et,L,P,ee,j,Ce,ve,fe,ye;function O(){Ee=new kv(V),Ge=new Hv(V,Ee,e),Ge.isWebGL2===!1&&(Ee.get("WEBGL_depth_texture"),Ee.get("OES_texture_float"),Ee.get("OES_texture_half_float"),Ee.get("OES_texture_half_float_linear"),Ee.get("OES_standard_derivatives"),Ee.get("OES_element_index_uint"),Ee.get("ANGLE_instanced_arrays")),Ee.get("OES_texture_float_linear"),ye=new og(V,Ee,Ge),ge=new ig(V,Ee,Ge),ge.scissor(I.copy($).multiplyScalar(H).floor()),ge.viewport(A.copy(W).multiplyScalar(H).floor()),q=new qv(V),Le=new Xm(),He=new ag(V,Ee,ge,Le,Ge,ye,q),$e=new Uv(V),Ut=new Wv(V,$e,q),et=new Zv(V,Ut,$e,q),Ce=new Yv(V),L=new qm(p,Ee,Ge),P=new Jm(),ee=new tg(),j=new zv(p,ge,et,s),ve=new Gv(V,Ee,q,Ge),fe=new jv(V,Ee,q,Ge),q.programs=L.programs,p.capabilities=Ge,p.extensions=Ee,p.properties=Le,p.renderLists=P,p.state=ge,p.info=q;}f(O,"initGLContext"),O();var J=new Ku(p,V);this.xr=J;var X=new sg(p,V),te=new Qu(p,et,Ge.maxTextureSize);this.shadowMap=te,this.getContext=function(){return V;},this.getContextAttributes=function(){return V.getContextAttributes();},this.forceContextLoss=function(){var g=Ee.get("WEBGL_lose_context");g&&g.loseContext();},this.forceContextRestore=function(){var g=Ee.get("WEBGL_lose_context");g&&g.restoreContext();},this.getPixelRatio=function(){return H;},this.setPixelRatio=function(g){g!==void 0&&(H=g,this.setSize(F,z,!1));},this.getSize=function(g){return g===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),g=new G()),g.set(F,z);},this.setSize=function(g,b,C){if(J.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return;}F=g,z=b,t.width=Math.floor(g*H),t.height=Math.floor(b*H),C!==!1&&(t.style.width=g+"px",t.style.height=b+"px"),this.setViewport(0,0,g,b);},this.getDrawingBufferSize=function(g){return g===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),g=new G()),g.set(F*H,z*H).floor();},this.setDrawingBufferSize=function(g,b,C){F=g,z=b,H=C,t.width=Math.floor(g*C),t.height=Math.floor(b*C),this.setViewport(0,0,g,b);},this.getCurrentViewport=function(g){return g===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),g=new Ze()),g.copy(A);},this.getViewport=function(g){return g.copy(W);},this.setViewport=function(g,b,C,k){g.isVector4?W.set(g.x,g.y,g.z,g.w):W.set(g,b,C,k),ge.viewport(A.copy(W).multiplyScalar(H).floor());},this.getScissor=function(g){return g.copy($);},this.setScissor=function(g,b,C,k){g.isVector4?$.set(g.x,g.y,g.z,g.w):$.set(g,b,C,k),ge.scissor(I.copy($).multiplyScalar(H).floor());},this.getScissorTest=function(){return oe;},this.setScissorTest=function(g){ge.setScissorTest(oe=g);},this.setOpaqueSort=function(g){B=g;},this.setTransparentSort=function(g){U=g;},this.getClearColor=function(){return j.getClearColor();},this.setClearColor=function(){j.setClearColor.apply(j,arguments);},this.getClearAlpha=function(){return j.getClearAlpha();},this.setClearAlpha=function(){j.setClearAlpha.apply(j,arguments);},this.clear=function(g,b,C){var k=0;(g===void 0||g)&&(k|=16384),(b===void 0||b)&&(k|=256),(C===void 0||C)&&(k|=1024),V.clear(k);},this.clearColor=function(){this.clear(!0,!1,!1);},this.clearDepth=function(){this.clear(!1,!0,!1);},this.clearStencil=function(){this.clear(!1,!1,!0);},this.dispose=function(){t.removeEventListener("webglcontextlost",ae,!1),t.removeEventListener("webglcontextrestored",D,!1),P.dispose(),ee.dispose(),Le.dispose(),et.dispose(),J.dispose(),Xe.stop();};function ae(g){g.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0;}f(ae,"onContextLost");function D(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1,O();}f(D,"onContextRestore");function Y(g){var b=g.target;b.removeEventListener("dispose",Y),de(b);}f(Y,"onMaterialDispose");function de(g){Ae(g),Le.remove(g);}f(de,"deallocateMaterial");function Ae(g){var b=Le.get(g).program;g.program=void 0,b!==void 0&&L.releaseProgram(b);}f(Ae,"releaseMaterialProgramReference");function he(g,b){g.render(function(C){p.renderBufferImmediate(C,b);});}f(he,"renderObjectImmediate"),this.renderBufferImmediate=function(g,b){ge.initAttributes();var C=Le.get(g);g.hasPositions&&!C.position&&(C.position=V.createBuffer()),g.hasNormals&&!C.normal&&(C.normal=V.createBuffer()),g.hasUvs&&!C.uv&&(C.uv=V.createBuffer()),g.hasColors&&!C.color&&(C.color=V.createBuffer());var k=b.getAttributes();g.hasPositions&&(V.bindBuffer(34962,C.position),V.bufferData(34962,g.positionArray,35048),ge.enableAttribute(k.position),V.vertexAttribPointer(k.position,3,5126,!1,0,0)),g.hasNormals&&(V.bindBuffer(34962,C.normal),V.bufferData(34962,g.normalArray,35048),ge.enableAttribute(k.normal),V.vertexAttribPointer(k.normal,3,5126,!1,0,0)),g.hasUvs&&(V.bindBuffer(34962,C.uv),V.bufferData(34962,g.uvArray,35048),ge.enableAttribute(k.uv),V.vertexAttribPointer(k.uv,2,5126,!1,0,0)),g.hasColors&&(V.bindBuffer(34962,C.color),V.bufferData(34962,g.colorArray,35048),ge.enableAttribute(k.color),V.vertexAttribPointer(k.color,3,5126,!1,0,0)),ge.disableUnusedAttributes(),V.drawArrays(4,0,g.count),g.count=0;};var Fe=new Gn();this.renderBufferDirect=function(g,b,C,k,Q,xe){b===null&&(b=Fe);var pe=Q.isMesh&&Q.matrixWorld.determinant()<0,Oe=ga(g,b,k,Q);ge.setMaterial(k,pe);var Se=!1;(M.geometry!==C.id||M.program!==Oe.id||M.wireframe!==(k.wireframe===!0))&&(M.geometry=C.id,M.program=Oe.id,M.wireframe=k.wireframe===!0,Se=!0),(k.morphTargets||k.morphNormals)&&(Ce.update(Q,C,k,Oe),Se=!0);var Re=C.index,Ye=C.attributes.position;if(Re===null){if(Ye===void 0||Ye.count===0)return;}else if(Re.count===0)return;var ke=1;k.wireframe===!0&&(Re=Ut.getWireframeAttribute(C),ke=2);var We,_e=ve;Re!==null&&(We=$e.get(Re),_e=fe,_e.setIndex(We)),Se&&(Qe(Q,C,k,Oe),Re!==null&&V.bindBuffer(34963,We.buffer));var ue=Re!==null?Re.count:Ye.count,Kt=C.drawRange.start*ke,it=C.drawRange.count*ke,_r=xe!==null?xe.start*ke:0,Pt=xe!==null?xe.count*ke:1/0,bt=Math.max(Kt,_r),Qo=Math.min(ue,Kt+it,_r+Pt)-1,xa=Math.max(0,Qo-bt+1);if(xa!==0){if(Q.isMesh)k.wireframe===!0?(ge.setLineWidth(k.wireframeLinewidth*Te()),_e.setMode(1)):_e.setMode(4);else if(Q.isLine){var Ko=k.linewidth;Ko===void 0&&(Ko=1),ge.setLineWidth(Ko*Te()),Q.isLineSegments?_e.setMode(1):Q.isLineLoop?_e.setMode(2):_e.setMode(3);}else Q.isPoints?_e.setMode(0):Q.isSprite&&_e.setMode(4);Q.isInstancedMesh?_e.renderInstances(C,bt,xa,Q.count):C.isInstancedBufferGeometry?_e.renderInstances(C,bt,xa,C.maxInstancedCount):_e.render(bt,xa);}};function Qe(g,b,C,k){if(!(Ge.isWebGL2===!1&&(g.isInstancedMesh||b.isInstancedBufferGeometry)&&Ee.get("ANGLE_instanced_arrays")===null)){ge.initAttributes();var Q=b.attributes,xe=k.getAttributes(),pe=C.defaultAttributeValues;for(var Oe in xe){var Se=xe[Oe];if(Se>=0){var Re=Q[Oe];if(Re!==void 0){var Ye=Re.normalized,ke=Re.itemSize,We=$e.get(Re);if(We===void 0)continue;var _e=We.buffer,ue=We.type,Kt=We.bytesPerElement;if(Re.isInterleavedBufferAttribute){var it=Re.data,_r=it.stride,Pt=Re.offset;it&&it.isInstancedInterleavedBuffer?(ge.enableAttributeAndDivisor(Se,it.meshPerAttribute),b.maxInstancedCount===void 0&&(b.maxInstancedCount=it.meshPerAttribute*it.count)):ge.enableAttribute(Se),V.bindBuffer(34962,_e),V.vertexAttribPointer(Se,ke,ue,Ye,_r*Kt,Pt*Kt);}else Re.isInstancedBufferAttribute?(ge.enableAttributeAndDivisor(Se,Re.meshPerAttribute),b.maxInstancedCount===void 0&&(b.maxInstancedCount=Re.meshPerAttribute*Re.count)):ge.enableAttribute(Se),V.bindBuffer(34962,_e),V.vertexAttribPointer(Se,ke,ue,Ye,0,0);}else if(Oe==="instanceMatrix"){var We=$e.get(g.instanceMatrix);if(We===void 0)continue;var _e=We.buffer,ue=We.type;ge.enableAttributeAndDivisor(Se+0,1),ge.enableAttributeAndDivisor(Se+1,1),ge.enableAttributeAndDivisor(Se+2,1),ge.enableAttributeAndDivisor(Se+3,1),V.bindBuffer(34962,_e),V.vertexAttribPointer(Se+0,4,ue,!1,64,0),V.vertexAttribPointer(Se+1,4,ue,!1,64,16),V.vertexAttribPointer(Se+2,4,ue,!1,64,32),V.vertexAttribPointer(Se+3,4,ue,!1,64,48);}else if(pe!==void 0){var bt=pe[Oe];if(bt!==void 0)switch(bt.length){case 2:V.vertexAttrib2fv(Se,bt);break;case 3:V.vertexAttrib3fv(Se,bt);break;case 4:V.vertexAttrib4fv(Se,bt);break;default:V.vertexAttrib1fv(Se,bt);}}}}ge.disableUnusedAttributes();}}f(Qe,"setupVertexAttributes"),this.compile=function(g,b){d=ee.get(g,b),d.init(),g.traverse(function(C){C.isLight&&(d.pushLight(C),C.castShadow&&d.pushShadow(C));}),d.setupLights(b),g.traverse(function(C){if(C.material)if(Array.isArray(C.material))for(var k=0;k<C.material.length;k++)gi(C.material[k],g,C);else gi(C.material,g,C);});};var tt=null;function jt(g){J.isPresenting||tt&&tt(g);}f(jt,"onAnimationFrame");var Xe=new ju();Xe.setAnimationLoop(jt),typeof document<"u"&&Xe.setContext(window),this.setAnimationLoop=function(g){tt=g,J.setAnimationLoop(g),Xe.start();},this.render=function(g,b){var C,k;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),C=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),k=arguments[3]),!(b&&b.isCamera)){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return;}if(!v){M.geometry=null,M.program=null,M.wireframe=!1,T=-1,R=null,g.autoUpdate===!0&&g.updateMatrixWorld(),b.parent===null&&b.updateMatrixWorld(),J.enabled&&J.isPresenting&&(b=J.getCamera(b)),d=ee.get(g,b),d.init(),g.onBeforeRender(p,g,b,C||_),Ue.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),Z.setFromMatrix(Ue),Be=this.localClippingEnabled,ce=K.init(this.clippingPlanes,Be,b),h=P.get(g,b),h.init(),Rt(g,b,0,p.sortObjects),p.sortObjects===!0&&h.sort(B,U),ce&&K.beginShadows();var Q=d.state.shadowsArray;te.render(Q,g,b),d.setupLights(b),ce&&K.endShadows(),this.info.autoReset&&this.info.reset(),C!==void 0&&this.setRenderTarget(C),J.enabled&&X.isAvailable()&&X.attachCamera(b),j.render(h,g,b,k);var xe=h.opaque,pe=h.transparent;if(g.overrideMaterial){var Oe=g.overrideMaterial;xe.length&&_t(xe,g,b,Oe),pe.length&&_t(pe,g,b,Oe);}else xe.length&&_t(xe,g,b),pe.length&&_t(pe,g,b);g.onAfterRender(p,g,b),_!==null&&(He.updateRenderTargetMipmap(_),He.updateMultisampleRenderTarget(_)),ge.buffers.depth.setTest(!0),ge.buffers.depth.setMask(!0),ge.buffers.color.setMask(!0),ge.setPolygonOffset(!1),J.enabled&&X.isAvailable()&&X.detachCamera(b),h=null,d=null;}};function Rt(g,b,C,k){if(g.visible!==!1){var Q=g.layers.test(b.layers);if(Q){if(g.isGroup)C=g.renderOrder;else if(g.isLOD)g.autoUpdate===!0&&g.update(b);else if(g.isLight)d.pushLight(g),g.castShadow&&d.pushShadow(g);else if(g.isSprite){if(!g.frustumCulled||Z.intersectsSprite(g)){k&&Ne.setFromMatrixPosition(g.matrixWorld).applyMatrix4(Ue);var xe=et.update(g),pe=g.material;pe.visible&&h.push(g,xe,pe,C,Ne.z,null);}}else if(g.isImmediateRenderObject)k&&Ne.setFromMatrixPosition(g.matrixWorld).applyMatrix4(Ue),h.push(g,null,g.material,C,Ne.z,null);else if((g.isMesh||g.isLine||g.isPoints)&&(g.isSkinnedMesh&&g.skeleton.frame!==q.render.frame&&(g.skeleton.update(),g.skeleton.frame=q.render.frame),!g.frustumCulled||Z.intersectsObject(g))){k&&Ne.setFromMatrixPosition(g.matrixWorld).applyMatrix4(Ue);var xe=et.update(g),pe=g.material;if(Array.isArray(pe))for(var Oe=xe.groups,Se=0,Re=Oe.length;Se<Re;Se++){var Ye=Oe[Se],ke=pe[Ye.materialIndex];ke&&ke.visible&&h.push(g,xe,ke,C,Ne.z,Ye);}else pe.visible&&h.push(g,xe,pe,C,Ne.z,null);}}for(var We=g.children,Se=0,Re=We.length;Se<Re;Se++)Rt(We[Se],b,C,k);}}f(Rt,"projectObject");function _t(g,b,C,k){for(var Q=0,xe=g.length;Q<xe;Q++){var pe=g[Q],Oe=pe.object,Se=pe.geometry,Re=k===void 0?pe.material:k,Ye=pe.group;if(C.isArrayCamera){if(S=C,J.enabled&&X.isAvailable())yr(Oe,b,C,Se,Re,Ye);else for(var ke=C.cameras,We=0,_e=ke.length;We<_e;We++){var ue=ke[We];Oe.layers.test(ue.layers)&&(ge.viewport(A.copy(ue.viewport)),d.setupLights(ue),yr(Oe,b,ue,Se,Re,Ye));}}else S=null,yr(Oe,b,C,Se,Re,Ye);}}f(_t,"renderObjects");function yr(g,b,C,k,Q,xe){if(g.onBeforeRender(p,b,C,k,Q,xe),d=ee.get(b,S||C),g.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,g.matrixWorld),g.normalMatrix.getNormalMatrix(g.modelViewMatrix),g.isImmediateRenderObject){var pe=ga(C,b,Q,g);ge.setMaterial(Q),M.geometry=null,M.program=null,M.wireframe=!1,he(g,pe);}else p.renderBufferDirect(C,b,k,Q,g,xe);g.onAfterRender(p,b,C,k,Q,xe),d=ee.get(b,S||C);}f(yr,"renderObject");function gi(g,b,C){var k=Le.get(g),Q=d.state.lights,xe=d.state.shadowsArray,pe=Q.state.version,Oe=L.getParameters(g,Q.state,xe,b,K.numPlanes,K.numIntersection,C),Se=L.getProgramCacheKey(g,Oe),Re=k.program,Ye=!0;if(Re===void 0)g.addEventListener("dispose",Y);else if(Re.cacheKey!==Se)Ae(g);else if(k.lightsStateVersion!==pe)k.lightsStateVersion=pe,Ye=!1;else{if(Oe.shaderID!==void 0)return;Ye=!1;}if(Ye){if(Oe.shaderID){var ke=_n[Oe.shaderID];k.shader={name:g.type,uniforms:Zr(ke.uniforms),vertexShader:ke.vertexShader,fragmentShader:ke.fragmentShader};}else k.shader={name:g.type,uniforms:g.uniforms,vertexShader:g.vertexShader,fragmentShader:g.fragmentShader};g.onBeforeCompile(k.shader,p),Se=L.getProgramCacheKey(g,Oe),Re=L.acquireProgram(g,k.shader,Oe,Se),k.program=Re,k.environment=g.isMeshStandardMaterial?b.environment:null,k.outputEncoding=p.outputEncoding,g.program=Re;}var We=Re.getAttributes();if(g.morphTargets){g.numSupportedMorphTargets=0;for(var _e=0;_e<p.maxMorphTargets;_e++)We["morphTarget"+_e]>=0&&g.numSupportedMorphTargets++;}if(g.morphNormals){g.numSupportedMorphNormals=0;for(var _e=0;_e<p.maxMorphNormals;_e++)We["morphNormal"+_e]>=0&&g.numSupportedMorphNormals++;}var ue=k.shader.uniforms;(!g.isShaderMaterial&&!g.isRawShaderMaterial||g.clipping===!0)&&(k.numClippingPlanes=K.numPlanes,k.numIntersection=K.numIntersection,ue.clippingPlanes=K.uniform),k.fog=b.fog,k.needsLights=Uh(g),k.lightsStateVersion=pe,k.needsLights&&(ue.ambientLightColor.value=Q.state.ambient,ue.lightProbe.value=Q.state.probe,ue.directionalLights.value=Q.state.directional,ue.spotLights.value=Q.state.spot,ue.rectAreaLights.value=Q.state.rectArea,ue.pointLights.value=Q.state.point,ue.hemisphereLights.value=Q.state.hemi,ue.directionalShadowMap.value=Q.state.directionalShadowMap,ue.directionalShadowMatrix.value=Q.state.directionalShadowMatrix,ue.spotShadowMap.value=Q.state.spotShadowMap,ue.spotShadowMatrix.value=Q.state.spotShadowMatrix,ue.pointShadowMap.value=Q.state.pointShadowMap,ue.pointShadowMatrix.value=Q.state.pointShadowMatrix);var Kt=k.program.getUniforms(),it=Bn.seqWithValue(Kt.seq,ue);k.uniformsList=it;}f(gi,"initMaterial");function ga(g,b,C,k){He.resetTextureUnits();var Q=b.fog,xe=C.isMeshStandardMaterial?b.environment:null,pe=Le.get(C),Oe=d.state.lights;if(ce&&(Be||g!==R)){var Se=g===R&&C.id===T;K.setState(C.clippingPlanes,C.clipIntersection,C.clipShadows,g,pe,Se);}C.version===pe.__version&&(pe.program===void 0||C.fog&&pe.fog!==Q||pe.environment!==xe||pe.needsLights&&pe.lightsStateVersion!==Oe.state.version||pe.numClippingPlanes!==void 0&&(pe.numClippingPlanes!==K.numPlanes||pe.numIntersection!==K.numIntersection)||pe.outputEncoding!==p.outputEncoding)&&(C.needsUpdate=!0),C.version!==pe.__version&&(gi(C,b,k),pe.__version=C.version);var Re=!1,Ye=!1,ke=!1,We=pe.program,_e=We.getUniforms(),ue=pe.shader.uniforms;if(ge.useProgram(We.program)&&(Re=!0,Ye=!0,ke=!0),C.id!==T&&(T=C.id,Ye=!0),Re||R!==g){if(We.numMultiviewViews>0?X.updateCameraProjectionMatricesUniform(g,_e):_e.setValue(V,"projectionMatrix",g.projectionMatrix),Ge.logarithmicDepthBuffer&&_e.setValue(V,"logDepthBufFC",2/(Math.log(g.far+1)/Math.LN2)),R!==g&&(R=g,Ye=!0,ke=!0),C.isShaderMaterial||C.isMeshPhongMaterial||C.isMeshToonMaterial||C.isMeshStandardMaterial||C.envMap){var Kt=_e.map.cameraPosition;Kt!==void 0&&Kt.setValue(V,Ne.setFromMatrixPosition(g.matrixWorld));}(C.isMeshPhongMaterial||C.isMeshToonMaterial||C.isMeshLambertMaterial||C.isMeshBasicMaterial||C.isMeshStandardMaterial||C.isShaderMaterial)&&_e.setValue(V,"isOrthographic",g.isOrthographicCamera===!0),(C.isMeshPhongMaterial||C.isMeshToonMaterial||C.isMeshLambertMaterial||C.isMeshBasicMaterial||C.isMeshStandardMaterial||C.isShaderMaterial||C.skinning)&&(We.numMultiviewViews>0?X.updateCameraViewMatricesUniform(g,_e):_e.setValue(V,"viewMatrix",g.matrixWorldInverse));}if(C.skinning){_e.setOptional(V,k,"bindMatrix"),_e.setOptional(V,k,"bindMatrixInverse");var it=k.skeleton;if(it){var _r=it.bones;if(Ge.floatVertexTextures){if(it.boneTexture===void 0){var Pt=Math.sqrt(_r.length*4);Pt=Pe.ceilPowerOfTwo(Pt),Pt=Math.max(Pt,4);var bt=new Float32Array(Pt*Pt*4);bt.set(it.boneMatrices);var Qo=new Jr(bt,Pt,Pt,sn,Oi);it.boneMatrices=bt,it.boneTexture=Qo,it.boneTextureSize=Pt;}_e.setValue(V,"boneTexture",it.boneTexture,He),_e.setValue(V,"boneTextureSize",it.boneTextureSize);}else _e.setOptional(V,it,"boneMatrices");}}return(Ye||pe.receiveShadow!==k.receiveShadow)&&(pe.receiveShadow=k.receiveShadow,_e.setValue(V,"receiveShadow",k.receiveShadow)),Ye&&(_e.setValue(V,"toneMappingExposure",p.toneMappingExposure),_e.setValue(V,"toneMappingWhitePoint",p.toneMappingWhitePoint),pe.needsLights&&Bh(ue,ke),Q&&C.fog&&Lh(ue,Q),C.isMeshBasicMaterial?zt(ue,C):C.isMeshLambertMaterial?(zt(ue,C),Rh(ue,C)):C.isMeshToonMaterial?(zt(ue,C),Ch(ue,C)):C.isMeshPhongMaterial?(zt(ue,C),Ph(ue,C)):C.isMeshStandardMaterial?(zt(ue,C,xe),C.isMeshPhysicalMaterial?Dh(ue,C,xe):ql(ue,C,xe)):C.isMeshMatcapMaterial?(zt(ue,C),Oh(ue,C)):C.isMeshDepthMaterial?(zt(ue,C),Ih(ue,C)):C.isMeshDistanceMaterial?(zt(ue,C),Nh(ue,C)):C.isMeshNormalMaterial?(zt(ue,C),Fh(ue,C)):C.isLineBasicMaterial?(ya(ue,C),C.isLineDashedMaterial&&xr(ue,C)):C.isPointsMaterial?Sh(ue,C):C.isSpriteMaterial?Ah(ue,C):C.isShadowMaterial&&(ue.color.value.copy(C.color),ue.opacity.value=C.opacity),ue.ltc_1!==void 0&&(ue.ltc_1.value=ne.LTC_1),ue.ltc_2!==void 0&&(ue.ltc_2.value=ne.LTC_2),Bn.upload(V,pe.uniformsList,ue,He),C.isShaderMaterial&&(C.uniformsNeedUpdate=!1)),C.isShaderMaterial&&C.uniformsNeedUpdate===!0&&(Bn.upload(V,pe.uniformsList,ue,He),C.uniformsNeedUpdate=!1),C.isSpriteMaterial&&_e.setValue(V,"center",k.center),We.numMultiviewViews>0?X.updateObjectMatricesUniforms(k,g,_e):(_e.setValue(V,"modelViewMatrix",k.modelViewMatrix),_e.setValue(V,"normalMatrix",k.normalMatrix)),_e.setValue(V,"modelMatrix",k.matrixWorld),We;}f(ga,"setProgram");function zt(g,b,C){g.opacity.value=b.opacity,b.color&&g.diffuse.value.copy(b.color),b.emissive&&g.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity),b.map&&(g.map.value=b.map),b.alphaMap&&(g.alphaMap.value=b.alphaMap),b.specularMap&&(g.specularMap.value=b.specularMap);var k=b.envMap||C;k&&(g.envMap.value=k,g.flipEnvMap.value=k.isCubeTexture?-1:1,g.reflectivity.value=b.reflectivity,g.refractionRatio.value=b.refractionRatio,g.maxMipLevel.value=Le.get(k).__maxMipLevel),b.lightMap&&(g.lightMap.value=b.lightMap,g.lightMapIntensity.value=b.lightMapIntensity),b.aoMap&&(g.aoMap.value=b.aoMap,g.aoMapIntensity.value=b.aoMapIntensity);var Q;b.map?Q=b.map:b.specularMap?Q=b.specularMap:b.displacementMap?Q=b.displacementMap:b.normalMap?Q=b.normalMap:b.bumpMap?Q=b.bumpMap:b.roughnessMap?Q=b.roughnessMap:b.metalnessMap?Q=b.metalnessMap:b.alphaMap?Q=b.alphaMap:b.emissiveMap&&(Q=b.emissiveMap),Q!==void 0&&(Q.isWebGLRenderTarget&&(Q=Q.texture),Q.matrixAutoUpdate===!0&&Q.updateMatrix(),g.uvTransform.value.copy(Q.matrix));var xe;b.aoMap?xe=b.aoMap:b.lightMap&&(xe=b.lightMap),xe!==void 0&&(xe.isWebGLRenderTarget&&(xe=xe.texture),xe.matrixAutoUpdate===!0&&xe.updateMatrix(),g.uv2Transform.value.copy(xe.matrix));}f(zt,"refreshUniformsCommon");function ya(g,b){g.diffuse.value.copy(b.color),g.opacity.value=b.opacity;}f(ya,"refreshUniformsLine");function xr(g,b){g.dashSize.value=b.dashSize,g.totalSize.value=b.dashSize+b.gapSize,g.scale.value=b.scale;}f(xr,"refreshUniformsDash");function Sh(g,b){g.diffuse.value.copy(b.color),g.opacity.value=b.opacity,g.size.value=b.size*H,g.scale.value=z*.5,b.map&&(g.map.value=b.map),b.alphaMap&&(g.alphaMap.value=b.alphaMap);var C;b.map?C=b.map:b.alphaMap&&(C=b.alphaMap),C!==void 0&&(C.matrixAutoUpdate===!0&&C.updateMatrix(),g.uvTransform.value.copy(C.matrix));}f(Sh,"refreshUniformsPoints");function Ah(g,b){g.diffuse.value.copy(b.color),g.opacity.value=b.opacity,g.rotation.value=b.rotation,b.map&&(g.map.value=b.map),b.alphaMap&&(g.alphaMap.value=b.alphaMap);var C;b.map?C=b.map:b.alphaMap&&(C=b.alphaMap),C!==void 0&&(C.matrixAutoUpdate===!0&&C.updateMatrix(),g.uvTransform.value.copy(C.matrix));}f(Ah,"refreshUniformsSprites");function Lh(g,b){g.fogColor.value.copy(b.color),b.isFog?(g.fogNear.value=b.near,g.fogFar.value=b.far):b.isFogExp2&&(g.fogDensity.value=b.density);}f(Lh,"refreshUniformsFog");function Rh(g,b){b.emissiveMap&&(g.emissiveMap.value=b.emissiveMap);}f(Rh,"refreshUniformsLambert");function Ph(g,b){g.specular.value.copy(b.specular),g.shininess.value=Math.max(b.shininess,1e-4),b.emissiveMap&&(g.emissiveMap.value=b.emissiveMap),b.bumpMap&&(g.bumpMap.value=b.bumpMap,g.bumpScale.value=b.bumpScale,b.side===ft&&(g.bumpScale.value*=-1)),b.normalMap&&(g.normalMap.value=b.normalMap,g.normalScale.value.copy(b.normalScale),b.side===ft&&g.normalScale.value.negate()),b.displacementMap&&(g.displacementMap.value=b.displacementMap,g.displacementScale.value=b.displacementScale,g.displacementBias.value=b.displacementBias);}f(Ph,"refreshUniformsPhong");function Ch(g,b){g.specular.value.copy(b.specular),g.shininess.value=Math.max(b.shininess,1e-4),b.gradientMap&&(g.gradientMap.value=b.gradientMap),b.emissiveMap&&(g.emissiveMap.value=b.emissiveMap),b.bumpMap&&(g.bumpMap.value=b.bumpMap,g.bumpScale.value=b.bumpScale,b.side===ft&&(g.bumpScale.value*=-1)),b.normalMap&&(g.normalMap.value=b.normalMap,g.normalScale.value.copy(b.normalScale),b.side===ft&&g.normalScale.value.negate()),b.displacementMap&&(g.displacementMap.value=b.displacementMap,g.displacementScale.value=b.displacementScale,g.displacementBias.value=b.displacementBias);}f(Ch,"refreshUniformsToon");function ql(g,b,C){g.roughness.value=b.roughness,g.metalness.value=b.metalness,b.roughnessMap&&(g.roughnessMap.value=b.roughnessMap),b.metalnessMap&&(g.metalnessMap.value=b.metalnessMap),b.emissiveMap&&(g.emissiveMap.value=b.emissiveMap),b.bumpMap&&(g.bumpMap.value=b.bumpMap,g.bumpScale.value=b.bumpScale,b.side===ft&&(g.bumpScale.value*=-1)),b.normalMap&&(g.normalMap.value=b.normalMap,g.normalScale.value.copy(b.normalScale),b.side===ft&&g.normalScale.value.negate()),b.displacementMap&&(g.displacementMap.value=b.displacementMap,g.displacementScale.value=b.displacementScale,g.displacementBias.value=b.displacementBias),(b.envMap||C)&&(g.envMapIntensity.value=b.envMapIntensity);}f(ql,"refreshUniformsStandard");function Dh(g,b,C){ql(g,b,C),g.reflectivity.value=b.reflectivity,g.clearcoat.value=b.clearcoat,g.clearcoatRoughness.value=b.clearcoatRoughness,b.sheen&&g.sheen.value.copy(b.sheen),b.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(b.clearcoatNormalScale),g.clearcoatNormalMap.value=b.clearcoatNormalMap,b.side===ft&&g.clearcoatNormalScale.value.negate()),g.transparency.value=b.transparency;}f(Dh,"refreshUniformsPhysical");function Oh(g,b){b.matcap&&(g.matcap.value=b.matcap),b.bumpMap&&(g.bumpMap.value=b.bumpMap,g.bumpScale.value=b.bumpScale,b.side===ft&&(g.bumpScale.value*=-1)),b.normalMap&&(g.normalMap.value=b.normalMap,g.normalScale.value.copy(b.normalScale),b.side===ft&&g.normalScale.value.negate()),b.displacementMap&&(g.displacementMap.value=b.displacementMap,g.displacementScale.value=b.displacementScale,g.displacementBias.value=b.displacementBias);}f(Oh,"refreshUniformsMatcap");function Ih(g,b){b.displacementMap&&(g.displacementMap.value=b.displacementMap,g.displacementScale.value=b.displacementScale,g.displacementBias.value=b.displacementBias);}f(Ih,"refreshUniformsDepth");function Nh(g,b){b.displacementMap&&(g.displacementMap.value=b.displacementMap,g.displacementScale.value=b.displacementScale,g.displacementBias.value=b.displacementBias),g.referencePosition.value.copy(b.referencePosition),g.nearDistance.value=b.nearDistance,g.farDistance.value=b.farDistance;}f(Nh,"refreshUniformsDistance");function Fh(g,b){b.bumpMap&&(g.bumpMap.value=b.bumpMap,g.bumpScale.value=b.bumpScale,b.side===ft&&(g.bumpScale.value*=-1)),b.normalMap&&(g.normalMap.value=b.normalMap,g.normalScale.value.copy(b.normalScale),b.side===ft&&g.normalScale.value.negate()),b.displacementMap&&(g.displacementMap.value=b.displacementMap,g.displacementScale.value=b.displacementScale,g.displacementBias.value=b.displacementBias);}f(Fh,"refreshUniformsNormal");function Bh(g,b){g.ambientLightColor.needsUpdate=b,g.lightProbe.needsUpdate=b,g.directionalLights.needsUpdate=b,g.pointLights.needsUpdate=b,g.spotLights.needsUpdate=b,g.rectAreaLights.needsUpdate=b,g.hemisphereLights.needsUpdate=b;}f(Bh,"markUniformsLightsNeedsUpdate");function Uh(g){return g.isMeshLambertMaterial||g.isMeshToonMaterial||g.isMeshPhongMaterial||g.isMeshStandardMaterial||g.isShadowMaterial||g.isShaderMaterial&&g.lights===!0;}f(Uh,"materialNeedsLights"),this.setFramebuffer=function(g){y!==g&&_===null&&V.bindFramebuffer(36160,g),y=g;},this.getActiveCubeFace=function(){return m;},this.getActiveMipmapLevel=function(){return x;},this.getRenderTarget=function(){return _;},this.setRenderTarget=function(g,b,C){_=g,m=b,x=C,g&&Le.get(g).__webglFramebuffer===void 0&&He.setupRenderTarget(g);var k=y,Q=!1;if(g){var xe=Le.get(g).__webglFramebuffer;g.isWebGLRenderTargetCube?(k=xe[b||0],Q=!0):g.isWebGLMultisampleRenderTarget?k=Le.get(g).__webglMultisampledFramebuffer:k=xe,A.copy(g.viewport),I.copy(g.scissor),N=g.scissorTest;}else A.copy(W).multiplyScalar(H).floor(),I.copy($).multiplyScalar(H).floor(),N=oe;if(w!==k&&(V.bindFramebuffer(36160,k),w=k),ge.viewport(A),ge.scissor(I),ge.setScissorTest(N),Q){var pe=Le.get(g.texture);V.framebufferTexture2D(36160,36064,34069+(b||0),pe.__webglTexture,C||0);}},this.readRenderTargetPixels=function(g,b,C,k,Q,xe,pe){if(!(g&&g.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return;}var Oe=Le.get(g).__webglFramebuffer;if(g.isWebGLRenderTargetCube&&pe!==void 0&&(Oe=Oe[pe]),Oe){var Se=!1;Oe!==w&&(V.bindFramebuffer(36160,Oe),Se=!0);try{var Re=g.texture,Ye=Re.format,ke=Re.type;if(Ye!==sn&&ye.convert(Ye)!==V.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return;}if(ke!==Xo&&ye.convert(ke)!==V.getParameter(35738)&&!(ke===Oi&&(Ge.isWebGL2||Ee.get("OES_texture_float")||Ee.get("WEBGL_color_buffer_float")))&&!(ke===Il&&(Ge.isWebGL2?Ee.get("EXT_color_buffer_float"):Ee.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return;}V.checkFramebufferStatus(36160)===36053?b>=0&&b<=g.width-k&&C>=0&&C<=g.height-Q&&V.readPixels(b,C,k,Q,ye.convert(Ye),ye.convert(ke),xe):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");}finally{Se&&V.bindFramebuffer(36160,w);}}},this.copyFramebufferToTexture=function(g,b,C){C===void 0&&(C=0);var k=Math.pow(2,-C),Q=Math.floor(b.image.width*k),xe=Math.floor(b.image.height*k),pe=ye.convert(b.format);He.setTexture2D(b,0),V.copyTexImage2D(3553,C,pe,g.x,g.y,Q,xe,0),ge.unbindTexture();},this.copyTextureToTexture=function(g,b,C,k){var Q=b.image.width,xe=b.image.height,pe=ye.convert(C.format),Oe=ye.convert(C.type);He.setTexture2D(C,0),b.isDataTexture?V.texSubImage2D(3553,k||0,g.x,g.y,Q,xe,pe,Oe,b.image.data):V.texSubImage2D(3553,k||0,g.x,g.y,pe,Oe,b.image),ge.unbindTexture();},this.initTexture=function(g){He.setTexture2D(g,0),ge.unbindTexture();},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}));}f(eh,"WebGLRenderer");function Vs(e,t){this.name="",this.color=new se(e),this.density=t!==void 0?t:25e-5;}f(Vs,"FogExp2");Object.assign(Vs.prototype,{isFogExp2:!0,clone:function(){return new Vs(this.color,this.density);},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density};}});function ks(e,t,n){this.name="",this.color=new se(e),this.near=t!==void 0?t:1,this.far=n!==void 0?n:1e3;}f(ks,"Fog");Object.assign(ks.prototype,{isFog:!0,clone:function(){return new ks(this.color,this.near,this.far);},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far};}});function Vn(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Yo,this.updateRange={offset:0,count:-1},this.version=0;}f(Vn,"InterleavedBuffer");Object.defineProperty(Vn.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++;}});Object.assign(Vn.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this;},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this;},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this;},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this;},clone:function(){return new this.constructor().copy(this);},onUpload:function(e){return this.onUploadCallback=e,this;}});var er=new E();function fo(e,t,n,r){this.data=e,this.itemSize=t,this.offset=n,this.normalized=r===!0;}f(fo,"InterleavedBufferAttribute");Object.defineProperties(fo.prototype,{count:{get:function(){return this.data.count;}},array:{get:function(){return this.data.array;}}});Object.assign(fo.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(var t=0,n=this.data.count;t<n;t++)er.x=this.getX(t),er.y=this.getY(t),er.z=this.getZ(t),er.applyMatrix4(e),this.setXYZ(t,er.x,er.y,er.z);return this;},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this;},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this;},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this;},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this;},getX:function(e){return this.data.array[e*this.data.stride+this.offset];},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1];},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2];},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3];},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this;},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this;},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this;}});function pr(e){be.call(this),this.type="SpriteMaterial",this.color=new se(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e);}f(pr,"SpriteMaterial");pr.prototype=Object.create(be.prototype);pr.prototype.constructor=pr;pr.prototype.isSpriteMaterial=!0;pr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this;};var Or,Mi=new E(),Ir=new E(),Nr=new E(),Fr=new G(),Ei=new G(),th=new De(),Na=new E(),Ti=new E(),Fa=new E(),Cc=new G(),ws=new G(),Dc=new G();function Ws(e){if(ie.call(this),this.type="Sprite",Or===void 0){Or=new le();var t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Vn(t,5);Or.setIndex([0,1,2,0,2,3]),Or.setAttribute("position",new fo(n,3,0,!1)),Or.setAttribute("uv",new fo(n,2,3,!1));}this.geometry=Or,this.material=e!==void 0?e:new pr(),this.center=new G(.5,.5);}f(Ws,"Sprite");Ws.prototype=Object.assign(Object.create(ie.prototype),{constructor:Ws,isSprite:!0,raycast:function(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ir.setFromMatrixScale(this.matrixWorld),th.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Nr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ir.multiplyScalar(-Nr.z);var n=this.material.rotation,r,i;n!==0&&(i=Math.cos(n),r=Math.sin(n));var a=this.center;Ba(Na.set(-.5,-.5,0),Nr,a,Ir,r,i),Ba(Ti.set(.5,-.5,0),Nr,a,Ir,r,i),Ba(Fa.set(.5,.5,0),Nr,a,Ir,r,i),Cc.set(0,0),ws.set(1,0),Dc.set(1,1);var o=e.ray.intersectTriangle(Na,Ti,Fa,!1,Mi);if(!(o===null&&(Ba(Ti.set(-.5,.5,0),Nr,a,Ir,r,i),ws.set(0,1),o=e.ray.intersectTriangle(Na,Fa,Ti,!1,Mi),o===null))){var s=e.ray.origin.distanceTo(Mi);s<e.near||s>e.far||t.push({distance:s,point:Mi.clone(),uv:vt.getUV(Mi,Na,Ti,Fa,Cc,ws,Dc,new G()),face:null,object:this});}},clone:function(){return new this.constructor(this.material).copy(this);},copy:function(e){return ie.prototype.copy.call(this,e),e.center!==void 0&&this.center.copy(e.center),this;}});function Ba(e,t,n,r,i,a){Fr.subVectors(e,n).addScalar(.5).multiply(r),i!==void 0?(Ei.x=a*Fr.x-i*Fr.y,Ei.y=i*Fr.x+a*Fr.y):Ei.copy(Fr),e.copy(t),e.x+=Ei.x,e.y+=Ei.y,e.applyMatrix4(th);}f(Ba,"transformVertex");var Ua=new E(),Oc=new E();function po(){ie.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0;}f(po,"LOD");po.prototype=Object.assign(Object.create(ie.prototype),{constructor:po,isLOD:!0,copy:function(e){ie.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,r=t.length;n<r;n++){var i=t[n];this.addLevel(i.object.clone(),i.distance);}return this.autoUpdate=e.autoUpdate,this;},addLevel:function(e,t){t===void 0&&(t=0),t=Math.abs(t);for(var n=this.levels,r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this;},getObjectForDistance:function(e){var t=this.levels;if(t.length>0){for(var n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object;}return null;},raycast:function(e,t){var n=this.levels;if(n.length>0){Ua.setFromMatrixPosition(this.matrixWorld);var r=e.ray.origin.distanceTo(Ua);this.getObjectForDistance(r).raycast(e,t);}},update:function(e){var t=this.levels;if(t.length>1){Ua.setFromMatrixPosition(e.matrixWorld),Oc.setFromMatrixPosition(this.matrixWorld);var n=Ua.distanceTo(Oc);t[0].object.visible=!0;for(var r=1,i=t.length;r<i&&n>=t[r].distance;r++)t[r-1].object.visible=!1,t[r].object.visible=!0;for(;r<i;r++)t[r].object.visible=!1;}},toJSON:function(e){var t=ie.prototype.toJSON.call(this,e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];for(var n=this.levels,r=0,i=n.length;r<i;r++){var a=n[r];t.object.levels.push({object:a.object.uuid,distance:a.distance});}return t;}});function vo(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),nt.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new De(),this.bindMatrixInverse=new De();}f(vo,"SkinnedMesh");vo.prototype=Object.assign(Object.create(nt.prototype),{constructor:vo,isSkinnedMesh:!0,bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t);},pose:function(){this.skeleton.pose();},normalizeSkinWeights:function(){for(var e=new Ze(),t=this.geometry.attributes.skinWeight,n=0,r=t.count;n<r;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);var i=1/e.manhattanLength();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w);}},updateMatrixWorld:function(e){nt.prototype.updateMatrixWorld.call(this,e),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode);},clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});var Ic=new De(),lg=new De();function js(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,t===void 0)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new De());}}f(js,"Skeleton");Object.assign(js.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new De();this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n);}},pose:function(){var e,t,n;for(t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale));},update:function(){for(var e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture,i=0,a=e.length;i<a;i++){var o=e[i]?e[i].matrixWorld:lg;Ic.multiplyMatrices(o,t[i]),Ic.toArray(n,i*16);}r!==void 0&&(r.needsUpdate=!0);},clone:function(){return new js(this.bones,this.boneInverses);},getBoneByName:function(e){for(var t=0,n=this.bones.length;t<n;t++){var r=this.bones[t];if(r.name===e)return r;}}});function Nc(){ie.call(this),this.type="Bone";}f(Nc,"Bone");Nc.prototype=Object.assign(Object.create(ie.prototype),{constructor:Nc,isBone:!0});var Fc=new De(),Bc=new De(),Br=[],Si=new nt();function qs(e,t,n){nt.call(this,e,t),this.instanceMatrix=new we(new Float32Array(n*16),16),this.count=n;}f(qs,"InstancedMesh");qs.prototype=Object.assign(Object.create(nt.prototype),{constructor:qs,isInstancedMesh:!0,getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16);},raycast:function(e,t){var n=this.matrixWorld,r=this.count;if(Si.geometry=this.geometry,Si.material=this.material,Si.material!==void 0)for(var i=0;i<r;i++)this.getMatrixAt(i,Fc),Bc.multiplyMatrices(n,Fc),Si.matrixWorld=Bc,Si.raycast(e,Br),Br.length>0&&(Br[0].instanceId=i,Br[0].object=this,t.push(Br[0]),Br.length=0);},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16);},updateMorphTargets:function(){}});function ot(e){be.call(this),this.type="LineBasicMaterial",this.color=new se(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e);}f(ot,"LineBasicMaterial");ot.prototype=Object.create(be.prototype);ot.prototype.constructor=ot;ot.prototype.isLineBasicMaterial=!0;ot.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this;};var Uc=new E(),zc=new E(),Gc=new De(),za=new vi(),Ga=new qn();function Vt(e,t,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),ie.call(this),this.type="Line",this.geometry=e!==void 0?e:new le(),this.material=t!==void 0?t:new ot({color:Math.random()*16777215});}f(Vt,"Line");Vt.prototype=Object.assign(Object.create(ie.prototype),{constructor:Vt,isLine:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry){if(e.index===null){for(var t=e.attributes.position,n=[0],r=1,i=t.count;r<i;r++)Uc.fromBufferAttribute(t,r-1),zc.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=Uc.distanceTo(zc);e.setAttribute("lineDistance",new re(n,1));}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else if(e.isGeometry){var a=e.vertices,n=e.lineDistances;n[0]=0;for(var r=1,i=a.length;r<i;r++)n[r]=n[r-1],n[r]+=a[r-1].distanceTo(a[r]);}return this;},raycast:function(e,t){var n=e.linePrecision,r=this.geometry,i=this.matrixWorld;if(r.boundingSphere===null&&r.computeBoundingSphere(),Ga.copy(r.boundingSphere),Ga.applyMatrix4(i),Ga.radius+=n,e.ray.intersectsSphere(Ga)!==!1){Gc.getInverse(i),za.copy(e.ray).applyMatrix4(Gc);var a=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,s=new E(),l=new E(),c=new E(),u=new E(),h=this&&this.isLineSegments?2:1;if(r.isBufferGeometry){var d=r.index,p=r.attributes,v=p.position.array;if(d!==null)for(var y=d.array,m=0,x=y.length-1;m<x;m+=h){var _=y[m],w=y[m+1];s.fromArray(v,_*3),l.fromArray(v,w*3);var T=za.distanceSqToSegment(s,l,u,c);if(!(T>o)){u.applyMatrix4(this.matrixWorld);var M=e.ray.origin.distanceTo(u);M<e.near||M>e.far||t.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this});}}else for(var m=0,x=v.length/3-1;m<x;m+=h){s.fromArray(v,3*m),l.fromArray(v,3*m+3);var T=za.distanceSqToSegment(s,l,u,c);if(!(T>o)){u.applyMatrix4(this.matrixWorld);var M=e.ray.origin.distanceTo(u);M<e.near||M>e.far||t.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this});}}}else if(r.isGeometry)for(var R=r.vertices,S=R.length,m=0;m<S-1;m+=h){var T=za.distanceSqToSegment(R[m],R[m+1],u,c);if(!(T>o)){u.applyMatrix4(this.matrixWorld);var M=e.ray.origin.distanceTo(u);M<e.near||M>e.far||t.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this});}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});var Ha=new E(),Va=new E();function ct(e,t){Vt.call(this,e,t),this.type="LineSegments";}f(ct,"LineSegments");ct.prototype=Object.assign(Object.create(Vt.prototype),{constructor:ct,isLineSegments:!0,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry){if(e.index===null){for(var t=e.attributes.position,n=[],r=0,i=t.count;r<i;r+=2)Ha.fromBufferAttribute(t,r),Va.fromBufferAttribute(t,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+Ha.distanceTo(Va);e.setAttribute("lineDistance",new re(n,1));}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");}else if(e.isGeometry)for(var a=e.vertices,n=e.lineDistances,r=0,i=a.length;r<i;r+=2)Ha.copy(a[r]),Va.copy(a[r+1]),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+Ha.distanceTo(Va);return this;}});function Xs(e,t){Vt.call(this,e,t),this.type="LineLoop";}f(Xs,"LineLoop");Xs.prototype=Object.assign(Object.create(Vt.prototype),{constructor:Xs,isLineLoop:!0});function vr(e){be.call(this),this.type="PointsMaterial",this.color=new se(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e);}f(vr,"PointsMaterial");vr.prototype=Object.create(be.prototype);vr.prototype.constructor=vr;vr.prototype.isPointsMaterial=!0;vr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this;};var Hc=new De(),Ys=new vi(),ka=new qn(),Wa=new E();function Zs(e,t){ie.call(this),this.type="Points",this.geometry=e!==void 0?e:new le(),this.material=t!==void 0?t:new vr({color:Math.random()*16777215}),this.updateMorphTargets();}f(Zs,"Points");Zs.prototype=Object.assign(Object.create(ie.prototype),{constructor:Zs,isPoints:!0,raycast:function(e,t){var n=this.geometry,r=this.matrixWorld,i=e.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),ka.copy(n.boundingSphere),ka.applyMatrix4(r),ka.radius+=i,e.ray.intersectsSphere(ka)!==!1){Hc.getInverse(r),Ys.copy(e.ray).applyMatrix4(Hc);var a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(n.isBufferGeometry){var s=n.index,l=n.attributes,c=l.position.array;if(s!==null)for(var u=s.array,h=0,d=u.length;h<d;h++){var p=u[h];Wa.fromArray(c,p*3),Ms(Wa,p,o,r,e,t,this);}else for(var h=0,v=c.length/3;h<v;h++)Wa.fromArray(c,h*3),Ms(Wa,h,o,r,e,t,this);}else for(var y=n.vertices,h=0,v=y.length;h<v;h++)Ms(y[h],h,o,r,e,t,this);}},updateMorphTargets:function(){var e=this.geometry,t,n,r;if(e.isBufferGeometry){var i=e.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(o!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,n=o.length;t<n;t++)r=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t;}}else{var s=e.morphTargets;s!==void 0&&s.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});function Ms(e,t,n,r,i,a,o){var s=Ys.distanceSqToPoint(e);if(s<n){var l=new E();Ys.closestPointToPoint(e,l),l.applyMatrix4(r);var c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;a.push({distance:c,distanceToRay:Math.sqrt(s),point:l,index:t,face:null,object:o});}}f(Ms,"testPoint");function Vc(e,t,n,r,i,a,o,s,l){Je.call(this,e,t,n,r,i,a,o,s,l),this.format=o!==void 0?o:cr,this.minFilter=a!==void 0?a:dt,this.magFilter=i!==void 0?i:dt,this.generateMipmaps=!1;}f(Vc,"VideoTexture");Vc.prototype=Object.assign(Object.create(Je.prototype),{constructor:Vc,isVideoTexture:!0,update:function(){var e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0);}});function Hi(e,t,n,r,i,a,o,s,l,c,u,h){Je.call(this,null,a,o,s,l,c,r,i,u,h),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1;}f(Hi,"CompressedTexture");Hi.prototype=Object.create(Je.prototype);Hi.prototype.constructor=Hi;Hi.prototype.isCompressedTexture=!0;function mo(e,t,n,r,i,a,o,s,l){Je.call(this,e,t,n,r,i,a,o,s,l),this.needsUpdate=!0;}f(mo,"CanvasTexture");mo.prototype=Object.create(Je.prototype);mo.prototype.constructor=mo;mo.prototype.isCanvasTexture=!0;function go(e,t,n,r,i,a,o,s,l,c){if(c=c!==void 0?c:qr,c!==qr&&c!==Ii)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===qr&&(n=ao),n===void 0&&c===Ii&&(n=oo),Je.call(this,null,r,i,a,o,s,c,n,l),this.image={width:e,height:t},this.magFilter=o!==void 0?o:lt,this.minFilter=s!==void 0?s:lt,this.flipY=!1,this.generateMipmaps=!1;}f(go,"DepthTexture");go.prototype=Object.create(Je.prototype);go.prototype.constructor=go;go.prototype.isDepthTexture=!0;function yo(e){le.call(this),this.type="WireframeGeometry";var t=[],n,r,i,a,o,s=[0,0],l={},c,u,h,d,p=["a","b","c"],v;if(e&&e.isGeometry){var y=e.faces;for(n=0,i=y.length;n<i;n++){var m=y[n];for(r=0;r<3;r++)u=m[p[r]],h=m[p[(r+1)%3]],s[0]=Math.min(u,h),s[1]=Math.max(u,h),d=s[0]+","+s[1],l[d]===void 0&&(l[d]={index1:s[0],index2:s[1]});}for(d in l)c=l[d],v=e.vertices[c.index1],t.push(v.x,v.y,v.z),v=e.vertices[c.index2],t.push(v.x,v.y,v.z);}else if(e&&e.isBufferGeometry){var x,_,w,T,M,R,S,A;if(v=new E(),e.index!==null){for(x=e.attributes.position,_=e.index,w=e.groups,w.length===0&&(w=[{start:0,count:_.count,materialIndex:0}]),a=0,o=w.length;a<o;++a)for(T=w[a],M=T.start,R=T.count,n=M,i=M+R;n<i;n+=3)for(r=0;r<3;r++)u=_.getX(n+r),h=_.getX(n+(r+1)%3),s[0]=Math.min(u,h),s[1]=Math.max(u,h),d=s[0]+","+s[1],l[d]===void 0&&(l[d]={index1:s[0],index2:s[1]});for(d in l)c=l[d],v.fromBufferAttribute(x,c.index1),t.push(v.x,v.y,v.z),v.fromBufferAttribute(x,c.index2),t.push(v.x,v.y,v.z);}else for(x=e.attributes.position,n=0,i=x.count/3;n<i;n++)for(r=0;r<3;r++)S=3*n+r,v.fromBufferAttribute(x,S),t.push(v.x,v.y,v.z),A=3*n+(r+1)%3,v.fromBufferAttribute(x,A),t.push(v.x,v.y,v.z);}this.setAttribute("position",new re(t,3));}f(yo,"WireframeGeometry");yo.prototype=Object.create(le.prototype);yo.prototype.constructor=yo;function xo(e,t,n){Me.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new Vi(e,t,n)),this.mergeVertices();}f(xo,"ParametricGeometry");xo.prototype=Object.create(Me.prototype);xo.prototype.constructor=xo;function Vi(e,t,n){le.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};var r=[],i=[],a=[],o=[],s=1e-5,l=new E(),c=new E(),u=new E(),h=new E(),d=new E(),p,v;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var y=t+1;for(p=0;p<=n;p++){var m=p/n;for(v=0;v<=t;v++){var x=v/t;e(x,m,c),i.push(c.x,c.y,c.z),x-s>=0?(e(x-s,m,u),h.subVectors(c,u)):(e(x+s,m,u),h.subVectors(u,c)),m-s>=0?(e(x,m-s,u),d.subVectors(c,u)):(e(x,m+s,u),d.subVectors(u,c)),l.crossVectors(h,d).normalize(),a.push(l.x,l.y,l.z),o.push(x,m);}}for(p=0;p<n;p++)for(v=0;v<t;v++){var _=p*y+v,w=p*y+v+1,T=(p+1)*y+v+1,M=(p+1)*y+v;r.push(_,w,M),r.push(w,T,M);}this.setIndex(r),this.setAttribute("position",new re(i,3)),this.setAttribute("normal",new re(a,3)),this.setAttribute("uv",new re(o,2));}f(Vi,"ParametricBufferGeometry");Vi.prototype=Object.create(le.prototype);Vi.prototype.constructor=Vi;function _o(e,t,n,r){Me.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},this.fromBufferGeometry(new Ft(e,t,n,r)),this.mergeVertices();}f(_o,"PolyhedronGeometry");_o.prototype=Object.create(Me.prototype);_o.prototype.constructor=_o;function Ft(e,t,n,r){le.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1,r=r||0;var i=[],a=[];o(r),l(n),c(),this.setAttribute("position",new re(i,3)),this.setAttribute("normal",new re(i.slice(),3)),this.setAttribute("uv",new re(a,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function o(x){for(var _=new E(),w=new E(),T=new E(),M=0;M<t.length;M+=3)d(t[M+0],_),d(t[M+1],w),d(t[M+2],T),s(_,w,T,x);}f(o,"subdivide");function s(x,_,w,T){var M=Math.pow(2,T),R=[],S,A;for(S=0;S<=M;S++){R[S]=[];var I=x.clone().lerp(w,S/M),N=_.clone().lerp(w,S/M),F=M-S;for(A=0;A<=F;A++)A===0&&S===M?R[S][A]=I:R[S][A]=I.clone().lerp(N,A/F);}for(S=0;S<M;S++)for(A=0;A<2*(M-S)-1;A++){var z=Math.floor(A/2);A%2===0?(h(R[S][z+1]),h(R[S+1][z]),h(R[S][z])):(h(R[S][z+1]),h(R[S+1][z+1]),h(R[S+1][z]));}}f(s,"subdivideFace");function l(x){for(var _=new E(),w=0;w<i.length;w+=3)_.x=i[w+0],_.y=i[w+1],_.z=i[w+2],_.normalize().multiplyScalar(x),i[w+0]=_.x,i[w+1]=_.y,i[w+2]=_.z;}f(l,"applyRadius");function c(){for(var x=new E(),_=0;_<i.length;_+=3){x.x=i[_+0],x.y=i[_+1],x.z=i[_+2];var w=y(x)/2/Math.PI+.5,T=m(x)/Math.PI+.5;a.push(w,1-T);}p(),u();}f(c,"generateUVs");function u(){for(var x=0;x<a.length;x+=6){var _=a[x+0],w=a[x+2],T=a[x+4],M=Math.max(_,w,T),R=Math.min(_,w,T);M>.9&&R<.1&&(_<.2&&(a[x+0]+=1),w<.2&&(a[x+2]+=1),T<.2&&(a[x+4]+=1));}}f(u,"correctSeam");function h(x){i.push(x.x,x.y,x.z);}f(h,"pushVertex");function d(x,_){var w=x*3;_.x=e[w+0],_.y=e[w+1],_.z=e[w+2];}f(d,"getVertexByIndex");function p(){for(var x=new E(),_=new E(),w=new E(),T=new E(),M=new G(),R=new G(),S=new G(),A=0,I=0;A<i.length;A+=9,I+=6){x.set(i[A+0],i[A+1],i[A+2]),_.set(i[A+3],i[A+4],i[A+5]),w.set(i[A+6],i[A+7],i[A+8]),M.set(a[I+0],a[I+1]),R.set(a[I+2],a[I+3]),S.set(a[I+4],a[I+5]),T.copy(x).add(_).add(w).divideScalar(3);var N=y(T);v(M,I+0,x,N),v(R,I+2,_,N),v(S,I+4,w,N);}}f(p,"correctUVs");function v(x,_,w,T){T<0&&x.x===1&&(a[_]=x.x-1),w.x===0&&w.z===0&&(a[_]=T/2/Math.PI+.5);}f(v,"correctUV");function y(x){return Math.atan2(x.z,-x.x);}f(y,"azimuth");function m(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z));}f(m,"inclination");}f(Ft,"PolyhedronBufferGeometry");Ft.prototype=Object.create(le.prototype);Ft.prototype.constructor=Ft;function bo(e,t){Me.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ki(e,t)),this.mergeVertices();}f(bo,"TetrahedronGeometry");bo.prototype=Object.create(Me.prototype);bo.prototype.constructor=bo;function ki(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];Ft.call(this,n,r,e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t};}f(ki,"TetrahedronBufferGeometry");ki.prototype=Object.create(Ft.prototype);ki.prototype.constructor=ki;function wo(e,t){Me.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Qr(e,t)),this.mergeVertices();}f(wo,"OctahedronGeometry");wo.prototype=Object.create(Me.prototype);wo.prototype.constructor=wo;function Qr(e,t){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];Ft.call(this,n,r,e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t};}f(Qr,"OctahedronBufferGeometry");Qr.prototype=Object.create(Ft.prototype);Qr.prototype.constructor=Qr;function Mo(e,t){Me.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Wi(e,t)),this.mergeVertices();}f(Mo,"IcosahedronGeometry");Mo.prototype=Object.create(Me.prototype);Mo.prototype.constructor=Mo;function Wi(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];Ft.call(this,r,i,e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t};}f(Wi,"IcosahedronBufferGeometry");Wi.prototype=Object.create(Ft.prototype);Wi.prototype.constructor=Wi;function Eo(e,t){Me.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ji(e,t)),this.mergeVertices();}f(Eo,"DodecahedronGeometry");Eo.prototype=Object.create(Me.prototype);Eo.prototype.constructor=Eo;function ji(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];Ft.call(this,i,a,e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t};}f(ji,"DodecahedronBufferGeometry");ji.prototype=Object.create(Ft.prototype);ji.prototype.constructor=ji;function To(e,t,n,r,i,a){Me.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},a!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new Kr(e,t,n,r,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices();}f(To,"TubeGeometry");To.prototype=Object.create(Me.prototype);To.prototype.constructor=To;function Kr(e,t,n,r,i){le.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i},t=t||64,n=n||1,r=r||8,i=i||!1;var a=e.computeFrenetFrames(t,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var o=new E(),s=new E(),l=new G(),c=new E(),u,h,d=[],p=[],v=[],y=[];m(),this.setIndex(y),this.setAttribute("position",new re(d,3)),this.setAttribute("normal",new re(p,3)),this.setAttribute("uv",new re(v,2));function m(){for(u=0;u<t;u++)x(u);x(i===!1?t:0),w(),_();}f(m,"generateBufferData");function x(T){c=e.getPointAt(T/t,c);var M=a.normals[T],R=a.binormals[T];for(h=0;h<=r;h++){var S=h/r*Math.PI*2,A=Math.sin(S),I=-Math.cos(S);s.x=I*M.x+A*R.x,s.y=I*M.y+A*R.y,s.z=I*M.z+A*R.z,s.normalize(),p.push(s.x,s.y,s.z),o.x=c.x+n*s.x,o.y=c.y+n*s.y,o.z=c.z+n*s.z,d.push(o.x,o.y,o.z);}}f(x,"generateSegment");function _(){for(h=1;h<=t;h++)for(u=1;u<=r;u++){var T=(r+1)*(h-1)+(u-1),M=(r+1)*h+(u-1),R=(r+1)*h+u,S=(r+1)*(h-1)+u;y.push(T,M,S),y.push(M,R,S);}}f(_,"generateIndices");function w(){for(u=0;u<=t;u++)for(h=0;h<=r;h++)l.x=u/t,l.y=h/r,v.push(l.x,l.y);}f(w,"generateUVs");}f(Kr,"TubeBufferGeometry");Kr.prototype=Object.create(le.prototype);Kr.prototype.constructor=Kr;Kr.prototype.toJSON=function(){var e=le.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e;};function So(e,t,n,r,i,a,o){Me.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},o!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new qi(e,t,n,r,i,a)),this.mergeVertices();}f(So,"TorusKnotGeometry");So.prototype=Object.create(Me.prototype);So.prototype.constructor=So;function qi(e,t,n,r,i,a){le.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},e=e||1,t=t||.4,n=Math.floor(n)||64,r=Math.floor(r)||8,i=i||2,a=a||3;var o=[],s=[],l=[],c=[],u,h,d=new E(),p=new E(),v=new E(),y=new E(),m=new E(),x=new E(),_=new E();for(u=0;u<=n;++u){var w=u/n*i*Math.PI*2;for(F(w,i,a,e,v),F(w+.01,i,a,e,y),x.subVectors(y,v),_.addVectors(y,v),m.crossVectors(x,_),_.crossVectors(m,x),m.normalize(),_.normalize(),h=0;h<=r;++h){var T=h/r*Math.PI*2,M=-t*Math.cos(T),R=t*Math.sin(T);d.x=v.x+(M*_.x+R*m.x),d.y=v.y+(M*_.y+R*m.y),d.z=v.z+(M*_.z+R*m.z),s.push(d.x,d.y,d.z),p.subVectors(d,v).normalize(),l.push(p.x,p.y,p.z),c.push(u/n),c.push(h/r);}}for(h=1;h<=n;h++)for(u=1;u<=r;u++){var S=(r+1)*(h-1)+(u-1),A=(r+1)*h+(u-1),I=(r+1)*h+u,N=(r+1)*(h-1)+u;o.push(S,A,N),o.push(A,I,N);}this.setIndex(o),this.setAttribute("position",new re(s,3)),this.setAttribute("normal",new re(l,3)),this.setAttribute("uv",new re(c,2));function F(z,H,B,U,W){var $=Math.cos(z),oe=Math.sin(z),Z=B/H*z,K=Math.cos(Z);W.x=U*(2+K)*.5*$,W.y=U*(2+K)*oe*.5,W.z=U*Math.sin(Z)*.5;}f(F,"calculatePositionOnCurve");}f(qi,"TorusKnotBufferGeometry");qi.prototype=Object.create(le.prototype);qi.prototype.constructor=qi;function Ao(e,t,n,r,i){Me.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},this.fromBufferGeometry(new Xi(e,t,n,r,i)),this.mergeVertices();}f(Ao,"TorusGeometry");Ao.prototype=Object.create(Me.prototype);Ao.prototype.constructor=Ao;function Xi(e,t,n,r,i){le.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},e=e||1,t=t||.4,n=Math.floor(n)||8,r=Math.floor(r)||6,i=i||Math.PI*2;var a=[],o=[],s=[],l=[],c=new E(),u=new E(),h=new E(),d,p;for(d=0;d<=n;d++)for(p=0;p<=r;p++){var v=p/r*i,y=d/n*Math.PI*2;u.x=(e+t*Math.cos(y))*Math.cos(v),u.y=(e+t*Math.cos(y))*Math.sin(v),u.z=t*Math.sin(y),o.push(u.x,u.y,u.z),c.x=e*Math.cos(v),c.y=e*Math.sin(v),h.subVectors(u,c).normalize(),s.push(h.x,h.y,h.z),l.push(p/r),l.push(d/n);}for(d=1;d<=n;d++)for(p=1;p<=r;p++){var m=(r+1)*d+p-1,x=(r+1)*(d-1)+p-1,_=(r+1)*(d-1)+p,w=(r+1)*d+p;a.push(m,x,w),a.push(x,_,w);}this.setIndex(a),this.setAttribute("position",new re(o,3)),this.setAttribute("normal",new re(s,3)),this.setAttribute("uv",new re(l,2));}f(Xi,"TorusBufferGeometry");Xi.prototype=Object.create(le.prototype);Xi.prototype.constructor=Xi;var cg={triangulate:function(e,t,n){n=n||2;var r=t&&t.length,i=r?t[0]*n:e.length,a=nh(e,0,i,n,!0),o=[];if(!a||a.next===a.prev)return o;var s,l,c,u,h,d,p;if(r&&(a=pg(e,t,a,n)),e.length>80*n){s=c=e[0],l=u=e[1];for(var v=n;v<i;v+=n)h=e[v],d=e[v+1],h<s&&(s=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);p=Math.max(c-s,u-l),p=p!==0?1/p:0;}return Zi(a,o,n,s,l,p),o;}};function nh(e,t,n,r,i){var a,o;if(i===Eg(e,t,n,r)>0)for(a=t;a<n;a+=r)o=kc(a,e[a],e[a+1],o);else for(a=n-r;a>=t;a-=r)o=kc(a,e[a],e[a+1],o);return o&&or(o,o.next)&&($i(o),o=o.next),o;}f(nh,"linkedList");function Yi(e,t){if(!e)return e;t||(t=e);var n=e,r;do if(r=!1,!n.steiner&&(or(n,n.next)||mt(n.prev,n,n.next)===0)){if($i(n),n=t=n.prev,n===n.next)break;r=!0;}else n=n.next;while(r||n!==t);return t;}f(Yi,"filterPoints");function Zi(e,t,n,r,i,a,o){if(!!e){!o&&a&&yg(e,r,i,a);for(var s=e,l,c;e.prev!==e.next;){if(l=e.prev,c=e.next,a?hg(e,r,i,a):ug(e)){t.push(l.i/n),t.push(e.i/n),t.push(c.i/n),$i(e),e=c.next,s=c.next;continue;}if(e=c,e===s){o?o===1?(e=fg(e,t,n),Zi(e,t,n,r,i,a,2)):o===2&&dg(e,t,n,r,i,a):Zi(Yi(e),t,n,r,i,a,1);break;}}}}f(Zi,"earcutLinked");function ug(e){var t=e.prev,n=e,r=e.next;if(mt(t,n,r)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(jr(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&mt(i.prev,i,i.next)>=0)return!1;i=i.next;}return!0;}f(ug,"isEar");function hg(e,t,n,r){var i=e.prev,a=e,o=e.next;if(mt(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,l=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,c=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,u=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,h=Js(s,l,t,n,r),d=Js(c,u,t,n,r),p=e.prevZ,v=e.nextZ;p&&p.z>=h&&v&&v.z<=d;){if(p!==e.prev&&p!==e.next&&jr(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0||(p=p.prevZ,v!==e.prev&&v!==e.next&&jr(i.x,i.y,a.x,a.y,o.x,o.y,v.x,v.y)&&mt(v.prev,v,v.next)>=0))return!1;v=v.nextZ;}for(;p&&p.z>=h;){if(p!==e.prev&&p!==e.next&&jr(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0)return!1;p=p.prevZ;}for(;v&&v.z<=d;){if(v!==e.prev&&v!==e.next&&jr(i.x,i.y,a.x,a.y,o.x,o.y,v.x,v.y)&&mt(v.prev,v,v.next)>=0)return!1;v=v.nextZ;}return!0;}f(hg,"isEarHashed");function fg(e,t,n){var r=e;do{var i=r.prev,a=r.next.next;!or(i,a)&&rh(i,r,r.next,a)&&Ji(i,a)&&Ji(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),$i(r),$i(r.next),r=e=a),r=r.next;}while(r!==e);return r;}f(fg,"cureLocalIntersections");function dg(e,t,n,r,i,a){var o=e;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&bg(o,s)){var l=ih(o,s);o=Yi(o,o.next),l=Yi(l,l.next),Zi(o,t,n,r,i,a),Zi(l,t,n,r,i,a);return;}s=s.next;}o=o.next;}while(o!==e);}f(dg,"splitEarcut");function pg(e,t,n,r){var i=[],a,o,s,l,c;for(a=0,o=t.length;a<o;a++)s=t[a]*r,l=a<o-1?t[a+1]*r:e.length,c=nh(e,s,l,r,!1),c===c.next&&(c.steiner=!0),i.push(_g(c));for(i.sort(vg),a=0;a<i.length;a++)mg(i[a],n),n=Yi(n,n.next);return n;}f(pg,"eliminateHoles");function vg(e,t){return e.x-t.x;}f(vg,"compareX");function mg(e,t){if(t=gg(e,t),t){var n=ih(t,e);Yi(n,n.next);}}f(mg,"eliminateHole");function gg(e,t){var n=t,r=e.x,i=e.y,a=-1/0,o;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){var s=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(s<=r&&s>a){if(a=s,s===r){if(i===n.y)return n;if(i===n.next.y)return n.next;}o=n.x<n.next.x?n:n.next;}}n=n.next;}while(n!==t);if(!o)return null;if(r===a)return o.prev;var l=o,c=o.x,u=o.y,h=1/0,d;for(n=o.next;n!==l;)r>=n.x&&n.x>=c&&r!==n.x&&jr(i<u?r:a,i,c,u,i<u?a:r,i,n.x,n.y)&&(d=Math.abs(i-n.y)/(r-n.x),(d<h||d===h&&n.x>o.x)&&Ji(n,e)&&(o=n,h=d)),n=n.next;return o;}f(gg,"findHoleBridge");function yg(e,t,n,r){var i=e;do i.z===null&&(i.z=Js(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,xg(i);}f(yg,"indexCurve");function xg(e){var t,n,r,i,a,o,s,l,c=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,r=n,s=0,t=0;t<c&&(s++,r=r.nextZ,!!r);t++);for(l=c;s>0||l>0&&r;)s!==0&&(l===0||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r;}a.nextZ=null,c*=2;}while(o>1);return e;}f(xg,"sortLinked");function Js(e,t,n,r,i){return e=32767*(e-n)*i,t=32767*(t-r)*i,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1;}f(Js,"zOrder");function _g(e){var t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n;}f(_g,"getLeftmost");function jr(e,t,n,r,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(r-s)-(n-o)*(t-s)>=0&&(n-o)*(a-s)-(i-o)*(r-s)>=0;}f(jr,"pointInTriangle");function bg(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!wg(e,t)&&Ji(e,t)&&Ji(t,e)&&Mg(e,t);}f(bg,"isValidDiagonal");function mt(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y);}f(mt,"area");function or(e,t){return e.x===t.x&&e.y===t.y;}f(or,"equals");function rh(e,t,n,r){return or(e,n)&&or(t,r)||or(e,r)&&or(n,t)?!0:mt(e,t,n)>0!=mt(e,t,r)>0&&mt(n,r,e)>0!=mt(n,r,t)>0;}f(rh,"intersects");function wg(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&rh(n,n.next,e,t))return!0;n=n.next;}while(n!==e);return!1;}f(wg,"intersectsPolygon");function Ji(e,t){return mt(e.prev,e,e.next)<0?mt(e,t,e.next)>=0&&mt(e,e.prev,t)>=0:mt(e,t,e.prev)<0||mt(e,e.next,t)<0;}f(Ji,"locallyInside");function Mg(e,t){var n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next;while(n!==e);return r;}f(Mg,"middleInside");function ih(e,t){var n=new $s(e.i,e.x,e.y),r=new $s(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r;}f(ih,"splitPolygon");function kc(e,t,n,r){var i=new $s(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i;}f(kc,"insertNode");function $i(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ);}f($i,"removeNode");function $s(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1;}f($s,"Node");function Eg(e,t,n,r){for(var i=0,a=t,o=n-r;a<n;a+=r)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i;}f(Eg,"signedArea");var Un={area:function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return n*.5;},isClockWise:function(e){return Un.area(e)<0;},triangulateShape:function(e,t){var n=[],r=[],i=[];Wc(e),jc(n,e);var a=e.length;t.forEach(Wc);for(var o=0;o<t.length;o++)r.push(a),a+=t[o].length,jc(n,t[o]);for(var s=cg.triangulate(n,r),o=0;o<s.length;o+=3)i.push(s.slice(o,o+3));return i;}};function Wc(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop();}f(Wc,"removeDupEndPts");function jc(e,t){for(var n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y);}f(jc,"addContour");function ei(e,t){Me.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new wn(e,t)),this.mergeVertices();}f(ei,"ExtrudeGeometry");ei.prototype=Object.create(Me.prototype);ei.prototype.constructor=ei;ei.prototype.toJSON=function(){var e=Me.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return ah(t,n,e);};function wn(e,t){le.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];for(var n=this,r=[],i=[],a=0,o=e.length;a<o;a++){var s=e[a];l(s);}this.setAttribute("position",new re(r,3)),this.setAttribute("uv",new re(i,2)),this.computeVertexNormals();function l(c){var u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:100,v=t.bevelEnabled!==void 0?t.bevelEnabled:!0,y=t.bevelThickness!==void 0?t.bevelThickness:6,m=t.bevelSize!==void 0?t.bevelSize:y-2,x=t.bevelOffset!==void 0?t.bevelOffset:0,_=t.bevelSegments!==void 0?t.bevelSegments:3,w=t.extrudePath,T=t.UVGenerator!==void 0?t.UVGenerator:Tg;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),p=t.amount);var M,R=!1,S,A,I,N;w&&(M=w.getSpacedPoints(d),R=!0,v=!1,S=w.computeFrenetFrames(d,!1),A=new E(),I=new E(),N=new E()),v||(_=0,y=0,m=0,x=0);var F,z,H,B=c.extractPoints(h),U=B.shape,W=B.holes,$=!Un.isClockWise(U);if($)for(U=U.reverse(),z=0,H=W.length;z<H;z++)F=W[z],Un.isClockWise(F)&&(W[z]=F.reverse());var oe=Un.triangulateShape(U,W),Z=U;for(z=0,H=W.length;z<H;z++)F=W[z],U=U.concat(F);function K(X,te,ae){return te||console.error("THREE.ExtrudeGeometry: vec does not exist"),te.clone().multiplyScalar(ae).add(X);}f(K,"scalePt2");var ce,Be,Ue,Ne,Te,V=U.length,ze,Ee=oe.length;function Ge(X,te,ae){var D,Y,de,Ae=X.x-te.x,he=X.y-te.y,Fe=ae.x-X.x,Qe=ae.y-X.y,tt=Ae*Ae+he*he,jt=Ae*Qe-he*Fe;if(Math.abs(jt)>Number.EPSILON){var Xe=Math.sqrt(tt),Rt=Math.sqrt(Fe*Fe+Qe*Qe),_t=te.x-he/Xe,yr=te.y+Ae/Xe,gi=ae.x-Qe/Rt,ga=ae.y+Fe/Rt,zt=((gi-_t)*Qe-(ga-yr)*Fe)/(Ae*Qe-he*Fe);D=_t+Ae*zt-X.x,Y=yr+he*zt-X.y;var ya=D*D+Y*Y;if(ya<=2)return new G(D,Y);de=Math.sqrt(ya/2);}else{var xr=!1;Ae>Number.EPSILON?Fe>Number.EPSILON&&(xr=!0):Ae<-Number.EPSILON?Fe<-Number.EPSILON&&(xr=!0):Math.sign(he)===Math.sign(Qe)&&(xr=!0),xr?(D=-he,Y=Ae,de=Math.sqrt(tt)):(D=Ae,Y=he,de=Math.sqrt(tt/2));}return new G(D/de,Y/de);}f(Ge,"getBevelVec");for(var ge=[],q=0,Le=Z.length,He=Le-1,$e=q+1;q<Le;q++,He++,$e++)He===Le&&(He=0),$e===Le&&($e=0),ge[q]=Ge(Z[q],Z[He],Z[$e]);var Ut=[],et,L=ge.concat();for(z=0,H=W.length;z<H;z++){for(F=W[z],et=[],q=0,Le=F.length,He=Le-1,$e=q+1;q<Le;q++,He++,$e++)He===Le&&(He=0),$e===Le&&($e=0),et[q]=Ge(F[q],F[He],F[$e]);Ut.push(et),L=L.concat(et);}for(ce=0;ce<_;ce++){for(Ue=ce/_,Ne=y*Math.cos(Ue*Math.PI/2),Be=m*Math.sin(Ue*Math.PI/2)+x,q=0,Le=Z.length;q<Le;q++)Te=K(Z[q],ge[q],Be),ve(Te.x,Te.y,-Ne);for(z=0,H=W.length;z<H;z++)for(F=W[z],et=Ut[z],q=0,Le=F.length;q<Le;q++)Te=K(F[q],et[q],Be),ve(Te.x,Te.y,-Ne);}for(Be=m+x,q=0;q<V;q++)Te=v?K(U[q],L[q],Be):U[q],R?(I.copy(S.normals[0]).multiplyScalar(Te.x),A.copy(S.binormals[0]).multiplyScalar(Te.y),N.copy(M[0]).add(I).add(A),ve(N.x,N.y,N.z)):ve(Te.x,Te.y,0);var P;for(P=1;P<=d;P++)for(q=0;q<V;q++)Te=v?K(U[q],L[q],Be):U[q],R?(I.copy(S.normals[P]).multiplyScalar(Te.x),A.copy(S.binormals[P]).multiplyScalar(Te.y),N.copy(M[P]).add(I).add(A),ve(N.x,N.y,N.z)):ve(Te.x,Te.y,p/d*P);for(ce=_-1;ce>=0;ce--){for(Ue=ce/_,Ne=y*Math.cos(Ue*Math.PI/2),Be=m*Math.sin(Ue*Math.PI/2)+x,q=0,Le=Z.length;q<Le;q++)Te=K(Z[q],ge[q],Be),ve(Te.x,Te.y,p+Ne);for(z=0,H=W.length;z<H;z++)for(F=W[z],et=Ut[z],q=0,Le=F.length;q<Le;q++)Te=K(F[q],et[q],Be),R?ve(Te.x,Te.y+M[d-1].y,M[d-1].x+Ne):ve(Te.x,Te.y,p+Ne);}ee(),j();function ee(){var X=r.length/3;if(v){var te=0,ae=V*te;for(q=0;q<Ee;q++)ze=oe[q],fe(ze[2]+ae,ze[1]+ae,ze[0]+ae);for(te=d+_*2,ae=V*te,q=0;q<Ee;q++)ze=oe[q],fe(ze[0]+ae,ze[1]+ae,ze[2]+ae);}else{for(q=0;q<Ee;q++)ze=oe[q],fe(ze[2],ze[1],ze[0]);for(q=0;q<Ee;q++)ze=oe[q],fe(ze[0]+V*d,ze[1]+V*d,ze[2]+V*d);}n.addGroup(X,r.length/3-X,0);}f(ee,"buildLidFaces");function j(){var X=r.length/3,te=0;for(Ce(Z,te),te+=Z.length,z=0,H=W.length;z<H;z++)F=W[z],Ce(F,te),te+=F.length;n.addGroup(X,r.length/3-X,1);}f(j,"buildSideFaces");function Ce(X,te){var ae,D;for(q=X.length;--q>=0;){ae=q,D=q-1,D<0&&(D=X.length-1);var Y=0,de=d+_*2;for(Y=0;Y<de;Y++){var Ae=V*Y,he=V*(Y+1),Fe=te+ae+Ae,Qe=te+D+Ae,tt=te+D+he,jt=te+ae+he;ye(Fe,Qe,tt,jt);}}}f(Ce,"sidewalls");function ve(X,te,ae){u.push(X),u.push(te),u.push(ae);}f(ve,"v");function fe(X,te,ae){O(X),O(te),O(ae);var D=r.length/3,Y=T.generateTopUV(n,r,D-3,D-2,D-1);J(Y[0]),J(Y[1]),J(Y[2]);}f(fe,"f3");function ye(X,te,ae,D){O(X),O(te),O(D),O(te),O(ae),O(D);var Y=r.length/3,de=T.generateSideWallUV(n,r,Y-6,Y-3,Y-2,Y-1);J(de[0]),J(de[1]),J(de[3]),J(de[1]),J(de[2]),J(de[3]);}f(ye,"f4");function O(X){r.push(u[X*3+0]),r.push(u[X*3+1]),r.push(u[X*3+2]);}f(O,"addVertex");function J(X){i.push(X.x),i.push(X.y);}f(J,"addUV");}f(l,"addShape");}f(wn,"ExtrudeBufferGeometry");wn.prototype=Object.create(le.prototype);wn.prototype.constructor=wn;wn.prototype.toJSON=function(){var e=le.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return ah(t,n,e);};var Tg={generateTopUV:function(e,t,n,r,i){var a=t[n*3],o=t[n*3+1],s=t[r*3],l=t[r*3+1],c=t[i*3],u=t[i*3+1];return[new G(a,o),new G(s,l),new G(c,u)];},generateSideWallUV:function(e,t,n,r,i,a){var o=t[n*3],s=t[n*3+1],l=t[n*3+2],c=t[r*3],u=t[r*3+1],h=t[r*3+2],d=t[i*3],p=t[i*3+1],v=t[i*3+2],y=t[a*3],m=t[a*3+1],x=t[a*3+2];return Math.abs(s-u)<.01?[new G(o,1-l),new G(c,1-h),new G(d,1-v),new G(y,1-x)]:[new G(s,1-l),new G(u,1-h),new G(p,1-v),new G(m,1-x)];}};function ah(e,t,n){if(n.shapes=[],Array.isArray(e))for(var r=0,i=e.length;r<i;r++){var a=e[r];n.shapes.push(a.uuid);}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n;}f(ah,"toJSON");function Lo(e,t){Me.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new Qi(e,t)),this.mergeVertices();}f(Lo,"TextGeometry");Lo.prototype=Object.create(Me.prototype);Lo.prototype.constructor=Lo;function Qi(e,t){t=t||{};var n=t.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Me();var r=n.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),wn.call(this,r,t),this.type="TextBufferGeometry";}f(Qi,"TextBufferGeometry");Qi.prototype=Object.create(wn.prototype);Qi.prototype.constructor=Qi;function Ro(e,t,n,r,i,a,o){Me.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new ti(e,t,n,r,i,a,o)),this.mergeVertices();}f(Ro,"SphereGeometry");Ro.prototype=Object.create(Me.prototype);Ro.prototype.constructor=Ro;function ti(e,t,n,r,i,a,o){le.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=r!==void 0?r:0,i=i!==void 0?i:Math.PI*2,a=a!==void 0?a:0,o=o!==void 0?o:Math.PI;var s=Math.min(a+o,Math.PI),l,c,u=0,h=[],d=new E(),p=new E(),v=[],y=[],m=[],x=[];for(c=0;c<=n;c++){var _=[],w=c/n,T=0;for(c==0&&a==0?T=.5/t:c==n&&s==Math.PI&&(T=-.5/t),l=0;l<=t;l++){var M=l/t;d.x=-e*Math.cos(r+M*i)*Math.sin(a+w*o),d.y=e*Math.cos(a+w*o),d.z=e*Math.sin(r+M*i)*Math.sin(a+w*o),y.push(d.x,d.y,d.z),p.copy(d).normalize(),m.push(p.x,p.y,p.z),x.push(M+T,1-w),_.push(u++);}h.push(_);}for(c=0;c<n;c++)for(l=0;l<t;l++){var R=h[c][l+1],S=h[c][l],A=h[c+1][l],I=h[c+1][l+1];(c!==0||a>0)&&v.push(R,S,I),(c!==n-1||s<Math.PI)&&v.push(S,A,I);}this.setIndex(v),this.setAttribute("position",new re(y,3)),this.setAttribute("normal",new re(m,3)),this.setAttribute("uv",new re(x,2));}f(ti,"SphereBufferGeometry");ti.prototype=Object.create(le.prototype);ti.prototype.constructor=ti;function Po(e,t,n,r,i,a){Me.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new Ki(e,t,n,r,i,a)),this.mergeVertices();}f(Po,"RingGeometry");Po.prototype=Object.create(Me.prototype);Po.prototype.constructor=Po;function Ki(e,t,n,r,i,a){le.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},e=e||.5,t=t||1,i=i!==void 0?i:0,a=a!==void 0?a:Math.PI*2,n=n!==void 0?Math.max(3,n):8,r=r!==void 0?Math.max(1,r):1;var o=[],s=[],l=[],c=[],u,h=e,d=(t-e)/r,p=new E(),v=new G(),y,m;for(y=0;y<=r;y++){for(m=0;m<=n;m++)u=i+m/n*a,p.x=h*Math.cos(u),p.y=h*Math.sin(u),s.push(p.x,p.y,p.z),l.push(0,0,1),v.x=(p.x/t+1)/2,v.y=(p.y/t+1)/2,c.push(v.x,v.y);h+=d;}for(y=0;y<r;y++){var x=y*(n+1);for(m=0;m<n;m++){u=m+x;var _=u,w=u+n+1,T=u+n+2,M=u+1;o.push(_,w,M),o.push(w,T,M);}}this.setIndex(o),this.setAttribute("position",new re(s,3)),this.setAttribute("normal",new re(l,3)),this.setAttribute("uv",new re(c,2));}f(Ki,"RingBufferGeometry");Ki.prototype=Object.create(le.prototype);Ki.prototype.constructor=Ki;function Co(e,t,n,r){Me.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},this.fromBufferGeometry(new ea(e,t,n,r)),this.mergeVertices();}f(Co,"LatheGeometry");Co.prototype=Object.create(Me.prototype);Co.prototype.constructor=Co;function ea(e,t,n,r){le.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t)||12,n=n||0,r=r||Math.PI*2,r=Pe.clamp(r,0,Math.PI*2);var i=[],a=[],o=[],s,l=1/t,c=new E(),u=new G(),h,d;for(h=0;h<=t;h++){var p=n+h*l*r,v=Math.sin(p),y=Math.cos(p);for(d=0;d<=e.length-1;d++)c.x=e[d].x*v,c.y=e[d].y,c.z=e[d].x*y,a.push(c.x,c.y,c.z),u.x=h/t,u.y=d/(e.length-1),o.push(u.x,u.y);}for(h=0;h<t;h++)for(d=0;d<e.length-1;d++){s=d+h*e.length;var m=s,x=s+e.length,_=s+e.length+1,w=s+1;i.push(m,x,w),i.push(x,_,w);}if(this.setIndex(i),this.setAttribute("position",new re(a,3)),this.setAttribute("uv",new re(o,2)),this.computeVertexNormals(),r===Math.PI*2){var T=this.attributes.normal.array,M=new E(),R=new E(),S=new E();for(s=t*e.length*3,h=0,d=0;h<e.length;h++,d+=3)M.x=T[d+0],M.y=T[d+1],M.z=T[d+2],R.x=T[s+d+0],R.y=T[s+d+1],R.z=T[s+d+2],S.addVectors(M,R).normalize(),T[d+0]=T[s+d+0]=S.x,T[d+1]=T[s+d+1]=S.y,T[d+2]=T[s+d+2]=S.z;}}f(ea,"LatheBufferGeometry");ea.prototype=Object.create(le.prototype);ea.prototype.constructor=ea;function ni(e,t){Me.call(this),this.type="ShapeGeometry",typeof t=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ri(e,t)),this.mergeVertices();}f(ni,"ShapeGeometry");ni.prototype=Object.create(Me.prototype);ni.prototype.constructor=ni;ni.prototype.toJSON=function(){var e=Me.prototype.toJSON.call(this),t=this.parameters.shapes;return oh(t,e);};function ri(e,t){le.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var n=[],r=[],i=[],a=[],o=0,s=0;if(Array.isArray(e)===!1)c(e);else for(var l=0;l<e.length;l++)c(e[l]),this.addGroup(o,s,l),o+=s,s=0;this.setIndex(n),this.setAttribute("position",new re(r,3)),this.setAttribute("normal",new re(i,3)),this.setAttribute("uv",new re(a,2));function c(u){var h,d,p,v=r.length/3,y=u.extractPoints(t),m=y.shape,x=y.holes;for(Un.isClockWise(m)===!1&&(m=m.reverse()),h=0,d=x.length;h<d;h++)p=x[h],Un.isClockWise(p)===!0&&(x[h]=p.reverse());var _=Un.triangulateShape(m,x);for(h=0,d=x.length;h<d;h++)p=x[h],m=m.concat(p);for(h=0,d=m.length;h<d;h++){var w=m[h];r.push(w.x,w.y,0),i.push(0,0,1),a.push(w.x,w.y);}for(h=0,d=_.length;h<d;h++){var T=_[h],M=T[0]+v,R=T[1]+v,S=T[2]+v;n.push(M,R,S),s+=3;}}f(c,"addShape");}f(ri,"ShapeBufferGeometry");ri.prototype=Object.create(le.prototype);ri.prototype.constructor=ri;ri.prototype.toJSON=function(){var e=le.prototype.toJSON.call(this),t=this.parameters.shapes;return oh(t,e);};function oh(e,t){if(t.shapes=[],Array.isArray(e))for(var n=0,r=e.length;n<r;n++){var i=e[n];t.shapes.push(i.uuid);}else t.shapes.push(e.uuid);return t;}f(oh,"toJSON$1");function Do(e,t){le.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1;var n=[],r=Math.cos(Pe.DEG2RAD*t),i=[0,0],a={},o,s,l,c=["a","b","c"],u;e.isBufferGeometry?(u=new Me(),u.fromBufferGeometry(e)):u=e.clone(),u.mergeVertices(),u.computeFaceNormals();for(var h=u.vertices,d=u.faces,p=0,v=d.length;p<v;p++)for(var y=d[p],m=0;m<3;m++)o=y[c[m]],s=y[c[(m+1)%3]],i[0]=Math.min(o,s),i[1]=Math.max(o,s),l=i[0]+","+i[1],a[l]===void 0?a[l]={index1:i[0],index2:i[1],face1:p,face2:void 0}:a[l].face2=p;for(l in a){var x=a[l];if(x.face2===void 0||d[x.face1].normal.dot(d[x.face2].normal)<=r){var _=h[x.index1];n.push(_.x,_.y,_.z),_=h[x.index2],n.push(_.x,_.y,_.z);}}this.setAttribute("position",new re(n,3));}f(Do,"EdgesGeometry");Do.prototype=Object.create(le.prototype);Do.prototype.constructor=Do;function ii(e,t,n,r,i,a,o,s){Me.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new kn(e,t,n,r,i,a,o,s)),this.mergeVertices();}f(ii,"CylinderGeometry");ii.prototype=Object.create(Me.prototype);ii.prototype.constructor=ii;function kn(e,t,n,r,i,a,o,s){le.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var l=this;e=e!==void 0?e:1,t=t!==void 0?t:1,n=n||1,r=Math.floor(r)||8,i=Math.floor(i)||1,a=a!==void 0?a:!1,o=o!==void 0?o:0,s=s!==void 0?s:Math.PI*2;var c=[],u=[],h=[],d=[],p=0,v=[],y=n/2,m=0;x(),a===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(c),this.setAttribute("position",new re(u,3)),this.setAttribute("normal",new re(h,3)),this.setAttribute("uv",new re(d,2));function x(){var w,T,M=new E(),R=new E(),S=0,A=(t-e)/n;for(T=0;T<=i;T++){var I=[],N=T/i,F=N*(t-e)+e;for(w=0;w<=r;w++){var z=w/r,H=z*s+o,B=Math.sin(H),U=Math.cos(H);R.x=F*B,R.y=-N*n+y,R.z=F*U,u.push(R.x,R.y,R.z),M.set(B,A,U).normalize(),h.push(M.x,M.y,M.z),d.push(z,1-N),I.push(p++);}v.push(I);}for(w=0;w<r;w++)for(T=0;T<i;T++){var W=v[T][w],$=v[T+1][w],oe=v[T+1][w+1],Z=v[T][w+1];c.push(W,$,Z),c.push($,oe,Z),S+=6;}l.addGroup(m,S,0),m+=S;}f(x,"generateTorso");function _(w){var T,M,R,S=new G(),A=new E(),I=0,N=w===!0?e:t,F=w===!0?1:-1;for(M=p,T=1;T<=r;T++)u.push(0,y*F,0),h.push(0,F,0),d.push(.5,.5),p++;for(R=p,T=0;T<=r;T++){var z=T/r,H=z*s+o,B=Math.cos(H),U=Math.sin(H);A.x=N*U,A.y=y*F,A.z=N*B,u.push(A.x,A.y,A.z),h.push(0,F,0),S.x=B*.5+.5,S.y=U*.5*F+.5,d.push(S.x,S.y),p++;}for(T=0;T<r;T++){var W=M+T,$=R+T;w===!0?c.push($,$+1,W):c.push($+1,$,W),I+=3;}l.addGroup(m,I,w===!0?1:2),m+=I;}f(_,"generateCap");}f(kn,"CylinderBufferGeometry");kn.prototype=Object.create(le.prototype);kn.prototype.constructor=kn;function Oo(e,t,n,r,i,a,o){ii.call(this,0,e,t,n,r,i,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o};}f(Oo,"ConeGeometry");Oo.prototype=Object.create(ii.prototype);Oo.prototype.constructor=Oo;function Io(e,t,n,r,i,a,o){kn.call(this,0,e,t,n,r,i,a,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o};}f(Io,"ConeBufferGeometry");Io.prototype=Object.create(kn.prototype);Io.prototype.constructor=Io;function No(e,t,n,r){Me.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new ta(e,t,n,r)),this.mergeVertices();}f(No,"CircleGeometry");No.prototype=Object.create(Me.prototype);No.prototype.constructor=No;function ta(e,t,n,r){le.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||1,t=t!==void 0?Math.max(3,t):8,n=n!==void 0?n:0,r=r!==void 0?r:Math.PI*2;var i=[],a=[],o=[],s=[],l,c,u=new E(),h=new G();for(a.push(0,0,0),o.push(0,0,1),s.push(.5,.5),c=0,l=3;c<=t;c++,l+=3){var d=n+c/t*r;u.x=e*Math.cos(d),u.y=e*Math.sin(d),a.push(u.x,u.y,u.z),o.push(0,0,1),h.x=(a[l]/e+1)/2,h.y=(a[l+1]/e+1)/2,s.push(h.x,h.y);}for(l=1;l<=t;l++)i.push(l,l+1,0);this.setIndex(i),this.setAttribute("position",new re(a,3)),this.setAttribute("normal",new re(o,3)),this.setAttribute("uv",new re(s,2));}f(ta,"CircleBufferGeometry");ta.prototype=Object.create(le.prototype);ta.prototype.constructor=ta;var wt=Object.freeze({__proto__:null,WireframeGeometry:yo,ParametricGeometry:xo,ParametricBufferGeometry:Vi,TetrahedronGeometry:bo,TetrahedronBufferGeometry:ki,OctahedronGeometry:wo,OctahedronBufferGeometry:Qr,IcosahedronGeometry:Mo,IcosahedronBufferGeometry:Wi,DodecahedronGeometry:Eo,DodecahedronBufferGeometry:ji,PolyhedronGeometry:_o,PolyhedronBufferGeometry:Ft,TubeGeometry:To,TubeBufferGeometry:Kr,TorusKnotGeometry:So,TorusKnotBufferGeometry:qi,TorusGeometry:Ao,TorusBufferGeometry:Xi,TextGeometry:Lo,TextBufferGeometry:Qi,SphereGeometry:Ro,SphereBufferGeometry:ti,RingGeometry:Po,RingBufferGeometry:Ki,PlaneGeometry:uo,PlaneBufferGeometry:$r,LatheGeometry:Co,LatheBufferGeometry:ea,ShapeGeometry:ni,ShapeBufferGeometry:ri,ExtrudeGeometry:ei,ExtrudeBufferGeometry:wn,EdgesGeometry:Do,ConeGeometry:Oo,ConeBufferGeometry:Io,CylinderGeometry:ii,CylinderBufferGeometry:kn,CircleGeometry:No,CircleBufferGeometry:ta,BoxGeometry:no,BoxBufferGeometry:sr});function ai(e){be.call(this),this.type="ShadowMaterial",this.color=new se(0),this.transparent=!0,this.setValues(e);}f(ai,"ShadowMaterial");ai.prototype=Object.create(be.prototype);ai.prototype.constructor=ai;ai.prototype.isShadowMaterial=!0;ai.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this;};function Wn(e){Lt.call(this,e),this.type="RawShaderMaterial";}f(Wn,"RawShaderMaterial");Wn.prototype=Object.create(Lt.prototype);Wn.prototype.constructor=Wn;Wn.prototype.isRawShaderMaterial=!0;function Mn(e){be.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new se(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e);}f(Mn,"MeshStandardMaterial");Mn.prototype=Object.create(be.prototype);Mn.prototype.constructor=Mn;Mn.prototype.isMeshStandardMaterial=!0;Mn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this;};function oi(e){Mn.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearcoat=0,this.clearcoatRoughness=0,this.sheen=null,this.clearcoatNormalScale=new G(1,1),this.clearcoatNormalMap=null,this.transparency=0,this.setValues(e);}f(oi,"MeshPhysicalMaterial");oi.prototype=Object.create(Mn.prototype);oi.prototype.constructor=oi;oi.prototype.isMeshPhysicalMaterial=!0;oi.prototype.copy=function(e){return Mn.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.reflectivity=e.reflectivity,this.clearcoat=e.clearcoat,this.clearcoatRoughness=e.clearcoatRoughness,e.sheen?this.sheen=(this.sheen||new se()).copy(e.sheen):this.sheen=null,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.transparency=e.transparency,this;};function mr(e){be.call(this),this.type="MeshPhongMaterial",this.color=new se(16777215),this.specular=new se(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=jo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e);}f(mr,"MeshPhongMaterial");mr.prototype=Object.create(be.prototype);mr.prototype.constructor=mr;mr.prototype.isMeshPhongMaterial=!0;mr.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this;};function si(e){be.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new se(16777215),this.specular=new se(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e);}f(si,"MeshToonMaterial");si.prototype=Object.create(be.prototype);si.prototype.constructor=si;si.prototype.isMeshToonMaterial=!0;si.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this;};function li(e){be.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e);}f(li,"MeshNormalMaterial");li.prototype=Object.create(be.prototype);li.prototype.constructor=li;li.prototype.isMeshNormalMaterial=!0;li.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this;};function ci(e){be.call(this),this.type="MeshLambertMaterial",this.color=new se(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=jo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e);}f(ci,"MeshLambertMaterial");ci.prototype=Object.create(be.prototype);ci.prototype.constructor=ci;ci.prototype.isMeshLambertMaterial=!0;ci.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this;};function ui(e){be.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new se(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e);}f(ui,"MeshMatcapMaterial");ui.prototype=Object.create(be.prototype);ui.prototype.constructor=ui;ui.prototype.isMeshMatcapMaterial=!0;ui.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this;};function hi(e){ot.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e);}f(hi,"LineDashedMaterial");hi.prototype=Object.create(ot.prototype);hi.prototype.constructor=hi;hi.prototype.isLineDashedMaterial=!0;hi.prototype.copy=function(e){return ot.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this;};var Sg=Object.freeze({__proto__:null,ShadowMaterial:ai,SpriteMaterial:pr,RawShaderMaterial:Wn,ShaderMaterial:Lt,PointsMaterial:vr,MeshPhysicalMaterial:oi,MeshStandardMaterial:Mn,MeshPhongMaterial:mr,MeshToonMaterial:si,MeshNormalMaterial:li,MeshLambertMaterial:ci,MeshDepthMaterial:fr,MeshDistanceMaterial:dr,MeshBasicMaterial:$t,MeshMatcapMaterial:ui,LineDashedMaterial:hi,LineBasicMaterial:ot,Material:be}),ut={arraySlice:function(e,t,n){return ut.isTypedArray(e)?new e.constructor(e.subarray(t,n!==void 0?n:e.length)):e.slice(t,n);},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e);},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView);},getKeyframeOrder:function(e){function t(a,o){return e[a]-e[o];}f(t,"compareTime");for(var n=e.length,r=new Array(n),i=0;i!==n;++i)r[i]=i;return r.sort(t),r;},sortedArray:function(e,t,n){for(var r=e.length,i=new e.constructor(r),a=0,o=0;o!==r;++a)for(var s=n[a]*t,l=0;l!==t;++l)i[o++]=e[s+l];return i;},flattenJSON:function(e,t,n,r){for(var i=1,a=e[0];a!==void 0&&a[r]===void 0;)a=e[i++];if(a!==void 0){var o=a[r];if(o!==void 0)if(Array.isArray(o))do o=a[r],o!==void 0&&(t.push(a.time),n.push.apply(n,o)),a=e[i++];while(a!==void 0);else if(o.toArray!==void 0)do o=a[r],o!==void 0&&(t.push(a.time),o.toArray(n,n.length)),a=e[i++];while(a!==void 0);else do o=a[r],o!==void 0&&(t.push(a.time),n.push(o)),a=e[i++];while(a!==void 0);}},subclip:function(e,t,n,r,i){i=i||30;var a=e.clone();a.name=t;for(var o=[],s=0;s<a.tracks.length;++s){for(var l=a.tracks[s],c=l.getValueSize(),u=[],h=[],d=0;d<l.times.length;++d){var p=l.times[d]*i;if(!(p<n||p>=r)){u.push(l.times[d]);for(var v=0;v<c;++v)h.push(l.values[d*c+v]);}}u.length!==0&&(l.times=ut.convertArray(u,l.times.constructor),l.values=ut.convertArray(h,l.values.constructor),o.push(l));}a.tracks=o;for(var y=1/0,s=0;s<a.tracks.length;++s)y>a.tracks[s].times[0]&&(y=a.tracks[s].times[0]);for(var s=0;s<a.tracks.length;++s)a.tracks[s].shift(-1*y);return a.resetDuration(),a;}};function Gt(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n;}f(Gt,"Interpolant");Object.assign(Gt.prototype,{evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{var a;n:{r:if(!(e<r)){for(var o=n+2;;){if(r===void 0){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i);}if(n===o)break;if(i=r,r=t[++n],e<r)break t;}a=t.length;break n;}if(!(e>=i)){var s=t[1];e<s&&(n=2,i=s);for(var o=n-2;;){if(i===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===o)break;if(r=i,i=t[--n-1],e>=i)break t;}a=n,n=0;break n;}break e;}for(;n<a;){var l=n+a>>>1;e<t[l]?a=l:n=l+1;}if(r=t[n],i=t[n-1],i===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(r===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e);}this._cachedIndex=n,this.intervalChanged_(n,i,r);}return this.interpolate_(n,i,e,r);},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_;},copySampleValue_:function(e){for(var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r,a=0;a!==r;++a)t[a]=n[i+a];return t;},interpolate_:function(){throw new Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(Gt.prototype,{beforeStart_:Gt.prototype.copySampleValue_,afterEnd_:Gt.prototype.copySampleValue_});function Qs(e,t,n,r){Gt.call(this,e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0;}f(Qs,"CubicInterpolant");Qs.prototype=Object.assign(Object.create(Gt.prototype),{constructor:Qs,DefaultSettings_:{endingStart:Yr,endingEnd:Yr},intervalChanged_:function(e,t,n){var r=this.parameterPositions,i=e-2,a=e+1,o=r[i],s=r[a];if(o===void 0)switch(this.getSettings_().endingStart){case Hr:i=e,o=2*t-n;break;case lo:i=r.length-2,o=t+r[i]-r[i+1];break;default:i=e,o=n;}if(s===void 0)switch(this.getSettings_().endingEnd){case Hr:a=e,s=2*n-t;break;case lo:a=1,s=n+r[1]-r[0];break;default:a=e-1,s=t;}var l=(n-t)*.5,c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-n),this._offsetPrev=i*c,this._offsetNext=a*c;},interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),v=p*p,y=v*p,m=-h*y+2*h*v-h*p,x=(1+h)*y+(-1.5-2*h)*v+(-.5+h)*p+1,_=(-1-d)*y+(1.5+d)*v+.5*p,w=d*y-d*v,T=0;T!==o;++T)i[T]=m*a[c+T]+x*a[l+T]+_*a[s+T]+w*a[u+T];return i;}});function Fo(e,t,n,r){Gt.call(this,e,t,n,r);}f(Fo,"LinearInterpolant");Fo.prototype=Object.assign(Object.create(Gt.prototype),{constructor:Fo,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=(n-t)/(r-t),u=1-c,h=0;h!==o;++h)i[h]=a[l+h]*u+a[s+h]*c;return i;}});function Ks(e,t,n,r){Gt.call(this,e,t,n,r);}f(Ks,"DiscreteInterpolant");Ks.prototype=Object.assign(Object.create(Gt.prototype),{constructor:Ks,interpolate_:function(e){return this.copySampleValue_(e-1);}});function xt(e,t,n,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ut.convertArray(t,this.TimeBufferType),this.values=ut.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation);}f(xt,"KeyframeTrack");Object.assign(xt,{toJSON:function(e){var t=e.constructor,n;if(t.toJSON!==void 0)n=t.toJSON(e);else{n={name:e.name,times:ut.convertArray(e.times,Array),values:ut.convertArray(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r);}return n.type=e.ValueTypeName,n;}});Object.assign(xt.prototype,{constructor:xt,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:to,InterpolantFactoryMethodDiscrete:function(e){return new Ks(this.times,this.values,this.getValueSize(),e);},InterpolantFactoryMethodLinear:function(e){return new Fo(this.times,this.values,this.getValueSize(),e);},InterpolantFactoryMethodSmooth:function(e){return new Qs(this.times,this.values,this.getValueSize(),e);},setInterpolation:function(e){var t;switch(e){case so:t=this.InterpolantFactoryMethodDiscrete;break;case to:t=this.InterpolantFactoryMethodLinear;break;case es:t=this.InterpolantFactoryMethodSmooth;break;}if(t===void 0){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this;}return this.createInterpolant=t,this;},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return so;case this.InterpolantFactoryMethodLinear:return to;case this.InterpolantFactoryMethodSmooth:return es;}},getValueSize:function(){return this.values.length/this.times.length;},shift:function(e){if(e!==0)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]+=e;return this;},scale:function(e){if(e!==1)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]*=e;return this;},trim:function(e,t){for(var n=this.times,r=n.length,i=0,a=r-1;i!==r&&n[i]<e;)++i;for(;a!==-1&&n[a]>t;)--a;if(++a,i!==0||a!==r){i>=a&&(a=Math.max(a,1),i=a-1);var o=this.getValueSize();this.times=ut.arraySlice(n,i,a),this.values=ut.arraySlice(this.values,i*o,a*o);}return this;},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var n=this.times,r=this.values,i=n.length;i===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var a=null,o=0;o!==i;o++){var s=n[o];if(typeof s=="number"&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,s),e=!1;break;}if(a!==null&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,s,a),e=!1;break;}a=s;}if(r!==void 0&&ut.isTypedArray(r))for(var o=0,l=r.length;o!==l;++o){var c=r[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break;}}return e;},optimize:function(){for(var e=this.times,t=this.values,n=this.getValueSize(),r=this.getInterpolation()===es,i=1,a=e.length-1,o=1;o<a;++o){var s=!1,l=e[o],c=e[o+1];if(l!==c&&(o!==1||l!==l[0]))if(r)s=!0;else for(var u=o*n,h=u-n,d=u+n,p=0;p!==n;++p){var v=t[u+p];if(v!==t[h+p]||v!==t[d+p]){s=!0;break;}}if(s){if(o!==i){e[i]=e[o];for(var y=o*n,m=i*n,p=0;p!==n;++p)t[m+p]=t[y+p];}++i;}}if(a>0){e[i]=e[a];for(var y=a*n,m=i*n,p=0;p!==n;++p)t[m+p]=t[y+p];++i;}return i!==e.length&&(this.times=ut.arraySlice(e,0,i),this.values=ut.arraySlice(t,0,i*n)),this;},clone:function(){var e=ut.arraySlice(this.times,0),t=ut.arraySlice(this.values,0),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r;}});function el(e,t,n){xt.call(this,e,t,n);}f(el,"BooleanKeyframeTrack");el.prototype=Object.assign(Object.create(xt.prototype),{constructor:el,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:so,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function tl(e,t,n,r){xt.call(this,e,t,n,r);}f(tl,"ColorKeyframeTrack");tl.prototype=Object.assign(Object.create(xt.prototype),{constructor:tl,ValueTypeName:"color"});function na(e,t,n,r){xt.call(this,e,t,n,r);}f(na,"NumberKeyframeTrack");na.prototype=Object.assign(Object.create(xt.prototype),{constructor:na,ValueTypeName:"number"});function nl(e,t,n,r){Gt.call(this,e,t,n,r);}f(nl,"QuaternionLinearInterpolant");nl.prototype=Object.assign(Object.create(Gt.prototype),{constructor:nl,interpolate_:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=(n-t)/(r-t),c=s+o;s!==c;s+=4)gt.slerpFlat(i,0,a,s-o,a,s,l);return i;}});function Bo(e,t,n,r){xt.call(this,e,t,n,r);}f(Bo,"QuaternionKeyframeTrack");Bo.prototype=Object.assign(Object.create(xt.prototype),{constructor:Bo,ValueTypeName:"quaternion",DefaultInterpolation:to,InterpolantFactoryMethodLinear:function(e){return new nl(this.times,this.values,this.getValueSize(),e);},InterpolantFactoryMethodSmooth:void 0});function rl(e,t,n,r){xt.call(this,e,t,n,r);}f(rl,"StringKeyframeTrack");rl.prototype=Object.assign(Object.create(xt.prototype),{constructor:rl,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:so,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function ra(e,t,n,r){xt.call(this,e,t,n,r);}f(ra,"VectorKeyframeTrack");ra.prototype=Object.assign(Object.create(xt.prototype),{constructor:ra,ValueTypeName:"vector"});function Jt(e,t,n){this.name=e,this.tracks=n,this.duration=t!==void 0?t:-1,this.uuid=Pe.generateUUID(),this.duration<0&&this.resetDuration();}f(Jt,"AnimationClip");function Ag(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return na;case"vector":case"vector2":case"vector3":case"vector4":return ra;case"color":return tl;case"quaternion":return Bo;case"bool":case"boolean":return el;case"string":return rl;}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e);}f(Ag,"getTrackTypeForValueTypeName");function Lg(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t=Ag(e.type);if(e.times===void 0){var n=[],r=[];ut.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r;}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation);}f(Lg,"parseKeyframeTrack");Object.assign(Jt,{parse:function(e){for(var t=[],n=e.tracks,r=1/(e.fps||1),i=0,a=n.length;i!==a;++i)t.push(Lg(n[i]).scale(r));return new Jt(e.name,e.duration,t);},toJSON:function(e){for(var t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid},i=0,a=n.length;i!==a;++i)t.push(xt.toJSON(n[i]));return r;},CreateFromMorphTargetSequence:function(e,t,n,r){for(var i=t.length,a=[],o=0;o<i;o++){var s=[],l=[];s.push((o+i-1)%i,o,(o+1)%i),l.push(0,1,0);var c=ut.getKeyframeOrder(s);s=ut.sortedArray(s,1,c),l=ut.sortedArray(l,1,c),!r&&s[0]===0&&(s.push(i),l.push(l[0])),a.push(new na(".morphTargetInfluences["+t[o].name+"]",s,l).scale(1/n));}return new Jt(e,-1,a);},findByName:function(e,t){var n=e;if(!Array.isArray(e)){var r=e;n=r.geometry&&r.geometry.animations||r.animations;}for(var i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null;},CreateClipsFromMorphTargetSequences:function(e,t,n){for(var r={},i=/^([\w-]*?)([\d]+)$/,a=0,o=e.length;a<o;a++){var s=e[a],l=s.name.match(i);if(l&&l.length>1){var c=l[1],u=r[c];u||(r[c]=u=[]),u.push(s);}}var h=[];for(var c in r)h.push(Jt.CreateFromMorphTargetSequence(c,r[c],t,n));return h;},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=f(function(w,T,M,R,S){if(M.length!==0){var A=[],I=[];ut.flattenJSON(M,A,I,R),A.length!==0&&S.push(new w(T,A,I));}},"addNonemptyTrack"),r=[],i=e.name||"default",a=e.length||-1,o=e.fps||30,s=e.hierarchy||[],l=0;l<s.length;l++){var c=s[l].keys;if(!(!c||c.length===0))if(c[0].morphTargets){for(var u={},h=0;h<c.length;h++)if(c[h].morphTargets)for(var d=0;d<c[h].morphTargets.length;d++)u[c[h].morphTargets[d]]=-1;for(var p in u){for(var v=[],y=[],d=0;d!==c[h].morphTargets.length;++d){var m=c[h];v.push(m.time),y.push(m.morphTarget===p?1:0);}r.push(new na(".morphTargetInfluence["+p+"]",v,y));}a=u.length*(o||1);}else{var x=".bones["+t[l].name+"]";n(ra,x+".position",c,"pos",r),n(Bo,x+".quaternion",c,"rot",r),n(ra,x+".scale",c,"scl",r);}}if(r.length===0)return null;var _=new Jt(i,a,r);return _;}});Object.assign(Jt.prototype,{resetDuration:function(){for(var e=this.tracks,t=0,n=0,r=e.length;n!==r;++n){var i=this.tracks[n];t=Math.max(t,i.times[i.times.length-1]);}return this.duration=t,this;},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this;},validate:function(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e;},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this;},clone:function(){for(var e=[],t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new Jt(this.name,this.duration,e);}});var fi={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t);},get:function(e){if(this.enabled!==!1)return this.files[e];},remove:function(e){delete this.files[e];},clear:function(){this.files={};}};function sh(e,t,n){var r=this,i=!1,a=0,o=0,s=void 0,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(c){o++,i===!1&&r.onStart!==void 0&&r.onStart(c,a,o),i=!0;},this.itemEnd=function(c){a++,r.onProgress!==void 0&&r.onProgress(c,a,o),a===o&&(i=!1,r.onLoad!==void 0&&r.onLoad());},this.itemError=function(c){r.onError!==void 0&&r.onError(c);},this.resolveURL=function(c){return s?s(c):c;},this.setURLModifier=function(c){return s=c,this;},this.addHandler=function(c,u){return l.push(c,u),this;},this.removeHandler=function(c){var u=l.indexOf(c);return u!==-1&&l.splice(u,2),this;},this.getHandler=function(c){for(var u=0,h=l.length;u<h;u+=2){var d=l[u],p=l[u+1];if(d.global&&(d.lastIndex=0),d.test(c))return p;}return null;};}f(sh,"LoadingManager");var Rg=new sh();function je(e){this.manager=e!==void 0?e:Rg,this.crossOrigin="anonymous",this.path="",this.resourcePath="";}f(je,"Loader");Object.assign(je.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this;},setPath:function(e){return this.path=e,this;},setResourcePath:function(e){return this.resourcePath=e,this;}});var Yt={};function ln(e){je.call(this,e);}f(ln,"FileLoader");ln.prototype=Object.assign(Object.create(je.prototype),{constructor:ln,load:function(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=fi.get(e);if(a!==void 0)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e);},0),a;if(Yt[e]!==void 0){Yt[e].push({onLoad:t,onProgress:n,onError:r});return;}var o=/^data:(.*?)(;base64)?,(.*)$/,s=e.match(o);if(s){var l=s[1],c=!!s[2],u=s[3];u=decodeURIComponent(u),c&&(u=atob(u));try{var h,d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":for(var p=new Uint8Array(u.length),v=0;v<u.length;v++)p[v]=u.charCodeAt(v);d==="blob"?h=new Blob([p.buffer],{type:l}):h=p.buffer;break;case"document":var y=new DOMParser();h=y.parseFromString(u,l);break;case"json":h=JSON.parse(u);break;default:h=u;break;}setTimeout(function(){t&&t(h),i.manager.itemEnd(e);},0);}catch(_){setTimeout(function(){r&&r(_),i.manager.itemError(e),i.manager.itemEnd(e);},0);}}else{Yt[e]=[],Yt[e].push({onLoad:t,onProgress:n,onError:r});var m=new XMLHttpRequest();m.open("GET",e,!0),m.addEventListener("load",function(_){var w=this.response,T=Yt[e];if(delete Yt[e],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),fi.add(e,w);for(var M=0,R=T.length;M<R;M++){var S=T[M];S.onLoad&&S.onLoad(w);}i.manager.itemEnd(e);}else{for(var M=0,R=T.length;M<R;M++){var S=T[M];S.onError&&S.onError(_);}i.manager.itemError(e),i.manager.itemEnd(e);}},!1),m.addEventListener("progress",function(_){for(var w=Yt[e],T=0,M=w.length;T<M;T++){var R=w[T];R.onProgress&&R.onProgress(_);}},!1),m.addEventListener("error",function(_){var w=Yt[e];delete Yt[e];for(var T=0,M=w.length;T<M;T++){var R=w[T];R.onError&&R.onError(_);}i.manager.itemError(e),i.manager.itemEnd(e);},!1),m.addEventListener("abort",function(_){var w=Yt[e];delete Yt[e];for(var T=0,M=w.length;T<M;T++){var R=w[T];R.onError&&R.onError(_);}i.manager.itemError(e),i.manager.itemEnd(e);},!1),this.responseType!==void 0&&(m.responseType=this.responseType),this.withCredentials!==void 0&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(var x in this.requestHeader)m.setRequestHeader(x,this.requestHeader[x]);m.send(null);}return i.manager.itemStart(e),m;},setResponseType:function(e){return this.responseType=e,this;},setWithCredentials:function(e){return this.withCredentials=e,this;},setMimeType:function(e){return this.mimeType=e,this;},setRequestHeader:function(e){return this.requestHeader=e,this;}});function qc(e){je.call(this,e);}f(qc,"AnimationLoader");qc.prototype=Object.assign(Object.create(je.prototype),{constructor:qc,load:function(e,t,n,r){var i=this,a=new ln(i.manager);a.setPath(i.path),a.load(e,function(o){t(i.parse(JSON.parse(o)));},n,r);},parse:function(e){for(var t=[],n=0;n<e.length;n++){var r=Jt.parse(e[n]);t.push(r);}return t;}});function Xc(e){je.call(this,e);}f(Xc,"CompressedTextureLoader");Xc.prototype=Object.assign(Object.create(je.prototype),{constructor:Xc,load:function(e,t,n,r){var i=this,a=[],o=new Hi();o.image=a;var s=new ln(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer");function l(d){s.load(e[d],function(p){var v=i.parse(p,!0);a[d]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},c+=1,c===6&&(v.mipmapCount===1&&(o.minFilter=dt),o.format=v.format,o.needsUpdate=!0,t&&t(o));},n,r);}if(f(l,"loadTexture"),Array.isArray(e))for(var c=0,u=0,h=e.length;u<h;++u)l(u);else s.load(e,function(d){var p=i.parse(d,!0);if(p.isCubemap)for(var v=p.mipmaps.length/p.mipmapCount,y=0;y<v;y++){a[y]={mipmaps:[]};for(var m=0;m<p.mipmapCount;m++)a[y].mipmaps.push(p.mipmaps[y*p.mipmapCount+m]),a[y].format=p.format,a[y].width=p.width,a[y].height=p.height;}else o.image.width=p.width,o.image.height=p.height,o.mipmaps=p.mipmaps;p.mipmapCount===1&&(o.minFilter=dt),o.format=p.format,o.needsUpdate=!0,t&&t(o);},n,r);return o;}});function Yc(e){je.call(this,e);}f(Yc,"DataTextureLoader");Yc.prototype=Object.assign(Object.create(je.prototype),{constructor:Yc,load:function(e,t,n,r){var i=this,a=new Jr(),o=new ln(this.manager);return o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(e,function(s){var l=i.parse(s);!l||(l.image!==void 0?a.image=l.image:l.data!==void 0&&(a.image.width=l.width,a.image.height=l.height,a.image.data=l.data),a.wrapS=l.wrapS!==void 0?l.wrapS:At,a.wrapT=l.wrapT!==void 0?l.wrapT:At,a.magFilter=l.magFilter!==void 0?l.magFilter:dt,a.minFilter=l.minFilter!==void 0?l.minFilter:dt,a.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.format!==void 0&&(a.format=l.format),l.type!==void 0&&(a.type=l.type),l.mipmaps!==void 0&&(a.mipmaps=l.mipmaps,a.minFilter=qo),l.mipmapCount===1&&(a.minFilter=dt),a.needsUpdate=!0,t&&t(a,l));},n,r),a;}});function ia(e){je.call(this,e);}f(ia,"ImageLoader");ia.prototype=Object.assign(Object.create(je.prototype),{constructor:ia,load:function(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=fi.get(e);if(a!==void 0)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e);},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1),fi.add(e,this),t&&t(this),i.manager.itemEnd(e);}f(s,"onImageLoad");function l(c){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1),r&&r(c),i.manager.itemError(e),i.manager.itemEnd(e);}return f(l,"onImageError"),o.addEventListener("load",s,!1),o.addEventListener("error",l,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o;}});function il(e){je.call(this,e);}f(il,"CubeTextureLoader");il.prototype=Object.assign(Object.create(je.prototype),{constructor:il,load:function(e,t,n,r){var i=new Hn(),a=new ia(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var o=0;function s(c){a.load(e[c],function(u){i.images[c]=u,o++,o===6&&(i.needsUpdate=!0,t&&t(i));},void 0,r);}f(s,"loadTexture");for(var l=0;l<e.length;++l)s(l);return i;}});function al(e){je.call(this,e);}f(al,"TextureLoader");al.prototype=Object.assign(Object.create(je.prototype),{constructor:al,load:function(e,t,n,r){var i=new Je(),a=new ia(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){i.image=o;var s=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data\:image\/jpeg/)===0;i.format=s?cr:sn,i.needsUpdate=!0,t!==void 0&&t(i);},n,r),i;}});function me(){this.type="Curve",this.arcLengthDivisions=200;}f(me,"Curve");Object.assign(me.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null;},getPointAt:function(e,t){var n=this.getUtoTmapping(e);return this.getPoint(n,t);},getPoints:function(e){e===void 0&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t;},getSpacedPoints:function(e){e===void 0&&(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t;},getLength:function(){var e=this.getLengths();return e[e.length-1];},getLengths:function(e){if(e===void 0&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],n,r=this.getPoint(0),i,a=0;for(t.push(0),i=1;i<=e;i++)n=this.getPoint(i/e),a+=n.distanceTo(r),t.push(a),r=n;return this.cacheArcLengths=t,t;},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths();},getUtoTmapping:function(e,t){var n=this.getLengths(),r=0,i=n.length,a;t?a=t:a=e*n[i-1];for(var o=0,s=i-1,l;o<=s;)if(r=Math.floor(o+(s-o)/2),l=n[r]-a,l<0)o=r+1;else if(l>0)s=r-1;else{s=r;break;}if(r=s,n[r]===a)return r/(i-1);var c=n[r],u=n[r+1],h=u-c,d=(a-c)/h,p=(r+d)/(i-1);return p;},getTangent:function(e){var t=1e-4,n=e-t,r=e+t;n<0&&(n=0),r>1&&(r=1);var i=this.getPoint(n),a=this.getPoint(r),o=a.clone().sub(i);return o.normalize();},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t);},computeFrenetFrames:function(e,t){var n=new E(),r=[],i=[],a=[],o=new E(),s=new De(),l,c,u;for(l=0;l<=e;l++)c=l/e,r[l]=this.getTangentAt(c),r[l].normalize();i[0]=new E(),a[0]=new E();var h=Number.MAX_VALUE,d=Math.abs(r[0].x),p=Math.abs(r[0].y),v=Math.abs(r[0].z);for(d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),v<=h&&n.set(0,0,1),o.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],o),a[0].crossVectors(r[0],i[0]),l=1;l<=e;l++)i[l]=i[l-1].clone(),a[l]=a[l-1].clone(),o.crossVectors(r[l-1],r[l]),o.length()>Number.EPSILON&&(o.normalize(),u=Math.acos(Pe.clamp(r[l-1].dot(r[l]),-1,1)),i[l].applyMatrix4(s.makeRotationAxis(o,u))),a[l].crossVectors(r[l],i[l]);if(t===!0)for(u=Math.acos(Pe.clamp(i[0].dot(i[e]),-1,1)),u/=e,r[0].dot(o.crossVectors(i[0],i[e]))>0&&(u=-u),l=1;l<=e;l++)i[l].applyMatrix4(s.makeRotationAxis(r[l],u*l)),a[l].crossVectors(r[l],i[l]);return{tangents:r,normals:i,binormals:a};},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this;},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e;},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this;}});function kt(e,t,n,r,i,a,o,s){me.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=i||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0;}f(kt,"EllipseCurve");kt.prototype=Object.create(me.prototype);kt.prototype.constructor=kt;kt.prototype.isEllipseCurve=!0;kt.prototype.getPoint=function(e,t){for(var n=t||new G(),r=Math.PI*2,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(a?i=0:i=r),this.aClockwise===!0&&!a&&(i===r?i=-r:i=i-r);var o=this.aStartAngle+e*i,s=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){var c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),h=s-this.aX,d=l-this.aY;s=h*c-d*u+this.aX,l=h*u+d*c+this.aY;}return n.set(s,l);};kt.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this;};kt.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e;};kt.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this;};function aa(e,t,n,r,i,a){kt.call(this,e,t,n,n,r,i,a),this.type="ArcCurve";}f(aa,"ArcCurve");aa.prototype=Object.create(kt.prototype);aa.prototype.constructor=aa;aa.prototype.isArcCurve=!0;function Bl(){var e=0,t=0,n=0,r=0;function i(a,o,s,l){e=a,t=s,n=-3*a+3*o-2*s-l,r=2*a-2*o+s+l;}return f(i,"init"),{initCatmullRom:function(a,o,s,l,c){i(o,s,c*(s-a),c*(l-o));},initNonuniformCatmullRom:function(a,o,s,l,c,u,h){var d=(o-a)/c-(s-a)/(c+u)+(s-o)/u,p=(s-o)/u-(l-o)/(u+h)+(l-s)/h;d*=u,p*=u,i(o,s,d,p);},calc:function(a){var o=a*a,s=o*a;return e+t*a+n*o+r*s;}};}f(Bl,"CubicPoly");var ja=new E(),Es=new Bl(),Ts=new Bl(),Ss=new Bl();function St(e,t,n,r){me.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=n||"centripetal",this.tension=r||.5;}f(St,"CatmullRomCurve3");St.prototype=Object.create(me.prototype);St.prototype.constructor=St;St.prototype.isCatmullRomCurve3=!0;St.prototype.getPoint=function(e,t){var n=t||new E(),r=this.points,i=r.length,a=(i-(this.closed?0:1))*e,o=Math.floor(a),s=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/i)+1)*i:s===0&&o===i-1&&(o=i-2,s=1);var l,c,u,h;if(this.closed||o>0?l=r[(o-1)%i]:(ja.subVectors(r[0],r[1]).add(r[0]),l=ja),c=r[o%i],u=r[(o+1)%i],this.closed||o+2<i?h=r[(o+2)%i]:(ja.subVectors(r[i-1],r[i-2]).add(r[i-1]),h=ja),this.curveType==="centripetal"||this.curveType==="chordal"){var d=this.curveType==="chordal"?.5:.25,p=Math.pow(l.distanceToSquared(c),d),v=Math.pow(c.distanceToSquared(u),d),y=Math.pow(u.distanceToSquared(h),d);v<1e-4&&(v=1),p<1e-4&&(p=v),y<1e-4&&(y=v),Es.initNonuniformCatmullRom(l.x,c.x,u.x,h.x,p,v,y),Ts.initNonuniformCatmullRom(l.y,c.y,u.y,h.y,p,v,y),Ss.initNonuniformCatmullRom(l.z,c.z,u.z,h.z,p,v,y);}else this.curveType==="catmullrom"&&(Es.initCatmullRom(l.x,c.x,u.x,h.x,this.tension),Ts.initCatmullRom(l.y,c.y,u.y,h.y,this.tension),Ss.initCatmullRom(l.z,c.z,u.z,h.z,this.tension));return n.set(Es.calc(s),Ts.calc(s),Ss.calc(s)),n;};St.prototype.copy=function(e){me.prototype.copy.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(r.clone());}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this;};St.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);e.points=[];for(var t=0,n=this.points.length;t<n;t++){var r=this.points[t];e.points.push(r.toArray());}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e;};St.prototype.fromJSON=function(e){me.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(new E().fromArray(r));}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this;};function Zc(e,t,n,r,i){var a=(r-t)*.5,o=(i-n)*.5,s=e*e,l=e*s;return(2*n-2*r+a+o)*l+(-3*n+3*r-2*a-o)*s+a*e+n;}f(Zc,"CatmullRom");function Pg(e,t){var n=1-e;return n*n*t;}f(Pg,"QuadraticBezierP0");function Cg(e,t){return 2*(1-e)*e*t;}f(Cg,"QuadraticBezierP1");function Dg(e,t){return e*e*t;}f(Dg,"QuadraticBezierP2");function Ci(e,t,n,r){return Pg(e,t)+Cg(e,n)+Dg(e,r);}f(Ci,"QuadraticBezier");function Og(e,t){var n=1-e;return n*n*n*t;}f(Og,"CubicBezierP0");function Ig(e,t){var n=1-e;return 3*n*n*e*t;}f(Ig,"CubicBezierP1");function Ng(e,t){return 3*(1-e)*e*e*t;}f(Ng,"CubicBezierP2");function Fg(e,t){return e*e*e*t;}f(Fg,"CubicBezierP3");function Di(e,t,n,r,i){return Og(e,t)+Ig(e,n)+Ng(e,r)+Fg(e,i);}f(Di,"CubicBezier");function cn(e,t,n,r){me.call(this),this.type="CubicBezierCurve",this.v0=e||new G(),this.v1=t||new G(),this.v2=n||new G(),this.v3=r||new G();}f(cn,"CubicBezierCurve");cn.prototype=Object.create(me.prototype);cn.prototype.constructor=cn;cn.prototype.isCubicBezierCurve=!0;cn.prototype.getPoint=function(e,t){var n=t||new G(),r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(Di(e,r.x,i.x,a.x,o.x),Di(e,r.y,i.y,a.y,o.y)),n;};cn.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this;};cn.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e;};cn.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this;};function En(e,t,n,r){me.call(this),this.type="CubicBezierCurve3",this.v0=e||new E(),this.v1=t||new E(),this.v2=n||new E(),this.v3=r||new E();}f(En,"CubicBezierCurve3");En.prototype=Object.create(me.prototype);En.prototype.constructor=En;En.prototype.isCubicBezierCurve3=!0;En.prototype.getPoint=function(e,t){var n=t||new E(),r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(Di(e,r.x,i.x,a.x,o.x),Di(e,r.y,i.y,a.y,o.y),Di(e,r.z,i.z,a.z,o.z)),n;};En.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this;};En.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e;};En.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this;};function Bt(e,t){me.call(this),this.type="LineCurve",this.v1=e||new G(),this.v2=t||new G();}f(Bt,"LineCurve");Bt.prototype=Object.create(me.prototype);Bt.prototype.constructor=Bt;Bt.prototype.isLineCurve=!0;Bt.prototype.getPoint=function(e,t){var n=t||new G();return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n;};Bt.prototype.getPointAt=function(e,t){return this.getPoint(e,t);};Bt.prototype.getTangent=function(){var e=this.v2.clone().sub(this.v1);return e.normalize();};Bt.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this;};Bt.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e;};Bt.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this;};function un(e,t){me.call(this),this.type="LineCurve3",this.v1=e||new E(),this.v2=t||new E();}f(un,"LineCurve3");un.prototype=Object.create(me.prototype);un.prototype.constructor=un;un.prototype.isLineCurve3=!0;un.prototype.getPoint=function(e,t){var n=t||new E();return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n;};un.prototype.getPointAt=function(e,t){return this.getPoint(e,t);};un.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this;};un.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e;};un.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this;};function hn(e,t,n){me.call(this),this.type="QuadraticBezierCurve",this.v0=e||new G(),this.v1=t||new G(),this.v2=n||new G();}f(hn,"QuadraticBezierCurve");hn.prototype=Object.create(me.prototype);hn.prototype.constructor=hn;hn.prototype.isQuadraticBezierCurve=!0;hn.prototype.getPoint=function(e,t){var n=t||new G(),r=this.v0,i=this.v1,a=this.v2;return n.set(Ci(e,r.x,i.x,a.x),Ci(e,r.y,i.y,a.y)),n;};hn.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this;};hn.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e;};hn.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this;};function Tn(e,t,n){me.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new E(),this.v1=t||new E(),this.v2=n||new E();}f(Tn,"QuadraticBezierCurve3");Tn.prototype=Object.create(me.prototype);Tn.prototype.constructor=Tn;Tn.prototype.isQuadraticBezierCurve3=!0;Tn.prototype.getPoint=function(e,t){var n=t||new E(),r=this.v0,i=this.v1,a=this.v2;return n.set(Ci(e,r.x,i.x,a.x),Ci(e,r.y,i.y,a.y),Ci(e,r.z,i.z,a.z)),n;};Tn.prototype.copy=function(e){return me.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this;};Tn.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e;};Tn.prototype.fromJSON=function(e){return me.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this;};function fn(e){me.call(this),this.type="SplineCurve",this.points=e||[];}f(fn,"SplineCurve");fn.prototype=Object.create(me.prototype);fn.prototype.constructor=fn;fn.prototype.isSplineCurve=!0;fn.prototype.getPoint=function(e,t){var n=t||new G(),r=this.points,i=(r.length-1)*e,a=Math.floor(i),o=i-a,s=r[a===0?a:a-1],l=r[a],c=r[a>r.length-2?r.length-1:a+1],u=r[a>r.length-3?r.length-1:a+2];return n.set(Zc(o,s.x,l.x,c.x,u.x),Zc(o,s.y,l.y,c.y,u.y)),n;};fn.prototype.copy=function(e){me.prototype.copy.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(r.clone());}return this;};fn.prototype.toJSON=function(){var e=me.prototype.toJSON.call(this);e.points=[];for(var t=0,n=this.points.length;t<n;t++){var r=this.points[t];e.points.push(r.toArray());}return e;};fn.prototype.fromJSON=function(e){me.prototype.fromJSON.call(this,e),this.points=[];for(var t=0,n=e.points.length;t<n;t++){var r=e.points[t];this.points.push(new G().fromArray(r));}return this;};var ol=Object.freeze({__proto__:null,ArcCurve:aa,CatmullRomCurve3:St,CubicBezierCurve:cn,CubicBezierCurve3:En,EllipseCurve:kt,LineCurve:Bt,LineCurve3:un,QuadraticBezierCurve:hn,QuadraticBezierCurve3:Tn,SplineCurve:fn});function Nn(){me.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1;}f(Nn,"CurvePath");Nn.prototype=Object.assign(Object.create(me.prototype),{constructor:Nn,add:function(e){this.curves.push(e);},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Bt(t,e));},getPoint:function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=t){var i=n[r]-t,a=this.curves[r],o=a.getLength(),s=o===0?0:1-i/o;return a.getPointAt(s);}r++;}return null;},getLength:function(){var e=this.getCurveLengths();return e[e.length-1];},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths();},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e;},getSpacedPoints:function(e){e===void 0&&(e=40);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t;},getPoints:function(e){e=e||12;for(var t=[],n,r=0,i=this.curves;r<i.length;r++)for(var a=i[r],o=a&&a.isEllipseCurve?e*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o),l=0;l<s.length;l++){var c=s[l];n&&n.equals(c)||(t.push(c),n=c);}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t;},copy:function(e){me.prototype.copy.call(this,e),this.curves=[];for(var t=0,n=e.curves.length;t<n;t++){var r=e.curves[t];this.curves.push(r.clone());}return this.autoClose=e.autoClose,this;},toJSON:function(){var e=me.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(var t=0,n=this.curves.length;t<n;t++){var r=this.curves[t];e.curves.push(r.toJSON());}return e;},fromJSON:function(e){me.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var t=0,n=e.curves.length;t<n;t++){var r=e.curves[t];this.curves.push(new ol[r.type]().fromJSON(r));}return this;}});function rn(e){Nn.call(this),this.type="Path",this.currentPoint=new G(),e&&this.setFromPoints(e);}f(rn,"Path");rn.prototype=Object.assign(Object.create(Nn.prototype),{constructor:rn,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this;},moveTo:function(e,t){return this.currentPoint.set(e,t),this;},lineTo:function(e,t){var n=new Bt(this.currentPoint.clone(),new G(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this;},quadraticCurveTo:function(e,t,n,r){var i=new hn(this.currentPoint.clone(),new G(e,t),new G(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this;},bezierCurveTo:function(e,t,n,r,i,a){var o=new cn(this.currentPoint.clone(),new G(e,t),new G(n,r),new G(i,a));return this.curves.push(o),this.currentPoint.set(i,a),this;},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),n=new fn(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this;},arc:function(e,t,n,r,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,n,r,i,a),this;},absarc:function(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this;},ellipse:function(e,t,n,r,i,a,o,s){var l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,n,r,i,a,o,s),this;},absellipse:function(e,t,n,r,i,a,o,s){var l=new kt(e,t,n,r,i,a,o,s);if(this.curves.length>0){var c=l.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y);}this.curves.push(l);var u=l.getPoint(1);return this.currentPoint.copy(u),this;},copy:function(e){return Nn.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this;},toJSON:function(){var e=Nn.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e;},fromJSON:function(e){return Nn.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this;}});function lr(e){rn.call(this,e),this.uuid=Pe.generateUUID(),this.type="Shape",this.holes=[];}f(lr,"Shape");lr.prototype=Object.assign(Object.create(rn.prototype),{constructor:lr,getPointsHoles:function(e){for(var t=[],n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t;},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)};},copy:function(e){rn.prototype.copy.call(this,e),this.holes=[];for(var t=0,n=e.holes.length;t<n;t++){var r=e.holes[t];this.holes.push(r.clone());}return this;},toJSON:function(){var e=rn.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(var t=0,n=this.holes.length;t<n;t++){var r=this.holes[t];e.holes.push(r.toJSON());}return e;},fromJSON:function(e){rn.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var t=0,n=e.holes.length;t<n;t++){var r=e.holes[t];this.holes.push(new rn().fromJSON(r));}return this;}});function Ke(e,t){ie.call(this),this.type="Light",this.color=new se(e),this.intensity=t!==void 0?t:1,this.receiveShadow=void 0;}f(Ke,"Light");Ke.prototype=Object.assign(Object.create(ie.prototype),{constructor:Ke,isLight:!0,copy:function(e){return ie.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this;},toJSON:function(e){var t=ie.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t;}});function sl(e,t,n){Ke.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(ie.DefaultUp),this.updateMatrix(),this.groundColor=new se(t);}f(sl,"HemisphereLight");sl.prototype=Object.assign(Object.create(Ke.prototype),{constructor:sl,isHemisphereLight:!0,copy:function(e){return Ke.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this;}});function Sn(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new G(512,512),this.map=null,this.mapPass=null,this.matrix=new De(),this._frustum=new Zo(),this._frameExtents=new G(1,1),this._viewportCount=1,this._viewports=[new Ze(0,0,1,1)];}f(Sn,"LightShadow");Object.assign(Sn.prototype,{_projScreenMatrix:new De(),_lightPositionWorld:new E(),_lookTarget:new E(),getViewportCount:function(){return this._viewportCount;},getFrustum:function(){return this._frustum;},updateMatrices:function(e){var t=this.camera,n=this.matrix,r=this._projScreenMatrix,i=this._lookTarget,a=this._lightPositionWorld;a.setFromMatrixPosition(e.matrixWorld),t.position.copy(a),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),r.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromMatrix(r),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse);},getViewport:function(e){return this._viewports[e];},getFrameExtents:function(){return this._frameExtents;},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this;},clone:function(){return new this.constructor().copy(this);},toJSON:function(){var e={};return this.bias!==0&&(e.bias=this.bias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e;}});function ll(){Sn.call(this,new ht(50,1,.5,500));}f(ll,"SpotLightShadow");ll.prototype=Object.assign(Object.create(Sn.prototype),{constructor:ll,isSpotLightShadow:!0,updateMatrices:function(e){var t=this.camera,n=Pe.RAD2DEG*2*e.angle,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;(n!==t.fov||r!==t.aspect||i!==t.far)&&(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix()),Sn.prototype.updateMatrices.call(this,e);}});function cl(e,t,n,r,i,a){Ke.call(this,e,t),this.type="SpotLight",this.position.copy(ie.DefaultUp),this.updateMatrix(),this.target=new ie(),Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI;},set:function(o){this.intensity=o/Math.PI;}}),this.distance=n!==void 0?n:0,this.angle=r!==void 0?r:Math.PI/3,this.penumbra=i!==void 0?i:0,this.decay=a!==void 0?a:1,this.shadow=new ll();}f(cl,"SpotLight");cl.prototype=Object.assign(Object.create(Ke.prototype),{constructor:cl,isSpotLight:!0,copy:function(e){return Ke.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this;}});function ul(){Sn.call(this,new ht(90,1,.5,500)),this._frameExtents=new G(4,2),this._viewportCount=6,this._viewports=[new Ze(2,1,1,1),new Ze(0,1,1,1),new Ze(3,1,1,1),new Ze(1,1,1,1),new Ze(3,0,1,1),new Ze(1,0,1,1)],this._cubeDirections=[new E(1,0,0),new E(-1,0,0),new E(0,0,1),new E(0,0,-1),new E(0,1,0),new E(0,-1,0)],this._cubeUps=[new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,0,1),new E(0,0,-1)];}f(ul,"PointLightShadow");ul.prototype=Object.assign(Object.create(Sn.prototype),{constructor:ul,isPointLightShadow:!0,updateMatrices:function(e,t){t===void 0&&(t=0);var n=this.camera,r=this.matrix,i=this._lightPositionWorld,a=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),n.position.copy(i),a.copy(n.position),a.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(a),n.updateMatrixWorld(),r.makeTranslation(-i.x,-i.y,-i.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromMatrix(o);}});function hl(e,t,n,r){Ke.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI;},set:function(i){this.intensity=i/(4*Math.PI);}}),this.distance=n!==void 0?n:0,this.decay=r!==void 0?r:1,this.shadow=new ul();}f(hl,"PointLight");hl.prototype=Object.assign(Object.create(Ke.prototype),{constructor:hl,isPointLight:!0,copy:function(e){return Ke.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this;}});function oa(e,t,n,r,i,a){bn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e!==void 0?e:-1,this.right=t!==void 0?t:1,this.top=n!==void 0?n:1,this.bottom=r!==void 0?r:-1,this.near=i!==void 0?i:.1,this.far=a!==void 0?a:2e3,this.updateProjectionMatrix();}f(oa,"OrthographicCamera");oa.prototype=Object.assign(Object.create(bn.prototype),{constructor:oa,isOrthographicCamera:!0,copy:function(e,t){return bn.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this;},setViewOffset:function(e,t,n,r,i,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix();},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix();},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,a=n+e,o=r+t,s=r-t;if(this.view!==null&&this.view.enabled){var l=this.zoom/(this.view.width/this.view.fullWidth),c=this.zoom/(this.view.height/this.view.fullHeight),u=(this.right-this.left)/this.view.width,h=(this.top-this.bottom)/this.view.height;i+=u*(this.view.offsetX/l),a=i+u*(this.view.width/l),o-=h*(this.view.offsetY/c),s=o-h*(this.view.height/c);}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix);},toJSON:function(e){var t=ie.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t;}});function fl(){Sn.call(this,new oa(-5,5,5,-5,.5,500));}f(fl,"DirectionalLightShadow");fl.prototype=Object.assign(Object.create(Sn.prototype),{constructor:fl,isDirectionalLightShadow:!0,updateMatrices:function(e){Sn.prototype.updateMatrices.call(this,e);}});function dl(e,t){Ke.call(this,e,t),this.type="DirectionalLight",this.position.copy(ie.DefaultUp),this.updateMatrix(),this.target=new ie(),this.shadow=new fl();}f(dl,"DirectionalLight");dl.prototype=Object.assign(Object.create(Ke.prototype),{constructor:dl,isDirectionalLight:!0,copy:function(e){return Ke.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this;}});function pl(e,t){Ke.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0;}f(pl,"AmbientLight");pl.prototype=Object.assign(Object.create(Ke.prototype),{constructor:pl,isAmbientLight:!0});function vl(e,t,n,r){Ke.call(this,e,t),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=r!==void 0?r:10;}f(vl,"RectAreaLight");vl.prototype=Object.assign(Object.create(Ke.prototype),{constructor:vl,isRectAreaLight:!0,copy:function(e){return Ke.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this;},toJSON:function(e){var t=Ke.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t;}});function ml(e){je.call(this,e),this.textures={};}f(ml,"MaterialLoader");ml.prototype=Object.assign(Object.create(je.prototype),{constructor:ml,load:function(e,t,n,r){var i=this,a=new ln(i.manager);a.setPath(i.path),a.load(e,function(o){t(i.parse(JSON.parse(o)));},n,r);},parse:function(e){var t=this.textures;function n(l){return t[l]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",l),t[l];}f(n,"getTexture");var r=new Sg[e.type]();if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=new se().setHex(e.sheen)),e.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular.setHex(e.specular),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.vertexColors!==void 0&&(r.vertexColors=e.vertexColors),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==1&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.skinning!==void 0&&(r.skinning=e.skinning),e.morphTargets!==void 0&&(r.morphTargets=e.morphTargets),e.morphNormals!==void 0&&(r.morphNormals=e.morphNormals),e.dithering!==void 0&&(r.dithering=e.dithering),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.uniforms!==void 0)for(var i in e.uniforms){var a=e.uniforms[i];switch(r.uniforms[i]={},a.type){case"t":r.uniforms[i].value=n(a.value);break;case"c":r.uniforms[i].value=new se().setHex(a.value);break;case"v2":r.uniforms[i].value=new G().fromArray(a.value);break;case"v3":r.uniforms[i].value=new E().fromArray(a.value);break;case"v4":r.uniforms[i].value=new Ze().fromArray(a.value);break;case"m3":r.uniforms[i].value=new yt().fromArray(a.value);case"m4":r.uniforms[i].value=new De().fromArray(a.value);break;default:r.uniforms[i].value=a.value;}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(var o in e.extensions)r.extensions[o]=e.extensions[o];if(e.shading!==void 0&&(r.flatShading=e.shading===1),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=n(e.map)),e.matcap!==void 0&&(r.matcap=n(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=n(e.alphaMap),r.transparent=!0),e.bumpMap!==void 0&&(r.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){var s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new G().fromArray(s);}return e.displacementMap!==void 0&&(r.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=n(e.specularMap)),e.envMap!==void 0&&(r.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=n(e.gradientMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new G().fromArray(e.clearcoatNormalScale)),r;},setTextures:function(e){return this.textures=e,this;}});var lh={decodeText:function(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);for(var t="",n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t));}catch{return t;}},extractUrlBase:function(e){var t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1);}};function gl(){le.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0;}f(gl,"InstancedBufferGeometry");gl.prototype=Object.assign(Object.create(le.prototype),{constructor:gl,isInstancedBufferGeometry:!0,copy:function(e){return le.prototype.copy.call(this,e),this.maxInstancedCount=e.maxInstancedCount,this;},clone:function(){return new this.constructor().copy(this);},toJSON:function(){var e=le.prototype.toJSON.call(this);return e.maxInstancedCount=this.maxInstancedCount,e.isInstancedBufferGeometry=!0,e;}});function yl(e,t,n,r){typeof n=="number"&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),we.call(this,e,t,n),this.meshPerAttribute=r||1;}f(yl,"InstancedBufferAttribute");yl.prototype=Object.assign(Object.create(we.prototype),{constructor:yl,isInstancedBufferAttribute:!0,copy:function(e){return we.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this;},toJSON:function(){var e=we.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e;}});function xl(e){je.call(this,e);}f(xl,"BufferGeometryLoader");xl.prototype=Object.assign(Object.create(je.prototype),{constructor:xl,load:function(e,t,n,r){var i=this,a=new ln(i.manager);a.setPath(i.path),a.load(e,function(o){t(i.parse(JSON.parse(o)));},n,r);},parse:function(e){var t=e.isInstancedBufferGeometry?new gl():new le(),n=e.data.index;if(n!==void 0){var r=new As[n.type](n.array);t.setIndex(new we(r,1));}var i=e.data.attributes;for(var a in i){var o=i[a],r=new As[o.type](o.array),s=o.isInstancedBufferAttribute?yl:we,l=new s(r,o.itemSize,o.normalized);o.name!==void 0&&(l.name=o.name),t.setAttribute(a,l);}var c=e.data.morphAttributes;if(c)for(var a in c){for(var u=c[a],h=[],d=0,p=u.length;d<p;d++){var o=u[d],r=new As[o.type](o.array),l=new we(r,o.itemSize,o.normalized);o.name!==void 0&&(l.name=o.name),h.push(l);}t.morphAttributes[a]=h;}var v=e.data.morphTargetsRelative;v&&(t.morphTargetsRelative=!0);var y=e.data.groups||e.data.drawcalls||e.data.offsets;if(y!==void 0)for(var d=0,m=y.length;d!==m;++d){var x=y[d];t.addGroup(x.start,x.count,x.materialIndex);}var _=e.data.boundingSphere;if(_!==void 0){var w=new E();_.center!==void 0&&w.fromArray(_.center),t.boundingSphere=new qn(w,_.radius);}return e.name&&(t.name=e.name),e.userData&&(t.userData=e.userData),t;}});var As={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function _l(e){je.call(this,e);}f(_l,"ObjectLoader");_l.prototype=Object.assign(Object.create(je.prototype),{constructor:_l,load:function(e,t,n,r){var i=this,a=this.path===""?lh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;var o=new ln(i.manager);o.setPath(this.path),o.load(e,function(s){var l=null;try{l=JSON.parse(s);}catch(u){r!==void 0&&r(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return;}var c=l.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return;}i.parse(l,t);},n,r);},parse:function(e,t){var n=this.parseShape(e.shapes),r=this.parseGeometries(e.geometries,n),i=this.parseImages(e.images,function(){t!==void 0&&t(s);}),a=this.parseTextures(e.textures,i),o=this.parseMaterials(e.materials,a),s=this.parseObject(e.object,r,o);return e.animations&&(s.animations=this.parseAnimations(e.animations)),(e.images===void 0||e.images.length===0)&&t!==void 0&&t(s),s;},parseShape:function(e){var t={};if(e!==void 0)for(var n=0,r=e.length;n<r;n++){var i=new lr().fromJSON(e[n]);t[i.uuid]=i;}return t;},parseGeometries:function(e,t){var n={};if(e!==void 0)for(var r=new xl(),i=0,a=e.length;i<a;i++){var o,s=e[i];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new wt[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new wt[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new wt[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new wt[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new wt[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new wt[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new wt[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new wt[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new wt[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new wt[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new wt[s.type](new ol[s.path.type]().fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new wt[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new wt[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var h=[],l=0,c=s.shapes.length;l<c;l++){var u=t[s.shapes[l]];h.push(u);}o=new wt[s.type](h,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(var h=[],l=0,c=s.shapes.length;l<c;l++){var u=t[s.shapes[l]];h.push(u);}var d=s.options.extrudePath;d!==void 0&&(s.options.extrudePath=new ol[d.type]().fromJSON(d)),o=new wt[s.type](h,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(s);break;case"Geometry":if("THREE"in window&&"LegacyJSONLoader"in THREE){var p=new THREE.LegacyJSONLoader();o=p.parse(s,this.resourcePath).geometry;}else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue;}o.uuid=s.uuid,s.name!==void 0&&(o.name=s.name),o.isBufferGeometry===!0&&s.userData!==void 0&&(o.userData=s.userData),n[s.uuid]=o;}return n;},parseMaterials:function(e,t){var n={},r={};if(e!==void 0){var i=new ml();i.setTextures(t);for(var a=0,o=e.length;a<o;a++){var s=e[a];if(s.type==="MultiMaterial"){for(var l=[],c=0;c<s.materials.length;c++){var u=s.materials[c];n[u.uuid]===void 0&&(n[u.uuid]=i.parse(u)),l.push(n[u.uuid]);}r[s.uuid]=l;}else n[s.uuid]===void 0&&(n[s.uuid]=i.parse(s)),r[s.uuid]=n[s.uuid];}}return r;},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n],i=Jt.parse(r);r.uuid!==void 0&&(i.uuid=r.uuid),t.push(i);}return t;},parseImages:function(e,t){var n=this,r={};function i(y){return n.manager.itemStart(y),o.load(y,function(){n.manager.itemEnd(y);},void 0,function(){n.manager.itemError(y),n.manager.itemEnd(y);});}if(f(i,"loadImage"),e!==void 0&&e.length>0){var a=new sh(t),o=new ia(a);o.setCrossOrigin(this.crossOrigin);for(var s=0,l=e.length;s<l;s++){var c=e[s],u=c.url;if(Array.isArray(u)){r[c.uuid]=[];for(var h=0,d=u.length;h<d;h++){var p=u[h],v=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(p)?p:n.resourcePath+p;r[c.uuid].push(i(v));}}else{var v=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.resourcePath+c.url;r[c.uuid]=i(v);}}}return r;},parseTextures:function(e,t){function n(l,c){return typeof l=="number"?l:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",l),c[l]);}f(n,"parseConstant");var r={};if(e!==void 0)for(var i=0,a=e.length;i<a;i++){var o=e[i];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);var s;Array.isArray(t[o.image])?s=new Hn(t[o.image]):s=new Je(t[o.image]),s.needsUpdate=!0,s.uuid=o.uuid,o.name!==void 0&&(s.name=o.name),o.mapping!==void 0&&(s.mapping=n(o.mapping,Bg)),o.offset!==void 0&&s.offset.fromArray(o.offset),o.repeat!==void 0&&s.repeat.fromArray(o.repeat),o.center!==void 0&&s.center.fromArray(o.center),o.rotation!==void 0&&(s.rotation=o.rotation),o.wrap!==void 0&&(s.wrapS=n(o.wrap[0],Jc),s.wrapT=n(o.wrap[1],Jc)),o.format!==void 0&&(s.format=o.format),o.type!==void 0&&(s.type=o.type),o.encoding!==void 0&&(s.encoding=o.encoding),o.minFilter!==void 0&&(s.minFilter=n(o.minFilter,$c)),o.magFilter!==void 0&&(s.magFilter=n(o.magFilter,$c)),o.anisotropy!==void 0&&(s.anisotropy=o.anisotropy),o.flipY!==void 0&&(s.flipY=o.flipY),o.premultiplyAlpha!==void 0&&(s.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(s.unpackAlignment=o.unpackAlignment),r[o.uuid]=s;}return r;},parseObject:function(e,t,n){var r;function i(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m];}f(i,"getGeometry");function a(m){if(m!==void 0){if(Array.isArray(m)){for(var x=[],_=0,w=m.length;_<w;_++){var T=m[_];n[T]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",T),x.push(n[T]);}return x;}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m];}}switch(f(a,"getMaterial"),e.type){case"Scene":r=new Gn(),e.background!==void 0&&Number.isInteger(e.background)&&(r.background=new se(e.background)),e.fog!==void 0&&(e.fog.type==="Fog"?r.fog=new ks(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(r.fog=new Vs(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":r=new ht(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(r.focus=e.focus),e.zoom!==void 0&&(r.zoom=e.zoom),e.filmGauge!==void 0&&(r.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(r.filmOffset=e.filmOffset),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new oa(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(r.zoom=e.zoom),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new pl(e.color,e.intensity);break;case"DirectionalLight":r=new dl(e.color,e.intensity);break;case"PointLight":r=new hl(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new vl(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new cl(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":r=new sl(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var o=i(e.geometry),s=a(e.material);o.bones&&o.bones.length>0?r=new vo(o,s):r=new nt(o,s);break;case"InstancedMesh":var o=i(e.geometry),s=a(e.material),l=e.count,c=e.instanceMatrix;r=new qs(o,s,l),r.instanceMatrix=new we(new Float32Array(c.array),16);break;case"LOD":r=new po();break;case"Line":r=new Vt(i(e.geometry),a(e.material),e.mode);break;case"LineLoop":r=new Xs(i(e.geometry),a(e.material));break;case"LineSegments":r=new ct(i(e.geometry),a(e.material));break;case"PointCloud":case"Points":r=new Zs(i(e.geometry),a(e.material));break;case"Sprite":r=new Ws(a(e.material));break;case"Group":r=new ho();break;default:r=new ie();}if(r.uuid=e.uuid,e.name!==void 0&&(r.name=e.name),e.matrix!==void 0?(r.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(e.position!==void 0&&r.position.fromArray(e.position),e.rotation!==void 0&&r.rotation.fromArray(e.rotation),e.quaternion!==void 0&&r.quaternion.fromArray(e.quaternion),e.scale!==void 0&&r.scale.fromArray(e.scale)),e.castShadow!==void 0&&(r.castShadow=e.castShadow),e.receiveShadow!==void 0&&(r.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(r.shadow.bias=e.shadow.bias),e.shadow.radius!==void 0&&(r.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&r.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(r.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(r.visible=e.visible),e.frustumCulled!==void 0&&(r.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(r.renderOrder=e.renderOrder),e.userData!==void 0&&(r.userData=e.userData),e.layers!==void 0&&(r.layers.mask=e.layers),e.children!==void 0)for(var u=e.children,h=0;h<u.length;h++)r.add(this.parseObject(u[h],t,n));if(e.type==="LOD"){e.autoUpdate!==void 0&&(r.autoUpdate=e.autoUpdate);for(var d=e.levels,p=0;p<d.length;p++){var v=d[p],y=r.getObjectByProperty("uuid",v.object);y!==void 0&&r.addLevel(y,v.distance);}}return r;}});var Bg={UVMapping:Rl,CubeReflectionMapping:Pl,CubeRefractionMapping:Cl,EquirectangularReflectionMapping:Du,EquirectangularRefractionMapping:Dl,SphericalReflectionMapping:Ou,CubeUVReflectionMapping:ma,CubeUVRefractionMapping:Ol},Jc={RepeatWrapping:ro,ClampToEdgeWrapping:At,MirroredRepeatWrapping:io},$c={NearestFilter:lt,NearestMipmapNearestFilter:Cs,NearestMipmapLinearFilter:Ds,LinearFilter:dt,LinearMipmapNearestFilter:Iu,LinearMipmapLinearFilter:qo};function Qc(e){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),je.call(this,e),this.options=void 0;}f(Qc,"ImageBitmapLoader");Qc.prototype=Object.assign(Object.create(je.prototype),{constructor:Qc,setOptions:f(function(t){return this.options=t,this;},"setOptions"),load:function(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var i=this,a=fi.get(e);if(a!==void 0)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e);},0),a;fetch(e).then(function(o){return o.blob();}).then(function(o){return i.options===void 0?createImageBitmap(o):createImageBitmap(o,i.options);}).then(function(o){fi.add(e,o),t&&t(o),i.manager.itemEnd(e);}).catch(function(o){r&&r(o),i.manager.itemError(e),i.manager.itemEnd(e);}),i.manager.itemStart(e);}});function ch(){this.type="ShapePath",this.color=new se(),this.subPaths=[],this.currentPath=null;}f(ch,"ShapePath");Object.assign(ch.prototype,{moveTo:function(e,t){return this.currentPath=new rn(),this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this;},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this;},quadraticCurveTo:function(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this;},bezierCurveTo:function(e,t,n,r,i,a){return this.currentPath.bezierCurveTo(e,t,n,r,i,a),this;},splineThru:function(e){return this.currentPath.splineThru(e),this;},toShapes:function(e,t){function n(U){for(var W=[],$=0,oe=U.length;$<oe;$++){var Z=U[$],K=new lr();K.curves=Z.curves,W.push(K);}return W;}f(n,"toShapesNoHoles");function r(U,W){for(var $=W.length,oe=!1,Z=$-1,K=0;K<$;Z=K++){var ce=W[Z],Be=W[K],Ue=Be.x-ce.x,Ne=Be.y-ce.y;if(Math.abs(Ne)>Number.EPSILON){if(Ne<0&&(ce=W[K],Ue=-Ue,Be=W[Z],Ne=-Ne),U.y<ce.y||U.y>Be.y)continue;if(U.y===ce.y){if(U.x===ce.x)return!0;}else{var Te=Ne*(U.x-ce.x)-Ue*(U.y-ce.y);if(Te===0)return!0;if(Te<0)continue;oe=!oe;}}else{if(U.y!==ce.y)continue;if(Be.x<=U.x&&U.x<=ce.x||ce.x<=U.x&&U.x<=Be.x)return!0;}}return oe;}f(r,"isPointInsidePolygon");var i=Un.isClockWise,a=this.subPaths;if(a.length===0)return[];if(t===!0)return n(a);var o,s,l,c=[];if(a.length===1)return s=a[0],l=new lr(),l.curves=s.curves,c.push(l),c;var u=!i(a[0].getPoints());u=e?!u:u;var h=[],d=[],p=[],v=0,y;d[v]=void 0,p[v]=[];for(var m=0,x=a.length;m<x;m++)s=a[m],y=s.getPoints(),o=i(y),o=e?!o:o,o?(!u&&d[v]&&v++,d[v]={s:new lr(),p:y},d[v].s.curves=s.curves,u&&v++,p[v]=[]):p[v].push({h:s,p:y[0]});if(!d[0])return n(a);if(d.length>1){for(var _=!1,w=[],T=0,M=d.length;T<M;T++)h[T]=[];for(var T=0,M=d.length;T<M;T++)for(var R=p[T],S=0;S<R.length;S++){for(var A=R[S],I=!0,N=0;N<d.length;N++)r(A.p,d[N].p)&&(T!==N&&w.push({froms:T,tos:N,hole:S}),I?(I=!1,h[N].push(A)):_=!0);I&&h[T].push(A);}w.length>0&&(_||(p=h));}for(var F,m=0,z=d.length;m<z;m++){l=d[m].s,c.push(l),F=p[m];for(var H=0,B=F.length;H<B;H++)l.holes.push(F[H].h);}return c;}});function uh(e){this.type="Font",this.data=e;}f(uh,"Font");Object.assign(uh.prototype,{isFont:!0,generateShapes:function(e,t){t===void 0&&(t=100);for(var n=[],r=Ug(e,t,this.data),i=0,a=r.length;i<a;i++)Array.prototype.push.apply(n,r[i].toShapes());return n;}});function Ug(e,t,n){for(var r=Array.from?Array.from(e):String(e).split(""),i=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,o=[],s=0,l=0,c=0;c<r.length;c++){var u=r[c];if(u===`
`)s=0,l-=a;else{var h=zg(u,i,s,l,n);s+=h.offsetX,o.push(h.path);}}return o;}f(Ug,"createPaths");function zg(e,t,n,r,i){var a=i.glyphs[e]||i.glyphs["?"];if(!a){console.error('THREE.Font: character "'+e+'" does not exists in font family '+i.familyName+".");return;}var o=new ch(),s,l,c,u,h,d,p,v;if(a.o)for(var y=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),m=0,x=y.length;m<x;){var _=y[m++];switch(_){case"m":s=y[m++]*t+n,l=y[m++]*t+r,o.moveTo(s,l);break;case"l":s=y[m++]*t+n,l=y[m++]*t+r,o.lineTo(s,l);break;case"q":c=y[m++]*t+n,u=y[m++]*t+r,h=y[m++]*t+n,d=y[m++]*t+r,o.quadraticCurveTo(h,d,c,u);break;case"b":c=y[m++]*t+n,u=y[m++]*t+r,h=y[m++]*t+n,d=y[m++]*t+r,p=y[m++]*t+n,v=y[m++]*t+r,o.bezierCurveTo(h,d,p,v,c,u);break;}}return{offsetX:a.ha*t,path:o};}f(zg,"createPath");function Kc(e){je.call(this,e);}f(Kc,"FontLoader");Kc.prototype=Object.assign(Object.create(je.prototype),{constructor:Kc,load:function(e,t,n,r){var i=this,a=new ln(this.manager);a.setPath(this.path),a.load(e,function(o){var s;try{s=JSON.parse(o);}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),s=JSON.parse(o.substring(65,o.length-2));}var l=i.parse(s);t&&t(l);},n,r);},parse:function(e){return new uh(e);}});var qa,hh={getContext:function(){return qa===void 0&&(qa=new(window.AudioContext||window.webkitAudioContext)()),qa;},setContext:function(e){qa=e;}};function bl(e){je.call(this,e);}f(bl,"AudioLoader");bl.prototype=Object.assign(Object.create(je.prototype),{constructor:bl,load:function(e,t,n,r){var i=new ln(this.manager);i.setResponseType("arraybuffer"),i.setPath(this.path),i.load(e,function(a){var o=a.slice(0),s=hh.getContext();s.decodeAudioData(o,function(l){t(l);});},n,r);}});function Ul(){this.coefficients=[];for(var e=0;e<9;e++)this.coefficients.push(new E());}f(Ul,"SphericalHarmonics3");Object.assign(Ul.prototype,{isSphericalHarmonics3:!0,set:function(e){for(var t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this;},zero:function(){for(var e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this;},getAt:function(e,t){var n=e.x,r=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScale(a[1],.488603*r),t.addScale(a[2],.488603*i),t.addScale(a[3],.488603*n),t.addScale(a[4],1.092548*(n*r)),t.addScale(a[5],1.092548*(r*i)),t.addScale(a[6],.315392*(3*i*i-1)),t.addScale(a[7],1.092548*(n*i)),t.addScale(a[8],.546274*(n*n-r*r)),t;},getIrradianceAt:function(e,t){var n=e.x,r=e.y,i=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScale(a[1],2*.511664*r),t.addScale(a[2],2*.511664*i),t.addScale(a[3],2*.511664*n),t.addScale(a[4],2*.429043*n*r),t.addScale(a[5],2*.429043*r*i),t.addScale(a[6],.743125*i*i-.247708),t.addScale(a[7],2*.429043*n*i),t.addScale(a[8],.429043*(n*n-r*r)),t;},add:function(e){for(var t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this;},scale:function(e){for(var t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this;},lerp:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this;},equals:function(e){for(var t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0;},copy:function(e){return this.set(e.coefficients);},clone:function(){return new this.constructor().copy(this);},fromArray:function(e,t){t===void 0&&(t=0);for(var n=this.coefficients,r=0;r<9;r++)n[r].fromArray(e,t+r*3);return this;},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);for(var n=this.coefficients,r=0;r<9;r++)n[r].toArray(e,t+r*3);return e;}});Object.assign(Ul,{getBasisAt:function(e,t){var n=e.x,r=e.y,i=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*i,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*n*i,t[8]=.546274*(n*n-r*r);}});function on(e,t){Ke.call(this,void 0,t),this.sh=e!==void 0?e:new Ul();}f(on,"LightProbe");on.prototype=Object.assign(Object.create(Ke.prototype),{constructor:on,isLightProbe:!0,copy:function(e){return Ke.prototype.copy.call(this,e),this.sh.copy(e.sh),this.intensity=e.intensity,this;},toJSON:function(e){var t=Ke.prototype.toJSON.call(this,e);return t;}});function eu(e,t,n){on.call(this,void 0,n);var r=new se().set(e),i=new se().set(t),a=new E(r.r,r.g,r.b),o=new E(i.r,i.g,i.b),s=Math.sqrt(Math.PI),l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(l);}f(eu,"HemisphereLightProbe");eu.prototype=Object.assign(Object.create(on.prototype),{constructor:eu,isHemisphereLightProbe:!0,copy:function(e){return on.prototype.copy.call(this,e),this;},toJSON:function(e){var t=on.prototype.toJSON.call(this,e);return t;}});function tu(e,t){on.call(this,void 0,t);var n=new se().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI));}f(tu,"AmbientLightProbe");tu.prototype=Object.assign(Object.create(on.prototype),{constructor:tu,isAmbientLightProbe:!0,copy:function(e){return on.prototype.copy.call(this,e),this;},toJSON:function(e){var t=on.prototype.toJSON.call(this,e);return t;}});var nu=new De(),ru=new De();function Gg(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ht(),this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ht(),this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null};}f(Gg,"StereoCamera");Object.assign(Gg.prototype,{update:function(e){var t=this._cache,n=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(n){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;var r=e.projectionMatrix.clone(),i=t.eyeSep/2,a=i*t.near/t.focus,o=t.near*Math.tan(Pe.DEG2RAD*t.fov*.5)/t.zoom,s,l;ru.elements[12]=-i,nu.elements[12]=i,s=-o*t.aspect+a,l=o*t.aspect+a,r.elements[0]=2*t.near/(l-s),r.elements[8]=(l+s)/(l-s),this.cameraL.projectionMatrix.copy(r),s=-o*t.aspect-a,l=o*t.aspect-a,r.elements[0]=2*t.near/(l-s),r.elements[8]=(l+s)/(l-s),this.cameraR.projectionMatrix.copy(r);}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(ru),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(nu);}});function fh(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1;}f(fh,"Clock");Object.assign(fh.prototype,{start:function(){this.startTime=(typeof performance>"u"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0;},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1;},getElapsedTime:function(){return this.getDelta(),this.elapsedTime;},getDelta:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=(typeof performance>"u"?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e;}return e;}});var tr=new E(),iu=new gt(),Hg=new E(),nr=new E();function au(){ie.call(this),this.type="AudioListener",this.context=hh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new fh();}f(au,"AudioListener");au.prototype=Object.assign(Object.create(ie.prototype),{constructor:au,getInput:function(){return this.gain;},removeFilter:function(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this;},getFilter:function(){return this.filter;},setFilter:function(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this;},getMasterVolume:function(){return this.gain.gain.value;},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this;},updateMatrixWorld:function(e){ie.prototype.updateMatrixWorld.call(this,e);var t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(tr,iu,Hg),nr.set(0,0,-1).applyQuaternion(iu),t.positionX){var r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(tr.x,r),t.positionY.linearRampToValueAtTime(tr.y,r),t.positionZ.linearRampToValueAtTime(tr.z,r),t.forwardX.linearRampToValueAtTime(nr.x,r),t.forwardY.linearRampToValueAtTime(nr.y,r),t.forwardZ.linearRampToValueAtTime(nr.z,r),t.upX.linearRampToValueAtTime(n.x,r),t.upY.linearRampToValueAtTime(n.y,r),t.upZ.linearRampToValueAtTime(n.z,r);}else t.setPosition(tr.x,tr.y,tr.z),t.setOrientation(nr.x,nr.y,nr.z,n.x,n.y,n.z);}});function sa(e){ie.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._pausedAt=0,this.filters=[];}f(sa,"Audio");sa.prototype=Object.assign(Object.create(ie.prototype),{constructor:sa,getOutput:function(){return this.gain;},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this;},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this;},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this;},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this;},play:function(e){if(e===void 0&&(e=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return;}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return;}this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._pausedAt+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect();},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return;}return this.isPlaying===!0&&(this._pausedAt=(this.context.currentTime-this._startedAt)*this.playbackRate,this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return;}return this._pausedAt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput());}else this.source.connect(this.getOutput());return this;},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput());}else this.source.disconnect(this.getOutput());return this;},getFilters:function(){return this.filters;},setFilters:function(e){return e||(e=[]),this.isPlaying===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this;},setDetune:function(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this;},getDetune:function(){return this.detune;},getFilter:function(){return this.getFilters()[0];},setFilter:function(e){return this.setFilters(e?[e]:[]);},setPlaybackRate:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return;}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;},getPlaybackRate:function(){return this.playbackRate;},onEnded:function(){this.isPlaying=!1;},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop;},setLoop:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return;}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this;},setLoopStart:function(e){return this.loopStart=e,this;},setLoopEnd:function(e){return this.loopEnd=e,this;},getVolume:function(){return this.gain.gain.value;},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this;}});var rr=new E(),ou=new gt(),Vg=new E(),ir=new E();function su(e){sa.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain);}f(su,"PositionalAudio");su.prototype=Object.assign(Object.create(sa.prototype),{constructor:su,getOutput:function(){return this.panner;},getRefDistance:function(){return this.panner.refDistance;},setRefDistance:function(e){return this.panner.refDistance=e,this;},getRolloffFactor:function(){return this.panner.rolloffFactor;},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this;},getDistanceModel:function(){return this.panner.distanceModel;},setDistanceModel:function(e){return this.panner.distanceModel=e,this;},getMaxDistance:function(){return this.panner.maxDistance;},setMaxDistance:function(e){return this.panner.maxDistance=e,this;},setDirectionalCone:function(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this;},updateMatrixWorld:function(e){if(ie.prototype.updateMatrixWorld.call(this,e),!(this.hasPlaybackControl===!0&&this.isPlaying===!1)){this.matrixWorld.decompose(rr,ou,Vg),ir.set(0,0,1).applyQuaternion(ou);var t=this.panner;if(t.positionX){var n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(rr.x,n),t.positionY.linearRampToValueAtTime(rr.y,n),t.positionZ.linearRampToValueAtTime(rr.z,n),t.orientationX.linearRampToValueAtTime(ir.x,n),t.orientationY.linearRampToValueAtTime(ir.y,n),t.orientationZ.linearRampToValueAtTime(ir.z,n);}else t.setPosition(rr.x,rr.y,rr.z),t.setOrientation(ir.x,ir.y,ir.z);}}});function dh(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t!==void 0?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser);}f(dh,"AudioAnalyser");Object.assign(dh.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data;},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length;}});function ph(e,t,n){this.binding=e,this.valueSize=n;var r=Float64Array,i;switch(t){case"quaternion":i=this._slerp;break;case"string":case"bool":r=Array,i=this._select;break;default:i=this._lerp;}this.buffer=new r(n*4),this._mixBufferRegion=i,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0;}f(ph,"PropertyMixer");Object.assign(ph.prototype,{accumulate:function(e,t){var n=this.buffer,r=this.valueSize,i=e*r+r,a=this.cumulativeWeight;if(a===0){for(var o=0;o!==r;++o)n[i+o]=n[o];a=t;}else{a+=t;var s=t/a;this._mixBufferRegion(n,i,0,s,r);}this.cumulativeWeight=a;},apply:function(e){var t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,i<1){var o=t*3;this._mixBufferRegion(n,r,o,1-i,t);}for(var s=t,l=t+t;s!==l;++s)if(n[s]!==n[s+t]){a.setValue(n,r);break;}},saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,r=n*3;e.getValue(t,r);for(var i=n,a=r;i!==a;++i)t[i]=t[r+i%n];this.cumulativeWeight=0;},restoreOriginalState:function(){var e=this.valueSize*3;this.binding.setValue(this.buffer,e);},_select:function(e,t,n,r,i){if(r>=.5)for(var a=0;a!==i;++a)e[t+a]=e[n+a];},_slerp:function(e,t,n,r){gt.slerpFlat(e,t,e,t,e,n,r);},_lerp:function(e,t,n,r,i){for(var a=1-r,o=0;o!==i;++o){var s=t+o;e[s]=e[s]*a+e[n+o]*r;}}});var zl="\\[\\]\\.:\\/",kg=new RegExp("["+zl+"]","g"),Gl="[^"+zl+"]",Wg="[^"+zl.replace("\\.","")+"]",jg=/((?:WC+[\/:])*)/.source.replace("WC",Gl),qg=/(WCOD+)?/.source.replace("WCOD",Wg),Xg=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Gl),Yg=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Gl),Zg=new RegExp("^"+jg+qg+Xg+Yg+"$"),Jg=["material","materials","bones"];function vh(e,t,n){var r=n||Tt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r);}f(vh,"Composite");Object.assign(vh.prototype,{getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(e,t);},setValue:function(e,t){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t);},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind();},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind();}});function Tt(e,t,n){this.path=t,this.parsedPath=n||Tt.parseTrackName(t),this.node=Tt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e;}f(Tt,"PropertyBinding");Object.assign(Tt,{Composite:vh,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new Tt.Composite(e,t,n):new Tt(e,t,n);},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(kg,"");},parseTrackName:function(e){var t=Zg.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){var i=n.nodeName.substring(r+1);Jg.indexOf(i)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=i);}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n;},findNode:function(e,t){if(!t||t===""||t==="root"||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=e.skeleton.getBoneByName(t);if(n!==void 0)return n;}if(e.children){var r=f(function(a){for(var o=0;o<a.length;o++){var s=a[o];if(s.name===t||s.uuid===t)return s;var l=r(s.children);if(l)return l;}return null;},"searchNodeSubtree"),i=r(e.children);if(i)return i;}return null;}});Object.assign(Tt.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[f(function(t,n){t[n]=this.node[this.propertyName];},"getValue_direct"),f(function(t,n){for(var r=this.resolvedProperty,i=0,a=r.length;i!==a;++i)t[n++]=r[i];},"getValue_array"),f(function(t,n){t[n]=this.resolvedProperty[this.propertyIndex];},"getValue_arrayElement"),f(function(t,n){this.resolvedProperty.toArray(t,n);},"getValue_toArray")],SetterByBindingTypeAndVersioning:[[f(function(t,n){this.targetObject[this.propertyName]=t[n];},"setValue_direct"),f(function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0;},"setValue_direct_setNeedsUpdate"),f(function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0;},"setValue_direct_setMatrixWorldNeedsUpdate")],[f(function(t,n){for(var r=this.resolvedProperty,i=0,a=r.length;i!==a;++i)r[i]=t[n++];},"setValue_array"),f(function(t,n){for(var r=this.resolvedProperty,i=0,a=r.length;i!==a;++i)r[i]=t[n++];this.targetObject.needsUpdate=!0;},"setValue_array_setNeedsUpdate"),f(function(t,n){for(var r=this.resolvedProperty,i=0,a=r.length;i!==a;++i)r[i]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0;},"setValue_array_setMatrixWorldNeedsUpdate")],[f(function(t,n){this.resolvedProperty[this.propertyIndex]=t[n];},"setValue_arrayElement"),f(function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0;},"setValue_arrayElement_setNeedsUpdate"),f(function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0;},"setValue_arrayElement_setMatrixWorldNeedsUpdate")],[f(function(t,n){this.resolvedProperty.fromArray(t,n);},"setValue_fromArray"),f(function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0;},"setValue_fromArray_setNeedsUpdate"),f(function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0;},"setValue_fromArray_setMatrixWorldNeedsUpdate")]],getValue:f(function(t,n){this.bind(),this.getValue(t,n);},"getValue_unbound"),setValue:f(function(t,n){this.bind(),this.setValue(t,n);},"getValue_unbound"),bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;if(e||(e=Tt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return;}if(n){var a=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return;}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return;}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return;}e=e.skeleton.bones;for(var o=0;o<e.length;o++)if(e[o].name===a){a=o;break;}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return;}e=e[n];}if(a!==void 0){if(e[a]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return;}e=e[a];}}var s=e[r];if(s===void 0){var l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+r+" but it wasn't found.",e);return;}var c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);var u=this.BindingType.Direct;if(i!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return;}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return;}for(var o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(e.geometry.morphAttributes.position[o].name===i){i=o;break;}}else{if(!e.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return;}for(var o=0;o<this.node.geometry.morphTargets.length;o++)if(e.geometry.morphTargets[o].name===i){i=o;break;}}}u=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i;}else s.fromArray!==void 0&&s.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(u=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c];},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound;}});Object.assign(Tt.prototype,{_getValue_unbound:Tt.prototype.getValue,_setValue_unbound:Tt.prototype.setValue});function $g(){this.uuid=Pe.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var e={};this._indicesByUUID=e;for(var t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length;},get inUse(){return this.total-r.nCachedObjects_;}},get bindingsPerObject(){return r._bindings.length;}};}f($g,"AnimationObjectGroup");Object.assign($g.prototype,{isAnimationObjectGroup:!0,add:function(){for(var e=this._objects,t=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,l=void 0,c=0,u=arguments.length;c!==u;++c){var h=arguments[c],d=h.uuid,p=r[d];if(p===void 0){p=t++,r[d]=p,e.push(h);for(var v=0,y=s;v!==y;++v)o[v].push(new Tt(h,i[v],a[v]));}else if(p<n){l=e[p];var m=--n,x=e[m];r[x.uuid]=p,e[p]=x,r[d]=m,e[m]=h;for(var v=0,y=s;v!==y;++v){var _=o[v],w=_[m],T=_[p];_[p]=w,T===void 0&&(T=new Tt(h,i[v],a[v])),_[m]=T;}}else e[p]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");}this.nCachedObjects_=n;},remove:function(){for(var e=this._objects,t=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,i=r.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],l=s.uuid,c=n[l];if(c!==void 0&&c>=t){var u=t++,h=e[u];n[h.uuid]=c,e[c]=h,n[l]=u,e[u]=s;for(var d=0,p=i;d!==p;++d){var v=r[d],y=v[u],m=v[c];v[c]=y,v[u]=m;}}}this.nCachedObjects_=t;},uncache:function(){for(var e=this._objects,t=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,i=this._bindings,a=i.length,o=0,s=arguments.length;o!==s;++o){var l=arguments[o],c=l.uuid,u=r[c];if(u!==void 0)if(delete r[c],u<n){var h=--n,d=e[h],p=--t,v=e[p];r[d.uuid]=u,e[u]=d,r[v.uuid]=h,e[h]=v,e.pop();for(var y=0,m=a;y!==m;++y){var x=i[y],_=x[h],w=x[p];x[u]=_,x[h]=w,x.pop();}}else{var p=--t,v=e[p];r[v.uuid]=u,e[u]=v,e.pop();for(var y=0,m=a;y!==m;++y){var x=i[y];x[u]=x[p],x.pop();}}}this.nCachedObjects_=n;},subscribe_:function(e,t){var n=this._bindingsIndicesByPath,r=n[e],i=this._bindings;if(r!==void 0)return i[r];var a=this._paths,o=this._parsedPaths,s=this._objects,l=s.length,c=this.nCachedObjects_,u=new Array(l);r=i.length,n[e]=r,a.push(e),o.push(t),i.push(u);for(var h=c,d=s.length;h!==d;++h){var p=s[h];u[h]=new Tt(p,e,t);}return u;},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){var r=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o],l=e[o];t[l]=n,a[n]=s,a.pop(),i[n]=i[o],i.pop(),r[n]=r[o],r.pop();}}});function mh(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var r=t.tracks,i=r.length,a=new Array(i),o={endingStart:Yr,endingEnd:Yr},s=0;s!==i;++s){var l=r[s].createInterpolant(null);a[s]=l,l.settings=o;}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Zf,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0;}f(mh,"AnimationAction");Object.assign(mh.prototype,{play:function(){return this._mixer._activateAction(this),this;},stop:function(){return this._mixer._deactivateAction(this),this.reset();},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping();},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);},isScheduled:function(){return this._mixer._isActiveAction(this);},startAt:function(e){return this._startTime=e,this;},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this;},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading();},getEffectiveWeight:function(){return this._effectiveWeight;},fadeIn:function(e){return this._scheduleFading(e,0,1);},fadeOut:function(e){return this._scheduleFading(e,1,0);},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var r=this._clip.duration,i=e._clip.duration,a=i/r,o=r/i;e.warp(1,a,t),this.warp(o,1,t);}return this;},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n);},stopFading:function(){var e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this;},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping();},getEffectiveTimeScale:function(){return this._effectiveTimeScale;},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping();},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping();},halt:function(e){return this.warp(this._effectiveTimeScale,0,e);},warp:function(e,t,n){var r=this._mixer,i=r.time,a=this._timeScaleInterpolant,o=this.timeScale;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,l=a.sampleValues;return s[0]=i,s[1]=i+n,l[0]=e/o,l[1]=t/o,this;},stopWarping:function(){var e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this;},getMixer:function(){return this._mixer;},getClip:function(){return this._clip;},getRoot:function(){return this._localRoot||this._mixer._root;},_update:function(e,t,n,r){if(!this.enabled){this._updateWeight(e);return;}var i=this._startTime;if(i!==null){var a=(e-i)*n;if(a<0||n===0)return;this._startTime=null,t=n*a;}t*=this._updateTimeScale(e);var o=this._updateTime(t),s=this._updateWeight(e);if(s>0)for(var l=this._interpolants,c=this._propertyBindings,u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,s);},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(n!==null){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1));}}return this._effectiveWeight=t,t;},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(n!==null){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t);}}return this._effectiveTimeScale=t,t;},_updateTime:function(e){var t=this.time+e,n=this._clip.duration,r=this.loop,i=this._loopCount,a=r===Jf;if(e===0)return i===-1?t:a&&(i&1)===1?n-t:t;if(r===Yf){i===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=n)t=n;else if(t<0)t=0;else{this.time=t;break e;}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1});}}else{if(i===-1&&(e>=0?(i=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),t>=n||t<0){var o=Math.floor(t/n);t-=n*o,i+=Math.abs(o);var s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(s===1){var l=e<0;this._setEndings(l,!l,a);}else this._setEndings(!1,!1,a);this._loopCount=i,this.time=t,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o});}}else this.time=t;if(a&&(i&1)===1)return n-t;}return t;},_setEndings:function(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=Hr,r.endingEnd=Hr):(e?r.endingStart=this.zeroSlopeAtStart?Hr:Yr:r.endingStart=lo,t?r.endingEnd=this.zeroSlopeAtEnd?Hr:Yr:r.endingEnd=lo);},_scheduleFading:function(e,t,n){var r=this._mixer,i=r.time,a=this._weightInterpolant;a===null&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=t,o[1]=i+e,s[1]=n,this;}});function lu(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1;}f(lu,"AnimationMixer");lu.prototype=Object.assign(Object.create(Wt.prototype),{constructor:lu,_bindAction:function(e,t){var n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,a=e._propertyBindings,o=e._interpolants,s=n.uuid,l=this._bindingsByRootAndName,c=l[s];c===void 0&&(c={},l[s]=c);for(var u=0;u!==i;++u){var h=r[u],d=h.name,p=c[d];if(p!==void 0)a[u]=p;else{if(p=a[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,s,d));continue;}var v=t&&t._propertyBindings[u].binding.parsedPath;p=new ph(Tt.create(n,d,v),h.ValueTypeName,h.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,s,d),a[u]=p;}o[u].resultBuffer=p.buffer;}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t);}for(var i=e._propertyBindings,a=0,o=i.length;a!==o;++a){var s=i[a];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState());}this._lendAction(e);}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];--i.useCount===0&&(i.restoreOriginalState(),this._takeBackBinding(i));}this._takeBackAction(e);}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length;},get inUse(){return e._nActiveActions;}},bindings:{get total(){return e._bindings.length;},get inUse(){return e._nActiveBindings;}},controlInterpolants:{get total(){return e._controlInterpolants.length;},get inUse(){return e._nActiveControlInterpolants;}}};},_isActiveAction:function(e){var t=e._cacheIndex;return t!==null&&t<this._nActiveActions;},_addInactiveAction:function(e,t,n){var r=this._actions,i=this._actionsByClip,a=i[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{var o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e);}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e;},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,l=s[s.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,s[c]=l,s.pop(),e._byClipCacheIndex=null;var u=o.actionByRoot,h=(e._localRoot||this._root).uuid;delete u[h],s.length===0&&delete a[i],this._removeInactiveBindingsForAction(e);},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,n=0,r=t.length;n!==r;++n){var i=t[n];--i.referenceCount===0&&this._removeInactiveBinding(i);}},_lendAction:function(e){var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i;},_takeBackAction:function(e){var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i;},_addInactiveBinding:function(e,t,n){var r=this._bindingsByRootAndName,i=r[t],a=this._bindings;i===void 0&&(i={},r[t]=i),i[n]=e,e._cacheIndex=a.length,a.push(e);},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,o=a[r],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete o[i],Object.keys(o).length===0&&delete a[r];},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i;},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i;},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return n===void 0&&(n=new Fo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n;},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i;},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t){var n=t||this._root,r=n.uuid,i=typeof e=="string"?Jt.findByName(n,e):e,a=i!==null?i.uuid:e,o=this._actionsByClip[a],s=null;if(o!==void 0){var l=o.actionByRoot[r];if(l!==void 0)return l;s=o.knownActions[0],i===null&&(i=s._clip);}if(i===null)return null;var c=new mh(this,i,t);return this._bindAction(c,s),this._addInactiveAction(c,a,r),c;},existingAction:function(e,t){var n=t||this._root,r=n.uuid,i=typeof e=="string"?Jt.findByName(n,e):e,a=i?i.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[r]||null;},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==t;++i)e[i].reset();for(var i=0;i!==r;++i)n[i].useCount=0;return this;},update:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1,o=0;o!==n;++o){var s=t[o];s._update(r,e,i,a);}for(var l=this._bindings,c=this._nActiveBindings,o=0;o!==c;++o)l[o].apply(a);return this;},setTime:function(e){this.time=0;for(var t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e);},getRoot:function(){return this._root;},uncacheClip:function(e){var t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(i!==void 0){for(var a=i.knownActions,o=0,s=a.length;o!==s;++o){var l=a[o];this._deactivateAction(l);var c=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=c,t[c]=u,t.pop(),this._removeInactiveBindingsForAction(l);}delete r[n];}},uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot,a=i[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a));}var o=this._bindingsByRootAndName,s=o[t];if(s!==void 0)for(var l in s){var c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c);}},uncacheAction:function(e,t){var n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n));}});function wl(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e;}f(wl,"Uniform");wl.prototype.clone=function(){return new wl(this.value.clone===void 0?this.value:this.value.clone());};function cu(e,t,n){Vn.call(this,e,t),this.meshPerAttribute=n||1;}f(cu,"InstancedInterleavedBuffer");cu.prototype=Object.assign(Object.create(Vn.prototype),{constructor:cu,isInstancedInterleavedBuffer:!0,copy:function(e){return Vn.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this;}});function Qg(e,t,n,r){this.ray=new vi(e,t),this.near=n||0,this.far=r||1/0,this.camera=null,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points;}}});}f(Qg,"Raycaster");function uu(e,t){return e.distance-t.distance;}f(uu,"ascSort");function Ml(e,t,n,r){if(e.visible!==!1&&(e.raycast(t,n),r===!0))for(var i=e.children,a=0,o=i.length;a<o;a++)Ml(i[a],t,n,!0);}f(Ml,"intersectObject");Object.assign(Qg.prototype,{linePrecision:1,set:function(e,t){this.ray.set(e,t);},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.");},intersectObject:function(e,t,n){var r=n||[];return Ml(e,this,r,t),r.sort(uu),r;},intersectObjects:function(e,t,n){var r=n||[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(var i=0,a=e.length;i<a;i++)Ml(e[i],this,r,t);return r.sort(uu),r;}});function Jo(e,t,n){return this.radius=e!==void 0?e:1,this.phi=t!==void 0?t:0,this.theta=n!==void 0?n:0,this;}f(Jo,"Spherical");Object.assign(Jo.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this;},makeSafe:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this;},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z);},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Pe.clamp(t/this.radius,-1,1))),this;}});function Kg(e,t,n){return this.radius=e!==void 0?e:1,this.theta=t!==void 0?t:0,this.y=n!==void 0?n:0,this;}f(Kg,"Cylindrical");Object.assign(Kg.prototype,{set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this;},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z);},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this;}});var hu=new G();function gh(e,t){this.min=e!==void 0?e:new G(1/0,1/0),this.max=t!==void 0?t:new G(-1/0,-1/0);}f(gh,"Box2");Object.assign(gh.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this;},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this;},setFromCenterAndSize:function(e,t){var n=hu.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this;},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this;},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y;},getCenter:function(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new G()),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5);},getSize:function(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new G()),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min);},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this;},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this;},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this;},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y);},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y;},getParameter:function(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new G()),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y));},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y);},clampPoint:function(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new G()),t.copy(e).clamp(this.min,this.max);},distanceToPoint:function(e){var t=hu.copy(e).clamp(this.min,this.max);return t.sub(e).length();},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this;},union:function(e){return this.min.min(e.min),this.max.max(e.max),this;},translate:function(e){return this.min.add(e),this.max.add(e),this;},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max);}});var fu=new E(),Xa=new E();function yh(e,t){this.start=e!==void 0?e:new E(),this.end=t!==void 0?t:new E();}f(yh,"Line3");Object.assign(yh.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this;},clone:function(){return new this.constructor().copy(this);},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this;},getCenter:function(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new E()),e.addVectors(this.start,this.end).multiplyScalar(.5);},delta:function(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new E()),e.subVectors(this.end,this.start);},distanceSq:function(){return this.start.distanceToSquared(this.end);},distance:function(){return this.start.distanceTo(this.end);},at:function(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new E()),this.delta(t).multiplyScalar(e).add(this.start);},closestPointToPointParameter:function(e,t){fu.subVectors(e,this.start),Xa.subVectors(this.end,this.start);var n=Xa.dot(Xa),r=Xa.dot(fu),i=r/n;return t&&(i=Pe.clamp(i,0,1)),i;},closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t);return n===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new E()),this.delta(n).multiplyScalar(r).add(this.start);},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this;},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end);}});function Uo(e){ie.call(this),this.material=e,this.render=function(){};}f(Uo,"ImmediateRenderObject");Uo.prototype=Object.create(ie.prototype);Uo.prototype.constructor=Uo;Uo.prototype.isImmediateRenderObject=!0;var du=new E();function la(e,t){ie.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;for(var n=new le(),r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,a=1,o=32;i<o;i++,a++){var s=i/o*Math.PI*2,l=a/o*Math.PI*2;r.push(Math.cos(s),Math.sin(s),1,Math.cos(l),Math.sin(l),1);}n.setAttribute("position",new re(r,3));var c=new ot({fog:!1});this.cone=new ct(n,c),this.add(this.cone),this.update();}f(la,"SpotLightHelper");la.prototype=Object.create(ie.prototype);la.prototype.constructor=la;la.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose();};la.prototype.update=function(){this.light.updateMatrixWorld();var e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),du.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(du),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color);};var Dn=new E(),Ya=new De(),Ls=new De();function xh(e){var t=[];e&&e.isBone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,xh(e.children[n]));return t;}f(xh,"getBoneList");function ca(e){for(var t=xh(e),n=new le(),r=[],i=[],a=new se(0,0,1),o=new se(0,1,0),s=0;s<t.length;s++){var l=t[s];l.parent&&l.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(o.r,o.g,o.b));}n.setAttribute("position",new re(r,3)),n.setAttribute("color",new re(i,3));var c=new ot({vertexColors:va,depthTest:!1,depthWrite:!1,transparent:!0});ct.call(this,n,c),this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;}f(ca,"SkeletonHelper");ca.prototype=Object.create(ct.prototype);ca.prototype.constructor=ca;ca.prototype.updateMatrixWorld=function(e){var t=this.bones,n=this.geometry,r=n.getAttribute("position");Ls.getInverse(this.root.matrixWorld);for(var i=0,a=0;i<t.length;i++){var o=t[i];o.parent&&o.parent.isBone&&(Ya.multiplyMatrices(Ls,o.matrixWorld),Dn.setFromMatrixPosition(Ya),r.setXYZ(a,Dn.x,Dn.y,Dn.z),Ya.multiplyMatrices(Ls,o.parent.matrixWorld),Dn.setFromMatrixPosition(Ya),r.setXYZ(a+1,Dn.x,Dn.y,Dn.z),a+=2);}n.getAttribute("position").needsUpdate=!0,ie.prototype.updateMatrixWorld.call(this,e);};function ua(e,t,n){this.light=e,this.light.updateMatrixWorld(),this.color=n;var r=new ti(t,4,2),i=new $t({wireframe:!0,fog:!1});nt.call(this,r,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update();}f(ua,"PointLightHelper");ua.prototype=Object.create(nt.prototype);ua.prototype.constructor=ua;ua.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose();};ua.prototype.update=function(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color);};var ey=new E(),pu=new se(),vu=new se();function ha(e,t,n){ie.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var r=new Qr(t);r.rotateY(Math.PI*.5),this.material=new $t({wireframe:!0,fog:!1}),this.color===void 0&&(this.material.vertexColors=va);var i=r.getAttribute("position"),a=new Float32Array(i.count*3);r.setAttribute("color",new we(a,3)),this.add(new nt(r,this.material)),this.update();}f(ha,"HemisphereLightHelper");ha.prototype=Object.create(ie.prototype);ha.prototype.constructor=ha;ha.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose();};ha.prototype.update=function(){var e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{var t=e.geometry.getAttribute("color");pu.copy(this.light.color),vu.copy(this.light.groundColor);for(var n=0,r=t.count;n<r;n++){var i=n<r/2?pu:vu;t.setXYZ(n,i.r,i.g,i.b);}t.needsUpdate=!0;}e.lookAt(ey.setFromMatrixPosition(this.light.matrixWorld).negate());};function El(e,t,n,r){e=e||10,t=t||10,n=new se(n!==void 0?n:4473924),r=new se(r!==void 0?r:8947848);for(var i=t/2,a=e/t,o=e/2,s=[],l=[],c=0,u=0,h=-o;c<=t;c++,h+=a){s.push(-o,0,h,o,0,h),s.push(h,0,-o,h,0,o);var d=c===i?n:r;d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3;}var p=new le();p.setAttribute("position",new re(s,3)),p.setAttribute("color",new re(l,3));var v=new ot({vertexColors:va});ct.call(this,p,v);}f(El,"GridHelper");El.prototype=Object.assign(Object.create(ct.prototype),{constructor:El,copy:function(e){return ct.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this;},clone:function(){return new this.constructor().copy(this);}});function Tl(e,t,n,r,i,a){e=e||10,t=t||16,n=n||8,r=r||64,i=new se(i!==void 0?i:4473924),a=new se(a!==void 0?a:8947848);var o=[],s=[],l,c,u,h,d,p,v;for(h=0;h<=t;h++)u=h/t*(Math.PI*2),l=Math.sin(u)*e,c=Math.cos(u)*e,o.push(0,0,0),o.push(l,0,c),v=h&1?i:a,s.push(v.r,v.g,v.b),s.push(v.r,v.g,v.b);for(h=0;h<=n;h++)for(v=h&1?i:a,p=e-e/n*h,d=0;d<r;d++)u=d/r*(Math.PI*2),l=Math.sin(u)*p,c=Math.cos(u)*p,o.push(l,0,c),s.push(v.r,v.g,v.b),u=(d+1)/r*(Math.PI*2),l=Math.sin(u)*p,c=Math.cos(u)*p,o.push(l,0,c),s.push(v.r,v.g,v.b);var y=new le();y.setAttribute("position",new re(o,3)),y.setAttribute("color",new re(s,3));var m=new ot({vertexColors:va});ct.call(this,y,m);}f(Tl,"PolarGridHelper");Tl.prototype=Object.create(ct.prototype);Tl.prototype.constructor=Tl;var mu=new E(),Za=new E(),gu=new E();function fa(e,t,n){ie.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);var r=new le();r.setAttribute("position",new re([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var i=new ot({fog:!1});this.lightPlane=new Vt(r,i),this.add(this.lightPlane),r=new le(),r.setAttribute("position",new re([0,0,0,0,0,1],3)),this.targetLine=new Vt(r,i),this.add(this.targetLine),this.update();}f(fa,"DirectionalLightHelper");fa.prototype=Object.create(ie.prototype);fa.prototype.constructor=fa;fa.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose();};fa.prototype.update=function(){mu.setFromMatrixPosition(this.light.matrixWorld),Za.setFromMatrixPosition(this.light.target.matrixWorld),gu.subVectors(Za,mu),this.lightPlane.lookAt(Za),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Za),this.targetLine.scale.z=gu.length();};var Ja=new E(),rt=new bn();function zo(e){var t=new le(),n=new ot({color:16777215,vertexColors:Wh}),r=[],i=[],a={},o=new se(16755200),s=new se(16711680),l=new se(43775),c=new se(16777215),u=new se(3355443);h("n1","n2",o),h("n2","n4",o),h("n4","n3",o),h("n3","n1",o),h("f1","f2",o),h("f2","f4",o),h("f4","f3",o),h("f3","f1",o),h("n1","f1",o),h("n2","f2",o),h("n3","f3",o),h("n4","f4",o),h("p","n1",s),h("p","n2",s),h("p","n3",s),h("p","n4",s),h("u1","u2",l),h("u2","u3",l),h("u3","u1",l),h("c","t",c),h("p","c",u),h("cn1","cn2",u),h("cn3","cn4",u),h("cf1","cf2",u),h("cf3","cf4",u);function h(p,v,y){d(p,y),d(v,y);}f(h,"addLine");function d(p,v){r.push(0,0,0),i.push(v.r,v.g,v.b),a[p]===void 0&&(a[p]=[]),a[p].push(r.length/3-1);}f(d,"addPoint"),t.setAttribute("position",new re(r,3)),t.setAttribute("color",new re(i,3)),ct.call(this,t,n),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();}f(zo,"CameraHelper");zo.prototype=Object.create(ct.prototype);zo.prototype.constructor=zo;zo.prototype.update=function(){var e=this.geometry,t=this.pointMap,n=1,r=1;rt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),at("c",t,e,rt,0,0,-1),at("t",t,e,rt,0,0,1),at("n1",t,e,rt,-n,-r,-1),at("n2",t,e,rt,n,-r,-1),at("n3",t,e,rt,-n,r,-1),at("n4",t,e,rt,n,r,-1),at("f1",t,e,rt,-n,-r,1),at("f2",t,e,rt,n,-r,1),at("f3",t,e,rt,-n,r,1),at("f4",t,e,rt,n,r,1),at("u1",t,e,rt,n*.7,r*1.1,-1),at("u2",t,e,rt,-n*.7,r*1.1,-1),at("u3",t,e,rt,0,r*2,-1),at("cf1",t,e,rt,-n,0,1),at("cf2",t,e,rt,n,0,1),at("cf3",t,e,rt,0,-r,1),at("cf4",t,e,rt,0,r,1),at("cn1",t,e,rt,-n,0,-1),at("cn2",t,e,rt,n,0,-1),at("cn3",t,e,rt,0,-r,-1),at("cn4",t,e,rt,0,r,-1),e.getAttribute("position").needsUpdate=!0;};function at(e,t,n,r,i,a,o){Ja.set(i,a,o).unproject(r);var s=t[e];if(s!==void 0)for(var l=n.getAttribute("position"),c=0,u=s.length;c<u;c++)l.setXYZ(s[c],Ja.x,Ja.y,Ja.z);}f(at,"setPoint");var $a=new pn();function gr(e,t){this.object=e,t===void 0&&(t=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),i=new le();i.setIndex(new we(n,1)),i.setAttribute("position",new we(r,3)),ct.call(this,i,new ot({color:t})),this.matrixAutoUpdate=!1,this.update();}f(gr,"BoxHelper");gr.prototype=Object.create(ct.prototype);gr.prototype.constructor=gr;gr.prototype.update=function(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&$a.setFromObject(this.object),!$a.isEmpty()){var t=$a.min,n=$a.max,r=this.geometry.attributes.position,i=r.array;i[0]=n.x,i[1]=n.y,i[2]=n.z,i[3]=t.x,i[4]=n.y,i[5]=n.z,i[6]=t.x,i[7]=t.y,i[8]=n.z,i[9]=n.x,i[10]=t.y,i[11]=n.z,i[12]=n.x,i[13]=n.y,i[14]=t.z,i[15]=t.x,i[16]=n.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=n.x,i[22]=t.y,i[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere();}};gr.prototype.setFromObject=function(e){return this.object=e,this.update(),this;};gr.prototype.copy=function(e){return ct.prototype.copy.call(this,e),this.object=e.object,this;};gr.prototype.clone=function(){return new this.constructor().copy(this);};function Go(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],i=new le();i.setIndex(new we(n,1)),i.setAttribute("position",new re(r,3)),ct.call(this,i,new ot({color:t})),this.geometry.computeBoundingSphere();}f(Go,"Box3Helper");Go.prototype=Object.create(ct.prototype);Go.prototype.constructor=Go;Go.prototype.updateMatrixWorld=function(e){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),ie.prototype.updateMatrixWorld.call(this,e));};function Ho(e,t,n){this.type="PlaneHelper",this.plane=e,this.size=t===void 0?1:t;var r=n!==void 0?n:16776960,i=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],a=new le();a.setAttribute("position",new re(i,3)),a.computeBoundingSphere(),Vt.call(this,a,new ot({color:r}));var o=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],s=new le();s.setAttribute("position",new re(o,3)),s.computeBoundingSphere(),this.add(new nt(s,new $t({color:r,opacity:.2,transparent:!0,depthWrite:!1})));}f(Ho,"PlaneHelper");Ho.prototype=Object.create(Vt.prototype);Ho.prototype.constructor=Ho;Ho.prototype.updateMatrixWorld=function(e){var t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?ft:pa,this.lookAt(this.plane.normal),ie.prototype.updateMatrixWorld.call(this,e);};var yu=new E(),Qa,Rs;function jn(e,t,n,r,i,a){ie.call(this),e===void 0&&(e=new E(0,0,1)),t===void 0&&(t=new E(0,0,0)),n===void 0&&(n=1),r===void 0&&(r=16776960),i===void 0&&(i=.2*n),a===void 0&&(a=.2*i),Qa===void 0&&(Qa=new le(),Qa.setAttribute("position",new re([0,0,0,0,1,0],3)),Rs=new kn(0,.5,1,5,1),Rs.translate(0,-.5,0)),this.position.copy(t),this.line=new Vt(Qa,new ot({color:r})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new nt(Rs,new $t({color:r})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a);}f(jn,"ArrowHelper");jn.prototype=Object.create(ie.prototype);jn.prototype.constructor=jn;jn.prototype.setDirection=function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{yu.set(e.z,0,-e.x).normalize();var t=Math.acos(e.y);this.quaternion.setFromAxisAngle(yu,t);}};jn.prototype.setLength=function(e,t,n){t===void 0&&(t=.2*e),n===void 0&&(n=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix();};jn.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e);};jn.prototype.copy=function(e){return ie.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this;};jn.prototype.clone=function(){return new this.constructor().copy(this);};function Sl(e){e=e||1;var t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new le();r.setAttribute("position",new re(t,3)),r.setAttribute("color",new re(n,3));var i=new ot({vertexColors:va});ct.call(this,r,i);}f(Sl,"AxesHelper");Sl.prototype=Object.create(ct.prototype);Sl.prototype.constructor=Sl;var Xr=4,zn=8,an=Math.pow(2,zn),_h=[.125,.215,.35,.446,.526,.582],bh=zn-Xr+1+_h.length,Gr=20,dn={[It]:0,[Nl]:1,[Fl]:2,[Bu]:3,[Uu]:4,[zu]:5,[Fu]:6},Hl=new oa(),Vo=iy(Gr),On=null,In=null,{_lodPlanes:da,_sizeLods:xu,_sigmas:Ka}=ty(),ko=null,Ve=null,ar=(1+Math.sqrt(5))/2,Ur=1/ar,_u=[new E(1,1,1),new E(-1,1,1),new E(1,1,-1),new E(-1,1,-1),new E(0,ar,Ur),new E(0,ar,-Ur),new E(Ur,0,ar),new E(-Ur,0,ar),new E(ar,Ur,0),new E(-ar,Ur,0)];function bu(e){Ve=e,Al(Vo);}f(bu,"PMREMGenerator");bu.prototype={constructor:bu,fromScene:function(e,t=0,n=.1,r=100){var i=wu();return ny(e,n,r,i),t>0&&wh(i,0,0,t),Tu(i),Mu(),i.scissorTest=!1,i;},fromEquirectangular:function(e){return e.magFilter=lt,e.minFilter=lt,e.generateMipmaps=!1,this.fromCubemap(e);},fromCubemap:function(e){var t=wu(e);return ry(e,t),Tu(t),Mu(),t.scissorTest=!1,t;},compileCubemapShader:function(){In==null&&(In=Eh(),Al(In));},compileEquirectangularShader:function(){On==null&&(On=Mh(),Al(On));},dispose:function(){Vo.dispose(),In?.dispose(),On?.dispose();for(var e=0;e<da.length;e++)da[e].dispose();}};function ty(){for(var e=[],t=[],n=[],r=zn,i=0;i<bh;i++){var a=Math.pow(2,r);t.push(a);var o=1/a;i>zn-Xr?o=_h[i-zn+Xr-1]:i==0&&(o=0),n.push(o);for(var s=1/(a-1),l=-s/2,c=1+s/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],h=6,d=6,p=3,v=2,y=1,m=new Float32Array(p*d*h),x=new Float32Array(v*d*h),_=new Float32Array(y*d*h),w=0;w<h;w++){var T=w%3*2/3-1,M=w>2?0:-1,R=[T,M,0,T+2/3,M,0,T+2/3,M+1,0,T,M,0,T+2/3,M+1,0,T,M+1,0];m.set(R,p*d*w),x.set(u,v*d*w);var S=[w,w,w,w,w,w];_.set(S,y*d*w);}var A=new le();A.setAttribute("position",new we(m,p)),A.setAttribute("uv",new we(x,v)),A.setAttribute("faceIndex",new we(_,y)),e.push(A),r>Xr&&r--;}return{_lodPlanes:e,_sizeLods:t,_sigmas:n};}f(ty,"_createPlanes");function wu(e){var t={magFilter:lt,minFilter:lt,generateMipmaps:!1,type:e?e.type:Xo,format:e?e.format:Sf,encoding:e?e.encoding:Fl,depthBuffer:!1,stencilBuffer:!1},n=Eu(t);return n.depthBuffer=!e,ko=Eu(t),n;}f(wu,"_allocateTargets");function Mu(){ko.dispose(),Ve.setRenderTarget(null);var e=Ve.getSize(new G());Ve.setViewport(0,0,e.x,e.y);}f(Mu,"_cleanup");function ny(e,t,n,r){var i=90,a=1,o=new ht(i,a,t,n),s=[1,1,1,1,-1,1],l=[1,1,-1,-1,-1,1],c=Ve.outputEncoding,u=Ve.toneMapping,h=Ve.toneMappingExposure,d=Ve.getClearColor(),p=Ve.getClearAlpha();Ve.toneMapping=Ll,Ve.toneMappingExposure=1,Ve.outputEncoding=It,e.scale.z*=-1;var v=e.background;if(v&&v.isColor){v.convertSRGBToLinear();var y=Math.max(v.r,v.g,v.b),m=Math.min(Math.max(Math.ceil(Math.log2(y)),-128),127);v=v.multiplyScalar(Math.pow(2,-m));var x=(m+128)/255;Ve.setClearColor(v,x),e.background=null;}Ve.setRenderTarget(r);for(var _=0;_<6;_++){var w=_%3;w==0?(o.up.set(0,s[_],0),o.lookAt(l[_],0,0)):w==1?(o.up.set(0,0,s[_]),o.lookAt(0,l[_],0)):(o.up.set(0,s[_],0),o.lookAt(0,0,l[_])),Vl(w*an,_>2?an:0,an,an),Ve.render(e,o);}Ve.toneMapping=u,Ve.toneMappingExposure=h,Ve.outputEncoding=c,Ve.setClearColor(d,p),e.scale.z*=-1;}f(ny,"_sceneToCubeUV");function ry(e,t){var n=new Gn();e.isCubeTexture?In==null&&(In=Eh()):On==null&&(On=Mh());var r=e.isCubeTexture?In:On;n.add(new nt(da[0],r));var i=r.uniforms;i.envMap.value=e,e.isCubeTexture||i.texelSize.value.set(1/e.image.width,1/e.image.height),i.inputEncoding.value=dn[e.encoding],i.outputEncoding.value=dn[e.encoding],Ve.setRenderTarget(t),Vl(0,0,3*an,2*an),Ve.render(n,Hl);}f(ry,"_textureToCubeUV");function Al(e){var t=new Gn();t.add(new nt(da[0],e)),Ve.compile(t,Hl);}f(Al,"_compileMaterial");function Eu(e){var t=new Et(3*an,3*an,e);return t.texture.mapping=ma,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t;}f(Eu,"_createRenderTarget");function Vl(e,t,n,r){var i=1/Ve.getPixelRatio();e*=i,t*=i,n*=i,r*=i,Ve.setViewport(e,t,n,r),Ve.setScissor(e,t,n,r);}f(Vl,"_setViewport");function Tu(e){var t=Ve.autoClear;Ve.autoClear=!1;for(var n=1;n<bh;n++){var r=Math.sqrt(Ka[n]*Ka[n]-Ka[n-1]*Ka[n-1]),i=_u[(n-1)%_u.length];wh(e,n-1,n,r,i);}Ve.autoClear=t;}f(Tu,"_applyPMREM");function wh(e,t,n,r,i){Su(e,ko,t,n,r,"latitudinal",i),Su(ko,e,n,n,r,"longitudinal",i);}f(wh,"_blur");function Su(e,t,n,r,i,a,o){a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");var s=3,l=new Gn();l.add(new nt(da[r],Vo));var c=Vo.uniforms,u=xu[n]-1,h=isFinite(i)?Math.PI/(2*u):2*Math.PI/(2*Gr-1),d=i/h,p=isFinite(i)?1+Math.floor(s*d):Gr;p>Gr&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Gr}`);for(var v=[],y=0,m=0;m<Gr;++m){var w=m/d,x=Math.exp(-w*w/2);v.push(x),m==0?y+=x:m<p&&(y+=2*x);}for(var m=0;m<v.length;m++)v[m]=v[m]/y;c.envMap.value=e.texture,c.samples.value=p,c.weights.value=v,c.latitudinal.value=a==="latitudinal",o&&(c.poleAxis.value=o),c.dTheta.value=h,c.mipInt.value=zn-n,c.inputEncoding.value=dn[e.texture.encoding],c.outputEncoding.value=dn[e.texture.encoding];var _=xu[r],w=3*Math.max(0,an-2*_),T=(r===0?0:2*an)+2*_*(r>zn-Xr?r-zn+Xr:0);Ve.setRenderTarget(t),Vl(w,T,3*_,2*_),Ve.render(l,Hl);}f(Su,"_halfBlur");function iy(e){var t=new Float32Array(e),n=new E(0,1,0),r=new Wn({defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:dn[It]},outputEncoding:{value:dn[It]}},vertexShader:kl(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform int samples;
uniform float weights[n];
uniform bool latitudinal;
uniform float dTheta;
uniform float mipInt;
uniform vec3 poleAxis;

${Wl()}

#define ENVMAP_TYPE_CUBE_UV
#include <cube_uv_reflection_fragment>

void main() {
	gl_FragColor = vec4(0.0);
	for (int i = 0; i < n; i++) {
		if (i >= samples)
			break;
		for (int dir = -1; dir < 2; dir += 2) {
			if (i == 0 && dir == 1)
				continue;
			vec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);
			if (all(equal(axis, vec3(0.0))))
				axis = cross(vec3(0.0, 1.0, 0.0), vOutputDirection);
			axis = normalize(axis);
			float theta = dTheta * float(dir * i);
			float cosTheta = cos(theta);
			// Rodrigues' axis-angle rotation
			vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross(axis, vOutputDirection) * sin(theta)
					+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);
			gl_FragColor.rgb +=
					weights[i] * bilinearCubeUV(envMap, sampleDirection, mipInt);
		}
	}
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:Fn,depthTest:!1,depthWrite:!1});return r.type="SphericalGaussianBlur",r;}f(iy,"_getBlurShader");function Mh(){var e=new G(1,1),t=new Wn({uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:dn[It]},outputEncoding:{value:dn[It]}},vertexShader:kl(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform vec2 texelSize;

${Wl()}

#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494

void main() {
	gl_FragColor = vec4(0.0);
	vec3 outputDirection = normalize(vOutputDirection);
	vec2 uv;
	uv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;
	uv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;
	vec2 f = fract(uv / texelSize - 0.5);
	uv -= f * texelSize;
	vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x += texelSize.x;
	vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.y += texelSize.y;
	vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x -= texelSize.x;
	vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	vec3 tm = mix(tl, tr, f.x);
	vec3 bm = mix(bl, br, f.x);
	gl_FragColor.rgb = mix(tm, bm, f.y);
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:Fn,depthTest:!1,depthWrite:!1});return t.type="EquirectangularToCubeUV",t;}f(Mh,"_getEquirectShader");function Eh(){var e=new Wn({uniforms:{envMap:{value:null},inputEncoding:{value:dn[It]},outputEncoding:{value:dn[It]}},vertexShader:kl(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform samplerCube envMap;

${Wl()}

void main() {
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:Fn,depthTest:!1,depthWrite:!1});return e.type="CubemapToCubeUV",e;}f(Eh,"_getCubemapShader");function kl(){return`
precision mediump float;
precision mediump int;
attribute vec3 position;
attribute vec2 uv;
attribute float faceIndex;
varying vec3 vOutputDirection;
vec3 getDirection(vec2 uv, float face) {
	uv = 2.0 * uv - 1.0;
	vec3 direction = vec3(uv, 1.0);
	if (face == 0.0) {
		direction = direction.zyx;
		direction.z *= -1.0;
	} else if (face == 1.0) {
		direction = direction.xzy;
		direction.z *= -1.0;
	} else if (face == 3.0) {
		direction = direction.zyx;
		direction.x *= -1.0;
	} else if (face == 4.0) {
		direction = direction.xzy;
		direction.y *= -1.0;
	} else if (face == 5.0) {
		direction.xz *= -1.0;
	}
	return direction;
}
void main() {
	vOutputDirection = getDirection(uv, faceIndex);
	gl_Position = vec4( position, 1.0 );
}
	`;}f(kl,"_getCommonVertexShader");function Wl(){return`
uniform int inputEncoding;
uniform int outputEncoding;

#include <encodings_pars_fragment>

vec4 inputTexelToLinear(vec4 value){
	if(inputEncoding == 0){
		return value;
	}else if(inputEncoding == 1){
		return sRGBToLinear(value);
	}else if(inputEncoding == 2){
		return RGBEToLinear(value);
	}else if(inputEncoding == 3){
		return RGBMToLinear(value, 7.0);
	}else if(inputEncoding == 4){
		return RGBMToLinear(value, 16.0);
	}else if(inputEncoding == 5){
		return RGBDToLinear(value, 256.0);
	}else{
		return GammaToLinear(value, 2.2);
	}
}

vec4 linearToOutputTexel(vec4 value){
	if(outputEncoding == 0){
		return value;
	}else if(outputEncoding == 1){
		return LinearTosRGB(value);
	}else if(outputEncoding == 2){
		return LinearToRGBE(value);
	}else if(outputEncoding == 3){
		return LinearToRGBM(value, 7.0);
	}else if(outputEncoding == 4){
		return LinearToRGBM(value, 16.0);
	}else if(outputEncoding == 5){
		return LinearToRGBD(value, 256.0);
	}else{
		return LinearToGamma(value, 2.2);
	}
}

vec4 envMapTexelToLinear(vec4 color) {
	return inputTexelToLinear(color);
}
	`;}f(Wl,"_getEncodings");me.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(me.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e;};Object.assign(Nn.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getPoints(e);return this.createGeometry(t);},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getSpacedPoints(e);return this.createGeometry(t);},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var t=new Me(),n=0,r=e.length;n<r;n++){var i=e[n];t.vertices.push(new E(i.x,i.y,i.z||0));}return t;}});Object.assign(rn.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e);}});function ay(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),St.call(this,e),this.type="catmullrom",this.closed=!0;}f(ay,"ClosedSplineCurve3");ay.prototype=Object.create(St.prototype);function oy(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),St.call(this,e),this.type="catmullrom";}f(oy,"SplineCurve3");oy.prototype=Object.create(St.prototype);function Th(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),St.call(this,e),this.type="catmullrom";}f(Th,"Spline");Th.prototype=Object.create(St.prototype);Object.assign(Th.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.");},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.");},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.");}});El.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");};ca.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.");};Object.assign(je.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),lh.extractUrlBase(e);}});je.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.");},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.");}};Object.assign(_l.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e);}});Object.assign(gh.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e);},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty();},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e);},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e);}});Object.assign(pn.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e);},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty();},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e);},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e);},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e);}});yh.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e);};Object.assign(Pe,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random();},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Pe.floorPowerOfTwo(e);},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Pe.ceilPowerOfTwo(e);}});Object.assign(yt.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t);},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this);},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");},applyToBuffer:function(e){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e);},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");}});Object.assign(De.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e);},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t);},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new E().setFromMatrixColumn(this,3);},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e);},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this);},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this);},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this);},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this);},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.");},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.");},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.");},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.");},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.");},applyToBuffer:function(e){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e);},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");},makeFrustum:function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a);}});nn.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e);};gt.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this);};Object.assign(vi.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e);},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e);},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e);}});Object.assign(vt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea();},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t);},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e);},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e);},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e);}});Object.assign(vt,{barycoordFromPoint:function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),vt.getBarycoord(e,t,n,r,i);},normal:function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),vt.getNormal(e,t,n,r);}});Object.assign(lr.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e);},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ei(this,e);},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ni(this,e);}});Object.assign(G.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n);},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e);},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength();}});Object.assign(E.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e);},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e);},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e);},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e);},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n);},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e);},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength();}});Object.assign(Ze.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n);},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength();}});Object.assign(Me.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.");},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.");}});Object.assign(ie.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e);},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e);},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");}});Object.defineProperties(ie.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order;},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e;}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");}}});Object.assign(nt.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");}});Object.defineProperties(nt.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),$f;},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");}}});Object.defineProperties(po.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels;}}});Object.defineProperty(js.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.");},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.");}});vo.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.");};Object.defineProperty(me.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions;},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e;}});ht.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e);};Object.defineProperties(Ke.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.");}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e;}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e;}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e;}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e;}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e;}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e;}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e;}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e;}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.");}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e;}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e;}}});Object.defineProperties(we.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length;}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ni;},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ni);}}});Object.assign(we.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?Ni:Yo),this;},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");}});Object.assign(le.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e);},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new we(arguments[1],arguments[2]))):e==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t);},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t);},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups();},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e);}});Object.defineProperties(le.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups;}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups;}}});Object.defineProperties(Vn.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Ni;},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e);}}});Object.assign(Vn.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?Ni:Yo),this;},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");}});Object.assign(wn.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.");},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.");},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.");}});Object.defineProperties(wl.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this;}}});Object.defineProperties(be.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.");},set:function(){console.warn("THREE.Material: .wrapAround has been removed.");}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.");},set:function(){console.warn("THREE.Material: .overdraw has been removed.");}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new se();}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===Lu;}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask;},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e;}}});Object.defineProperties(mr.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1;},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");}}});Object.defineProperties(Lt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives;},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e;}}});Object.assign(eh.prototype,{clearTarget:function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r);},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e);},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget();},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy();},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision;},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset();},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float");},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float");},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives");},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc");},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc");},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax");},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures;},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays");},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e);},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel();}});Object.defineProperties(eh.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled;},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e;}},shadowMapType:{get:function(){return this.shadowMap.type;},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e;}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext();}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr;}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1;},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1;},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=e===!0?Nl:It;}}});Object.defineProperties(Qu.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");}}});Object.defineProperties(hr.prototype,{activeCubeFace:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().");}},activeMipMapLevel:{set:function(){console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().");}}});Object.defineProperties(Et.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS;},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e;}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT;},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e;}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter;},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e;}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter;},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e;}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy;},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e;}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset;},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e;}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat;},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e;}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format;},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e;}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type;},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e;}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps;},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e;}}});Object.defineProperties(sa.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this,n=new bl();return n.load(e,function(r){t.setBuffer(r);}),this;}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).");}}});dh.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData();};Ui.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t);};ur.crossOrigin=void 0;ur.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new al();i.setCrossOrigin(this.crossOrigin);var a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a;};ur.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new il();i.setCrossOrigin(this.crossOrigin);var a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a;};ur.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");};ur.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Gh}}));var $o=f(function(e,t){t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new E(),this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:Qt.ROTATE,MIDDLE:Qt.DOLLY,RIGHT:Qt.PAN},this.touches={ONE:An.ROTATE,TWO:An.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return c.phi;},this.getAzimuthalAngle=function(){return c.theta;},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom;},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(r),n.update(),s=o.NONE;},this.update=function(){var O=new E(),J=new gt().setFromUnitVectors(e.up,new E(0,1,0)),X=J.clone().inverse(),te=new E(),ae=new gt();return f(function(){var Y=n.object.position;return O.copy(Y).sub(n.target),O.applyQuaternion(J),c.setFromVector3(O),n.autoRotate&&s===o.NONE&&I(S()),n.enableDamping?(c.theta+=u.theta*n.dampingFactor,c.phi+=u.phi*n.dampingFactor):(c.theta+=u.theta,c.phi+=u.phi),c.theta=Math.max(n.minAzimuthAngle,Math.min(n.maxAzimuthAngle,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=h,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),n.enableDamping===!0?n.target.addScaledVector(d,n.dampingFactor):n.target.add(d),O.setFromSpherical(c),O.applyQuaternion(X),Y.copy(n.target).add(O),n.object.lookAt(n.target),n.enableDamping===!0?(u.theta*=1-n.dampingFactor,u.phi*=1-n.dampingFactor,d.multiplyScalar(1-n.dampingFactor)):(u.set(0,0,0),d.set(0,0,0)),h=1,p||te.distanceToSquared(n.object.position)>l||8*(1-ae.dot(n.object.quaternion))>l?(n.dispatchEvent(r),te.copy(n.object.position),ae.copy(n.object.quaternion),p=!1,!0):!1;},"update");}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ye,!1),n.domElement.removeEventListener("mousedown",et,!1),n.domElement.removeEventListener("wheel",ee,!1),n.domElement.removeEventListener("touchstart",Ce,!1),n.domElement.removeEventListener("touchend",fe,!1),n.domElement.removeEventListener("touchmove",ve,!1),document.removeEventListener("mousemove",L,!1),document.removeEventListener("mouseup",P,!1),n.domElement.removeEventListener("keydown",j,!1);};var n=this,r={type:"change"},i={type:"start"},a={type:"end"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},s=o.NONE,l=1e-6,c=new Jo(),u=new Jo(),h=1,d=new E(),p=!1,v=new G(),y=new G(),m=new G(),x=new G(),_=new G(),w=new G(),T=new G(),M=new G(),R=new G();function S(){return 2*Math.PI/60/60*n.autoRotateSpeed;}f(S,"getAutoRotationAngle");function A(){return Math.pow(.95,n.zoomSpeed);}f(A,"getZoomScale");function I(O){u.theta-=O;}f(I,"rotateLeft");function N(O){u.phi-=O;}f(N,"rotateUp");var F=function(){var O=new E();return f(function(X,te){O.setFromMatrixColumn(te,0),O.multiplyScalar(-X),d.add(O);},"panLeft");}(),z=function(){var O=new E();return f(function(X,te){n.screenSpacePanning===!0?O.setFromMatrixColumn(te,1):(O.setFromMatrixColumn(te,0),O.crossVectors(n.object.up,O)),O.multiplyScalar(X),d.add(O);},"panUp");}(),H=function(){var O=new E();return f(function(X,te){var ae=n.domElement;if(n.object.isPerspectiveCamera){var D=n.object.position;O.copy(D).sub(n.target);var Y=O.length();Y*=Math.tan(n.object.fov/2*Math.PI/180),F(2*X*Y/ae.clientHeight,n.object.matrix),z(2*te*Y/ae.clientHeight,n.object.matrix);}else n.object.isOrthographicCamera?(F(X*(n.object.right-n.object.left)/n.object.zoom/ae.clientWidth,n.object.matrix),z(te*(n.object.top-n.object.bottom)/n.object.zoom/ae.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1);},"pan");}();function B(O){n.object.isPerspectiveCamera?h/=O:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*O)),n.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1);}f(B,"dollyIn");function U(O){n.object.isPerspectiveCamera?h*=O:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/O)),n.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1);}f(U,"dollyOut");function W(O){v.set(O.clientX,O.clientY);}f(W,"handleMouseDownRotate");function $(O){T.set(O.clientX,O.clientY);}f($,"handleMouseDownDolly");function oe(O){x.set(O.clientX,O.clientY);}f(oe,"handleMouseDownPan");function Z(O){y.set(O.clientX,O.clientY),m.subVectors(y,v).multiplyScalar(n.rotateSpeed);var J=n.domElement;I(2*Math.PI*m.x/J.clientHeight),N(2*Math.PI*m.y/J.clientHeight),v.copy(y),n.update();}f(Z,"handleMouseMoveRotate");function K(O){M.set(O.clientX,O.clientY),R.subVectors(M,T),R.y>0?B(A()):R.y<0&&U(A()),T.copy(M),n.update();}f(K,"handleMouseMoveDolly");function ce(O){_.set(O.clientX,O.clientY),w.subVectors(_,x).multiplyScalar(n.panSpeed),H(w.x,w.y),x.copy(_),n.update();}f(ce,"handleMouseMovePan");function Be(){}f(Be,"handleMouseUp");function Ue(O){O.deltaY<0?U(A()):O.deltaY>0&&B(A()),n.update();}f(Ue,"handleMouseWheel");function Ne(O){var J=!1;switch(O.keyCode){case n.keys.UP:H(0,n.keyPanSpeed),J=!0;break;case n.keys.BOTTOM:H(0,-n.keyPanSpeed),J=!0;break;case n.keys.LEFT:H(n.keyPanSpeed,0),J=!0;break;case n.keys.RIGHT:H(-n.keyPanSpeed,0),J=!0;break;}J&&(O.preventDefault(),n.update());}f(Ne,"handleKeyDown");function Te(O){if(O.touches.length==1)v.set(O.touches[0].pageX,O.touches[0].pageY);else{var J=.5*(O.touches[0].pageX+O.touches[1].pageX),X=.5*(O.touches[0].pageY+O.touches[1].pageY);v.set(J,X);}}f(Te,"handleTouchStartRotate");function V(O){if(O.touches.length==1)x.set(O.touches[0].pageX,O.touches[0].pageY);else{var J=.5*(O.touches[0].pageX+O.touches[1].pageX),X=.5*(O.touches[0].pageY+O.touches[1].pageY);x.set(J,X);}}f(V,"handleTouchStartPan");function ze(O){var J=O.touches[0].pageX-O.touches[1].pageX,X=O.touches[0].pageY-O.touches[1].pageY,te=Math.sqrt(J*J+X*X);T.set(0,te);}f(ze,"handleTouchStartDolly");function Ee(O){n.enableZoom&&ze(O),n.enablePan&&V(O);}f(Ee,"handleTouchStartDollyPan");function Ge(O){n.enableZoom&&ze(O),n.enableRotate&&Te(O);}f(Ge,"handleTouchStartDollyRotate");function ge(O){if(O.touches.length==1)y.set(O.touches[0].pageX,O.touches[0].pageY);else{var J=.5*(O.touches[0].pageX+O.touches[1].pageX),X=.5*(O.touches[0].pageY+O.touches[1].pageY);y.set(J,X);}m.subVectors(y,v).multiplyScalar(n.rotateSpeed);var te=n.domElement;I(2*Math.PI*m.x/te.clientHeight),N(2*Math.PI*m.y/te.clientHeight),v.copy(y);}f(ge,"handleTouchMoveRotate");function q(O){if(O.touches.length==1)_.set(O.touches[0].pageX,O.touches[0].pageY);else{var J=.5*(O.touches[0].pageX+O.touches[1].pageX),X=.5*(O.touches[0].pageY+O.touches[1].pageY);_.set(J,X);}w.subVectors(_,x).multiplyScalar(n.panSpeed),H(w.x,w.y),x.copy(_);}f(q,"handleTouchMovePan");function Le(O){var J=O.touches[0].pageX-O.touches[1].pageX,X=O.touches[0].pageY-O.touches[1].pageY,te=Math.sqrt(J*J+X*X);M.set(0,te),R.set(0,Math.pow(M.y/T.y,n.zoomSpeed)),B(R.y),T.copy(M);}f(Le,"handleTouchMoveDolly");function He(O){n.enableZoom&&Le(O),n.enablePan&&q(O);}f(He,"handleTouchMoveDollyPan");function $e(O){n.enableZoom&&Le(O),n.enableRotate&&ge(O);}f($e,"handleTouchMoveDollyRotate");function Ut(){}f(Ut,"handleTouchEnd");function et(O){if(n.enabled!==!1){switch(O.preventDefault(),n.domElement.focus?n.domElement.focus():window.focus(),O.button){case 0:switch(n.mouseButtons.LEFT){case Qt.ROTATE:if(O.ctrlKey||O.metaKey||O.shiftKey){if(n.enablePan===!1)return;oe(O),s=o.PAN;}else{if(n.enableRotate===!1)return;W(O),s=o.ROTATE;}break;case Qt.PAN:if(O.ctrlKey||O.metaKey||O.shiftKey){if(n.enableRotate===!1)return;W(O),s=o.ROTATE;}else{if(n.enablePan===!1)return;oe(O),s=o.PAN;}break;default:s=o.NONE;}break;case 1:switch(n.mouseButtons.MIDDLE){case Qt.DOLLY:if(n.enableZoom===!1)return;$(O),s=o.DOLLY;break;default:s=o.NONE;}break;case 2:switch(n.mouseButtons.RIGHT){case Qt.ROTATE:if(n.enableRotate===!1)return;W(O),s=o.ROTATE;break;case Qt.PAN:if(n.enablePan===!1)return;oe(O),s=o.PAN;break;default:s=o.NONE;}break;}s!==o.NONE&&(document.addEventListener("mousemove",L,!1),document.addEventListener("mouseup",P,!1),n.dispatchEvent(i));}}f(et,"onMouseDown");function L(O){if(n.enabled!==!1)switch(O.preventDefault(),s){case o.ROTATE:if(n.enableRotate===!1)return;Z(O);break;case o.DOLLY:if(n.enableZoom===!1)return;K(O);break;case o.PAN:if(n.enablePan===!1)return;ce(O);break;}}f(L,"onMouseMove");function P(O){n.enabled!==!1&&(document.removeEventListener("mousemove",L,!1),document.removeEventListener("mouseup",P,!1),n.dispatchEvent(a),s=o.NONE);}f(P,"onMouseUp");function ee(O){n.enabled===!1||n.enableZoom===!1||s!==o.NONE&&s!==o.ROTATE||(O.preventDefault(),O.stopPropagation(),n.dispatchEvent(i),Ue(O),n.dispatchEvent(a));}f(ee,"onMouseWheel");function j(O){n.enabled===!1||n.enableKeys===!1||n.enablePan===!1||Ne(O);}f(j,"onKeyDown");function Ce(O){if(n.enabled!==!1){switch(O.preventDefault(),O.touches.length){case 1:switch(n.touches.ONE){case An.ROTATE:if(n.enableRotate===!1)return;Te(O),s=o.TOUCH_ROTATE;break;case An.PAN:if(n.enablePan===!1)return;V(O),s=o.TOUCH_PAN;break;default:s=o.NONE;}break;case 2:switch(n.touches.TWO){case An.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ee(O),s=o.TOUCH_DOLLY_PAN;break;case An.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Ge(O),s=o.TOUCH_DOLLY_ROTATE;break;default:s=o.NONE;}break;default:s=o.NONE;}s!==o.NONE&&n.dispatchEvent(i);}}f(Ce,"onTouchStart");function ve(O){if(n.enabled!==!1)switch(O.preventDefault(),O.stopPropagation(),s){case o.TOUCH_ROTATE:if(n.enableRotate===!1)return;ge(O),n.update();break;case o.TOUCH_PAN:if(n.enablePan===!1)return;q(O),n.update();break;case o.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;He(O),n.update();break;case o.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;$e(O),n.update();break;default:s=o.NONE;}}f(ve,"onTouchMove");function fe(O){n.enabled!==!1&&(n.dispatchEvent(a),s=o.NONE);}f(fe,"onTouchEnd");function ye(O){n.enabled!==!1&&O.preventDefault();}f(ye,"onContextMenu"),n.domElement.addEventListener("contextmenu",ye,!1),n.domElement.addEventListener("mousedown",et,!1),n.domElement.addEventListener("wheel",ee,!1),n.domElement.addEventListener("touchstart",Ce,!1),n.domElement.addEventListener("touchend",fe,!1),n.domElement.addEventListener("touchmove",ve,!1),n.domElement.addEventListener("keydown",j,!1),n.domElement.tabIndex===-1&&(n.domElement.tabIndex=0),this.update();},"OrbitControls");$o.prototype=Object.create(Wt.prototype);$o.prototype.constructor=$o;var jl=f(function(e,t){$o.call(this,e,t),this.mouseButtons.LEFT=Qt.PAN,this.mouseButtons.RIGHT=Qt.ROTATE,this.touches.ONE=An.PAN,this.touches.TWO=An.DOLLY_ROTATE;},"MapControls");jl.prototype=Object.create(Wt.prototype);jl.prototype.constructor=jl;export{jl as MapControls,$o as OrbitControls};//!\ DECLARE ALIAS AFTER assign prototype !